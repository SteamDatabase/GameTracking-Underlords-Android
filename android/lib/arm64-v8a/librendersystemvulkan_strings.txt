~!%^&*()-+=|,.<>/?;:[]{}#\
=============
=	 ();,
>{}()':
 -> %
-> $$ =
-@),)
;()[]
!^   
!:@=!
!.@=!
!"@=!
!*@=!
!&@=!
!	@=!
'":|;
(...)
([]())
($@)*
(*)=@
) -> 
)*)=@
[] = {
{}[]=, 	
{}[]()=&, 	
{													
{																	
};													
};																	
}													
*	)@)
	 ();,
	!@)?
	]@))}@
	*	}`
													
																	
 +0000
00000000-0000-0000-0000-000000000000
00003333
0123456789)"
0123456789ABCDEF0123456789ABCDEF
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 $(,048<AEIMQUY]aeimquy}
	!	&	+	0	6	;	@	F	K	P	U	[	a	g	m	s	y	
06`*J9d"B
06!L@
/0@9n9
0)a7@
(0A9h
0: Bilinear, 1: Trilinear, 2: Aniso 2x, 3: Aniso 4x, 4: Aniso 8x, 5: Aniso 16x
!0D9a
 0@P`p
0: Use classic mode. 1: Use per-thread persistently mapped buffers.
 ; 0x
0x%016llX
0x%08x, Revision %d
(0@yh2
0@y_!!ka
?!@1`
-1.000000
10ConCommand
10IAppSystem
11CFunctorJob
11CRefCountedI20CRefCountServiceBaseILb1E6CRefMTEE
11IRefCounted
%-120s
%-120s - %s
1.2.7
12CDeviceFence
12CEmptyConVar
12CRefCounted1I11IRefCounted20CRefCountServiceBaseILb1E6CRefMTEE
12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE
12CRenderUtils
12CTextureBase
12CThreadedJob
12CVulkanImage
12IRenderUtils
[1;30m
13CLayoutInsert
13CVulkanObjectIP11VkSampler_TXadL_Z16vkDestroySamplerEEE
13CVulkanObjectIP13VkImageView_TXadL_Z18vkDestroyImageViewEEE
13CVulkanObjectIP9VkFence_TXadL_Z14vkDestroyFenceEEE
%-.13e
13IRenderDevice
14CBaseAppSystemI12IRenderUtilsE
14CBaseAppSystemI16IRenderDeviceMgrE
14ConCommandBase
14CSwapChainBase
14CTextureVulkan
14CVfxShaderFile
14IRenderContext
14q,	
1/4 stride is too large:
1.5.13
1.5.2
15CMemberFunctor1IP26CParallelProcessorAbstractI18CParallelProcessorIi27CMemberFuncJobItemProcessorIi11CCallQueueTI8CTSQueueIP8CFunctorLb0EEES8_ELi1EEEMSB_FviEi12CRefCounted1IS5_20CRefCountServiceBaseILb1E6CRefMTEE18CFuncMemPolicyNoneE
15CMemberFunctor4IP19CTextureManagerBaseMS0_FvP25IAsyncResourceDataRequestP12CTextureBase22TextureSpecification_tiES3_S5_S6_i12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE18CFuncMemPolicyNoneE
15CMemberFunctor6IP13CSOAContainerMS0_Fviiiii13__Float32x4_tEiiiiiS2_12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE18CFuncMemPolicyNoneE
15CMemberFunctor7IP13CSOAContainerMS0_FviiiiPKS0_iiEiiiiS3_ii12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE18CFuncMemPolicyNoneE
15CMemberFunctor7IP19CTextureManagerBaseMS0_FvP12CTextureBase12ResourceId_tPvi22TextureSpecification_ti23TextureBitsMemoryType_tES3_S4_S5_iS6_iS7_12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE18CFuncMemPolicyNoneE
15CPipelineVulkan
15CRenderPassDesc
15CRenderResource
15CTier0AppSystemI12IRenderUtilsE
15CTier0AppSystemI16IRenderDeviceMgrE
15CTier1AppSystemI12IRenderUtilsLi0EE
15CTier1AppSystemI16IRenderDeviceMgrLi0EE
15CTier2AppSystemI12IRenderUtilsLi0EE
15CTier2AppSystemI16IRenderDeviceMgrLi0EE
%.15lf
16-bit arrays not supported
16-bit hexadecimal literal
16-bit integer literal
16-bit literal
16-bit  literal
16-bit octal literal
16-bit or 32-bit 
16-bit signed integer
16-bit signed integer vector
16-bit unsigned integer
16-bit unsigned integer literal
16-bit unsigned integer vector
16-bit vectors only take vector types
16CColorFormatBase
16CDefaultAccessor
16CDeviceFenceBase
16CGlslangIncluder
16CIndexBufferBase
16CInputLayoutDictI18CInputLayoutVulkanE
16CSwapChainVulkan
16ICommandCallback
16IRenderDeviceMgr
17CMemoryRefTracker
17CRenderDeviceBase
17CRenderPassVulkan
17CRenderThreadBase
17CShaderVulkanBase
17CVertexBufferBase
18CBlendStateCreator
18CColorFormatVulkan
18CIndexBufferVulkan
18CRenderContextBase
18CShaderTableVulkan
18ITSHashConstructorI20CSamplerStateBindingE
18ITSHashConstructorI24CTextureSequenceRecord_tE
18ITSHashConstructorIP19InputLayoutVulkan_tE
18ITSHashConstructorIPvE
!)19BJRZcks{
19CRenderDeviceVulkan
19CRenderThreadVulkan
19CSchemaRegistration
19CTextureManagerBase
19CVertexBufferVulkan
19CVertexShaderVulkan
19IKeyValuesErrorSpew
19IRenderShaderBuffer
!1AQaq
!>@=1B
1bQJ1~
1DBlend
1.#IND
-1.#INF
+1.#INF
@#1,>S,
%!~1,>S
@1,S,>S,,
%1,S,>S,
~*1,V
/1V?O	
/1V?OA
/1V?OR
*1x0x
!2@=!
2*?)0"
20CDescriptorSetVulkan
20CMemoryManagerVulkan
20CPostConnectCallback
20CRefCountServiceBaseILb1E6CRefMTE
20CRenderContextVulkan
20CRenderDeviceMgrBase
20CSamplerStateCreator
20CVfxShaderFileVulkan
20IHibernationListener
20IResourceTypeManager
21CConstantBufferVulkan
21CFramebufferMgrVulkan
21CRenderHardwareConfig
21CSheetHashConstructor
21CTextureInfoChunkBase
21CTextureManagerVulkan
21IRenderHardwareConfig
22CPipelineManagerVulkan
22CRenderDeviceMgrVulkan
22CSchemaInstallCallback
22in8
22IStreamBuilderCallbackI14CCommandStreamE
22IToolsResourceListener
23CRasterizerStateCreator
23CTextureStreamingHelper
23IConCommandBaseAccessor
24CRenderPassManagerVulkan
24CTextureManagerVulkanNew
25CConCommandMemberAccessorI17CRenderDeviceBaseE
25CConCommandMemberAccessorI18CShaderTableVulkanE
25CConCommandMemberAccessorI19CTextureManagerBaseE
25CConCommandMemberAccessorI20CMemoryManagerVulkanE
25CConCommandMemberAccessorI21CFramebufferMgrVulkanE
25CConCommandMemberAccessorI22CPipelineManagerVulkanE
25CDepthStencilStateCreator
25ITextureResidencyListener
26CDefaultKeyValuesErrorSpew
26ICommandCompletionCallback
27CSchemaUtlVectorManipulatorI10CUtlVectorI25VsInputSignatureElement_t10CUtlMemoryIS1_iEES1_E
2_!7k
28ISchemaCollectionManipulator
29CMemoryReferenceManagerVulkan
2,	@9L
2	A	9
2	a@9Ia
"2BRbr
2(CA9
2 Entry points cannot share the same name and ExecutionMode.
2Gio8
2	h(8
2	h(8H
2hB	9
2hBE9h
2hj)8
2hrU9
2Hs.9
2	i4xh
2*i58
2ij(8
2ij(8F
2ij(8h
2+imx
2*iwx
2+i*x
2	i+x
2?".k
2KA@9*9
2Kkj8k
2kR_8i
2L%@x+
2njj8l
2Nt@y
2oi-x
2Pk@)
@#2,>S,,
$&2,S
$2,>S,,
&2,>S,,,
%!2,>S,
@2,S,>S,,,
%2,S,>S,,
2x"@9
	2z"@
3_0_gl
3_0_gles
30i*x
3_1_gles
32-bit signed integer
32-bit signed integer vector
32-bit signed literal
32-bit unsigned integer
32-bit unsigned integer vector
32CVfxShaderFileRenderShaderBuffer
3)5L*H
38CSchemaRegistration_rendersystemvulkan
	3@9)
	3@9j
3B9!P
#3CScs
        %3d %3d %3d %3d %3d %3d %3d %3d
 [%.3f server clamped to %.3f]
3Qi+x
%!3,>S,,
%3,S,>S,,,
3-'@x
3Z8	E
4_0_gl
4_0_vulkan
4_1_gl
4_1_vulkan
4.60 glslang Khronos. 13.3381
(4@9	
4(@@9(
4@9(	
4@9H	
4	!@9I
.4@)((A)+0B))
4	!A9
4a"J9
4(CA9
4D#B)I
$4DTdt
4GdEy#
4h&@9(
4h.A9
4h&A9
4hb@9
4hBB9H
4h"D9h
4hf@9
4hf@9(
4h"F9(
4h"F9h
4hfA9
4hFB9
4hFB9h
4HKA9(
4h"O9h
4Hw@y
4ifA9i
4i*@y
4	iy8)
4j&C)k"@
4jj8l
4k&Aij
4#L@9B
4mkl8mi,8
4q:Aip
@4,>S,,
%4,>S,
@4,S,>S,,,
%4,S,>S,,
        %4u %4u %4u %4u %4u %4u %4u %4u
4	u@y?
4`v@ygV
5_0_gl
5_0_vulkan
)5@9)}
	5@9)
*5@9J
5aFEy`JEy
5@a@y
5@A@y`
5`bJ9
)5Byi*
5Ca@y
5CA@yc
5C!@y
%5EUeu
5`FE9
5hf@9
5hf@9(
5hF@9
5HGA9
5h&L9
5h"L9h
5hv@y
5hv@yi
5ibA9h
)5IJ(}
5ijA9i
5i"L9?
5i.@y
5`>J9
5kB'9	AC
5@)N$
5r_texturefilteringquality
5Ua@y
5UA@yu
5uv@y
5U!@y
5`v@y
=5$@x
5X? 7
)5@y?
5@!@y
)5@yi*
: 64-bit atomics require the Int64Atomics capability
64-bit hexadecimal literal
64-bit integer
64-bit integer literal
64-bit integer vector
64-bit literal
64-bit octal literal
64-bit unsigned integer
64-bit unsigned integer literal
64-bit unsigned integer vector
6AiI}@
6bBE9cFE9B|
`6`BD
6b"J9_
6ConVar
&6FVfv
(6h*@9
6h*@9
6hb@9
6hbC9h
6h"D9H
6hv@y
6Hw@y
6ib@9
 6`"J9
6jb@9J
6`v@y
6x"@9
6@y_! k
6@y?! k
6@y?! kC
6Ysn9
@7('@
7 ! 7
(7@9H
7	aI9I
7`B@y
7d"J9bREy
 7F507
'7GWgw
 7h"@
7h*@9
7hb@9h
7hbA9
7hBg9
7h*C9(
7hf@9
7hf@9(
7hf@9h
 7hN5
7ib@9
7ib@9i
7IConVar
	*_!7k
?!7ka
7NsZ .
 7P/07
 7t"@
7Z	 7
86 @B9
86"@B9
!87@"
87`^A
87aZA
87h2@
8@9c8@9
8	A@yI
8b  16-May-2010
8-bit arrays not supported
8-bit signed integer
8-bit signed integer vector
8-bit unsigned integer
8-bit unsigned integer vector
8-bit vectors only take vector types
8CFmtStrNILi256ELb0EE
8CFunctor
_8cnA
8dhb8D
8Dhc8D
&8g|@
(8hn@
(8HXhx
8ix8+
8ix8sJ
_8Jhj8*
_8ji)8	
8Kkj8k
8m-@9
8mjrx
8- or 16-bit loads must be a scalar, vector or matrix type
8- or 16-bit stores must be a scalar, vector or matrix type
8- or 16-bit types can only be used with width-only conversions
8x9,7
`"@9	
|&@9{#
 @9( 
!@9	!
.@9)	
.@9*]
(@@9	
)=@9)}
)!@9)
))@9	
@@=9 
@9`>@
@9)!@
@9)%@
@9{#@
@9	|	
&@9(	
&@9*]
#@@9	
#@9)	
	!@9	
	@@9(
	#@9*
	@91~
9.1.15
92ji8R
@92yr
9(4A9h
"@9?5
9,5@8K
@96;@
9(8A9h
)9@9)}
@9-	@9.
@9+	@9,
@9		@9
	9@9)
9,	@9)
9*	@9)
9*	@9*
. @9/$@90(@918@9.}
*9@9J
@9?aEkA
9aia8
9Aia8
9AIb8
9bib8
9Bib8
9BIf8!
@9C`Ey
@9C\Ey
9	D@8
@9DDFy	 
9@DEy 
@9@DFy
9DHEyd
9did8
9did8!lR
9did8RJ
9dif8
9DLEy
9DLEyc
9DPEy
@9DPFy
@@9DXA
9*E@8?
 @9e:B
@@9E<H
9eie8
9Eie8
9eig8
9`FE9
@9F\Ey(
9Fif8
9Fif8a
9Gig8
@9GPFy
 @9gR
(`@9h
(@@9H
@@9H	
9H4@9
@9`h`8 
9h"@9	
9hb@9
@9H`Ey&
9@HEy 
9hf@9(
"@9hf@9i
@9@HFy
9	hi8I
9Hig8)!
9hih8(
9Hih8
9Hih8!
9Hih8?
9Hih8h
9Hih8m
9Hil8
9Hil8?
9Him8l
9His8
9Hit8s
9Hiu8
!@9hj
9hji8
@9hV@
9hv@9
)%@9i
@9i&@
#@9i	
@@9I#
@9I}	
*!@9_I
9`i`8
9@i`8
9@I`8
9`i`81J
9@i`81J
9@i`8Y
"@9i"@9
9`ia81
9@ia81
@9IA@9(}
9+ic8
9+ig8
9(ih8h
9	ii8(
9+ik8
9+is8c
	9ivB
9+iw8c
@9Iyi
)9IYiy
*=@9J
9J	@9*	
9J%@9j
@9JA@9J}
9jij8
!9k`	
9?k(8
9?k(8Q
9k=@9
9k	@9
9K	@9+	
@9?`@kA
9Kkj8k
9Kkj8k}
9@LEy 
@9@LFy
9Li|8
9Lil8
9Lim8M
9Liv8
9m-@9
@9Mi+8M
9mic8
9mim8
9Mim8
9Mim8)!
9mis8
9Nin8
@9Nin8
9Nin8m
+@9oB
9Oio81
9@PEy
9@PEy 
9Pi`8BL
9Pip8k1
9pip8Q
9piq8?
9pir81
9qi`8R
9Qi`8R
9qiq8
9Qiq8
9qiq8JA
9Qiq8kA
9Qir8?
9qir8?a
@9Rhn8Q~
9Ria8
9rir81
9Rir81
9Rir8d
@9s>@
@9)	T
9Ti|8
9Tit8
@9)UD
@9v"@
@9v*@
@9w6@
@9wiu
/9W?O
/9W?OZ
9(wU9i
@9x;@
@9x"@
@9x*@
@9x*@9{"@9!<
@9)	@y
@9(yh
@9)yh
@9+	@yHA
@9+	@yHM
@9z:@
9@z(|`
9@zH~`
a2@yh2@y
*,A)($@),4B)o
A8kB@9l
*a@9_
+a@9?
+a@9*	
	a@9?
	a@9	
*A@9+
A95)^
A95+^
A959Q
A95{b
A95[e
A95)G
A95+G
A95;h
A95I[
A95iA
A95iX
A95	J
A95{K
A95K[
A95kA
A95KD
A95ko
A95Kr
A95kX
A95[N
A95;Q
A95+u
A95{y
A95yK
A95YN
A@9(9
a@9+a
/A9a:J9`>
	a@9i
	a@9I
A9iji8
A9iji8(
*a@9j
	 A9J
A9j.G
	aA9)
+aA9F
	aA9I	
	AA9i
*aA9j
aA9`m@
A(aN!
$	A)Ar
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789
aBE9a
A block must end with a branch instruction.
Aboring OnReadPixels because of GPU memory allocation failure.
abort
AbsISubINTEL
Absolute value
AbsUSubINTEL
A BuiltIn variable (id 
aB@ya
	aC9)
	aC9I
	aC9I	 6
accelerationStructureNV can only be used in uniform variables or function parameters:
$accept
access qualifier
According to the 
: according to the Vulkan spec atomic Result Type needs to be a 32-bit int scalar type
According to the Vulkan spec BuiltIn 
According to the Vulkan spec BuiltIn HelperInvocation variable needs to be a bool scalar. 
According to the Vulkan spec BuiltIn InvocationId variable needs to be a 32-bit int scalar. 
According to the Vulkan spec BuiltIn PatchVertices variable needs to be a 32-bit int scalar. 
According to the Vulkan spec BuiltIn PointCoord variable needs to be a 2-component 32-bit float vector. 
According to the Vulkan spec BuiltIn PointSize variable needs to be a 32-bit float scalar. 
According to the Vulkan spec BuiltIn Position variable needs to be a 4-component 32-bit float vector. 
According to the Vulkan spec BuiltIn PrimitiveId variable needs to be a 32-bit int scalar. 
According to the Vulkan spec BuiltIn SampleId variable needs to be a 32-bit int scalar. 
According to the Vulkan spec BuiltIn SampleMask variable needs to be a 32-bit int array. 
According to the Vulkan spec BuiltIn SamplePosition variable needs to be a 2-component 32-bit float vector. 
According to the Vulkan spec BuiltIn TessCoord variable needs to be a 3-component 32-bit float vector. 
According to the Vulkan spec BuiltIn TessLevelOuter variable needs to be a 2-component 32-bit float array. 
According to the Vulkan spec BuiltIn TessLevelOuter variable needs to be a 4-component 32-bit float array. 
According to the WebGPU spec BuiltIn LocalInvocationIndex variable needs to be a 32-bit int.
According to the WebGPU spec BuiltIn Position variable needs to be a 4-component 32-bit float vector. 
ACCSTRUCTNV
acosh
Acosh
acospi
AcquireVfxShaderFile: Failed to unserialize CVfxShaderFile.  Is your shadercache out-of-date?  Try deleting it.
AcquireVfxShaderFile: Failed to unserialize CVfxShaderFileVulkan.  Is your shadercache out-of-date?  Try deleting it.
active
-adapter
ADD_ASSIGN
addInvocations
addInvocationsAMD
addInvocationsExclusiveScan
addInvocationsExclusiveScanAMD
addInvocationsExclusiveScanNonUniform
addInvocationsExclusiveScanNonUniformAMD
addInvocationsInclusiveScan
addInvocationsInclusiveScanAMD
addInvocationsInclusiveScanNonUniform
addInvocationsInclusiveScanNonUniformAMD
addInvocationsNonUniform
addInvocationsNonUniformAMD
additive_expression
_addons
Address
addressing model
Addressing model must be Logical for WebGPU environment.
Addressing model must be Physical32 or Physical64 
addressu
addressv
addressw
add second child into first child
Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d
!	A)Dr
(aDy5
*** A dynamic combo in %s doesn't start with "D_"! Aborting shader compile!
AE_ACTION_SET_TURN_RATE_SCALE
AE_BLIND_ZOMBIE_SNIFF
AE_CL_ADD_PARTICLE_EFFECT_CP
AE_CL_BODYGROUP_SET_VALUE
AE_CL_CREATE_PARTICLE_BRASS
AE_CL_CREATE_PARTICLE_EFFECT
AE_CL_CREATE_PARTICLE_EFFECT_CFG
AE_CL_PLAYSOUND_LOOPING
AE_CL_STOP_PARTICLE_EFFECT
AE_DOTA_SUPPRESS_CONSTANT_LAYER
AE_HIDE_WEAPON
AE_IK_ALLOW_PLANE_TILT_NORMAL_UPDATES
AE_IK_SET_CHAIN_BLEND_AMOUNT
AE_IK_SET_LOCK_ROTATION_ALPHA
AE_IK_SET_MASTER_BLEND_AMOUNT
AE_MELEE_DAMAGE
AE_NPC_BECOME_TEMPORARY_RAGDOLL
AE_NPC_HURT_INTERACTION_PARTNER
AE_NPC_SET_INTERACTION_CANTDIE
AE_NPC_WEAPON_FIRE
AE_NPC_WEAPON_SET_SEQUENCE_NUMBER
AE_PASSENGER_PHYSICS_PUSH
AE_SCRIPT_EVENT_FIREEVENT
AE_SV_DUSTTRAIL
AE_VORTIGAUNT_START_HEAL_GLOW
AE_VORTIGAUNT_START_HURT_GLOW
AE_VORTIGAUNT_ZAP_POWERUP
AE_VORTIGAUNT_ZAP_SHOOT
AE_ZOMBIE_POPHEADCRAB
AE_ZOMBIE_TOGGLE_HEAD
*** A feature in %s doesn't start with "F_"! Aborting shader compile!
after solve err=%f
A function (
A FunctionCall must happen within a function body.
A function must begin with a label
aggShadow
Ah1xij/
!*Ah 8
Ah`8!(
aHa8c
A)h.B
AH*I}
A!;I2
)AIJ+
ai_model_info
AIWalkable
A	@}J!
a"J9?@
a.JY .I
_A@k(
Aliased
AliasedPointer
AliasedPointerEXT
 align=
Alignment
AlignmentId
ALIGN_TYPE is wrong, please fix
all default precisions are highp; use precision statements to quiet warning, e.g.:
allInvocations
allInvocationsARB
allInvocationsEqual
allInvocationsEqualARB
all members of that structure type must also be decorated with 
AllMemoryBarrier
AllMemoryBarrierWithGroupSync
Allocating a variable containing a 16-bit element in 
Allocating a variable containing a 8-bit element in 
Allocation falling back to non-device local heap failed.
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
All OpSampledImage instructions must be in the same block in which their Result <id> are consumed. OpSampledImage Result Type <id> '
All OpVariable instructions in a function must be the first instructions in the first block.
Allow
Allow%d
Allow%d( 
Allow immediately loading mips of textures (when possible) when their headers are loaded, saving IO & reducing latency.
AllowRecip
allowstatic
allow_uav_condition
all redeclarations must use the same depth layout on
all stride settings must match for xfb buffer
All variables in the following storage classes must have an 
alpha
also be decorated with a *Binding*.
ambiguous best function under implicit type conversion
ambiguous function signature match: multiple signatures match under implicit type conversion
ambiguous patch constant function
amd-ext-to-khr
AMD RADV
A module-scope OpVariable with initialization value cannot be marked with the Import Linkage Type.
AMPERSAND
-@(aN
"(aN`(!
(aN`(!
(aN@(!
(aN0*aN
"(aNa(a
#(aNA(a
(aNB8an1
anchor_angles
anchor_position
AND_ASSIGN
 and ending with 
AND_OP
and OpImageFetch
Android clang version 5.0.300080  (based on LLVM 5.0.300080)
Android SM 4.0 (VULKAN)
ANDROID_VULKAN
ANDROID_VULKAN_4_0
and second child into first child
)aNh?
AnimAddLayer
AnimAlign
AnimationList
AnimationSystem_001
AnimationSystemUtils_001
ANIMATION_TYPE_FIT_LIFETIME
ANIMATION_TYPE_FIXED_RATE
AnimAutoLayer
AnimBaseParams
AnimBlendLayer
AnimBlendLayerBase
AnimBlendLayerPoseParam
AnimCommonParams
AnimCycleOverride
AnimDelta
AnimEvent
AnimFile
animgraph0
AnimGraphEditorUtils001
AnimIkLockLocal
AnimLayer
AnimLayerBase
AnimLinearDelta
anim_name
anim_name_a
anim_name_b
AnimOffset
AnimProxy
AnimSmoothLoop
AnimStartLoop
AnimSubtract
anon@
anonymous member 
any-hit
AnyHitNV
anyInvocation
anyInvocationARB
A)phi
appear as the final member of an OpTypeStruct, thus cannot 
 appears in the binary before its dominator 
appendstructuredbuffer
AppendStructuredBuffer
Application built with libpng-
Application must supply a known background gamma
Application transferred too few scanlines
Application transferred too many scanlines
APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!
A\@Q!`
a(@Q! ?Q?
arc cosine
archive
arc hyp. cosine
arc hyp. sine
arc hyp. tangent
arc sine
arc tangent
 are different:
 are referenced but not defined in function 
are used only as handles to refer to opaque resources. Such 
argument cannot drop memory qualifier when passed to formal parameter
argument must be a power of 2
argument must be at least 1
argument must be compile-time constant
argument must be qualified as __explicitInterpAMD in
 arguments.
 arguments. OpTypeFunction <id> '
Arithmetic table 0x%02x was not defined
_arr_
Array access is out of bounds, array size is 
array argument must be sized
array assignment
array comparison
array constructor argument not correct type to construct array element
array constructor must have at least one argument
array constructor needs one argument per array element
arrayed constructor
arrayed type
array index out of range '%d'
array in function return type
array initializer
array initializer must be sized
array length
ArrayLength
array must be declared with a size before using this method
array must be explicitly sized
array must be redeclared with a size before being indexed with a variable
array must be sized by a redeclaration or layout qualifier before being indexed with a variable
array must first be sized by a redeclaration or layout qualifier
array-of-array of block
array size must be a constant integer expression
array size must be a positive integer
array size required
Arrays not supported in texture template types
arrays of arrays
array_specifier
ArrayStride
, arrayStride %d
array variable name expected
A@}S!@
' as an operand of <id> '
ASCII conversion buffer too small
asdouble
asfloat
asinh
Asinh
asinpi
asint
Asking for 2d Texture Array with Cube map as input and no compatible view found - returning error texture in CTextureManagerVK::GetImageView
Assertion Failed in function %s():
AssertMsg_ConditionFailed
AssetBrowserSystem_001
AssetPreviewSystem_001
AssetSystem001
AssetSystemTest001
assignment expression
assignment_expression
assignment expression in initializer list
assignment_operator
assuming binding count of one for compile-time checking of binding numbers for unsized array
*** A static combo in %s doesn't start with "S_"! Aborting shader compile!
asuint
atan2
Atan2
atan2pi
atanh
Atanh
atanpi
ATI1N
ATI2N
ATI_DST16
ATI_DST24
At least one shader must specify a layout(max_primitives = value)
At least one shader must specify a layout(max_vertices = value)
At least one shader must specify an input layout primitive
At least one shader must specify an output layout primitive
At least one shader must specify an output layout(vertices=...)
At marker 0x%02x, recovery action %d
 at minimum.
 at minimum or one of the following extensions: 
atomicAdd
atomicAnd
AtomicCompareExchange
AtomicCompareExchangeWeak
atomicCompSwap
atomicCounter
atomicCounterAdd
AtomicCounterAdd
atomicCounterAnd
AtomicCounterAnd
atomicCounterCompSwap
AtomicCounterCompSwap
atomicCounterDecrement
AtomicCounterDecrement
atomicCounterExchange
AtomicCounterExchange
atomicCounterIncrement
AtomicCounterIncrement
atomicCounterMax
AtomicCounterMax
AtomicCounterMemory
atomicCounterMin
AtomicCounterMin
atomicCounterOr
AtomicCounterOr
atomic counters can only be highp
atomic counters sharing the same offset:
atomicCounterSubtract
AtomicCounterSubtract
atomic counter types
atomicCounterXor
AtomicCounterXor
atomicExchange
AtomicFlagClear
AtomicFlagTestAndSet
AtomicIAdd
AtomicIDecrement
AtomicIIncrement
AtomicISub
atomicLoad
atomicMax
atomicMin
atomicOr
AtomicSMax
AtomicSMin
AtomicStorage
AtomicStorageOps
atomicStore
ATOMIC_UINT
atomic_uint binding is too large
atomic_uint binding is too large; see gl_MaxAtomicCounterBindings
atomic_uints can only be used in uniform variables or function parameters:
AtomicUMax
AtomicUMin
atomicXor
attachment index is too large
attachment_offset
attachment_type
attach_point
Attempted to begin renderpass on invalid renderpass handle.
Attempted to get underlying data type via member index for non-struct type.
Attempted to update an image layout for an image that was not transitioned in this command buffer.
Attempted to update invalid descriptor set.
Attempting fallback GPU allocation in system memory.
Attempting to create a Vulkan pipeline without a vertex shader bound, aborting pipeline creation.
Attempting to purge m_fencedResourceList.Count() = %d, m_pendingFencedResourceQueue.Count() = %d, nCurrentCmdBuffersAvailable = %d, nAllocatedCommandBuffers = %d
Attempting to release an invalid semaphore handle.
Attempt to set buffer size beyond max ignored
__Attribute__
ATTRIBUTE
attribute does not apply to a loop
attribute does not apply to a selection
attribute does not apply to a switch
attribute does not apply to a type
attribute does not apply to entry point
attribute_list
attribute requires a SPIR-V 1.4 target-env
attributes don't apply to control declaration
attribute vec4  gl_Color;attribute vec4  gl_SecondaryColor;attribute vec3  gl_Normal;attribute vec4  gl_Vertex;attribute vec4  gl_MultiTexCoord0;attribute vec4  gl_MultiTexCoord1;attribute vec4  gl_MultiTexCoord2;attribute vec4  gl_MultiTexCoord3;attribute vec4  gl_MultiTexCoord4;attribute vec4  gl_MultiTexCoord5;attribute vec4  gl_MultiTexCoord6;attribute vec4  gl_MultiTexCoord7;attribute float gl_FogCoord;
attribute with arguments not recognized, skipping
A)tU@)x
A)TU@)X
-autoconfig
-autoconfig_level
auto-map-bindings
auto-map-locations
auto_unragdoll_duration
Auxiliary qualifiers (centroid, patch, and sample) must appear before storage and precision qualifiers
	Avail Count ( %d ) ( %llu MB ) 
/AV?O!
*-Ax_
Ax_!3k
A{"xB
Ax_! k
Ax_!"k
AXk!#
)A@y@
*Ay)}
a@y5yh
A@y5yh
A@y5yj
A@y6yh
A@y7yh
*Ay_9
~Ay?!9k#
A@y9yj
,A@y-a@y)
A@y)A@yAyh
)A@yIyi
)A@ykA@y
?AYki
A@yMA@y,yl
[Ay	Q
a@y!yh
a@y(yh
A@y;yh
A@y:yh
A@y!yh
A@y(yh
a@y#yj
A@y*yj
b"@9_
B@9A1
#B9JA
BA9	A
back-edge block
 back-edge blocks but the standard requires exactly one
Back-edges (
Backing store not supported
bad adaptive filter value
Bad aggregation op
bad argument
bad character in float exponent
bad digit in hexadecimal literal
bad expression
Bad expression operator: '%c%c', expected C style boolean expression operator.
Bad expression syntax: '%s', expected a single matching pair of enclosing braces.
Bad expression token: %c
Bad header format (expected '<!--'
Bad header format (expected ':'
Bad header format (expected 'encoding'
Bad header format (expected encoding name)
Bad header format (expected encoding uuid)
Bad header format (expected 'format'
Bad header format (expected format name)
Bad header format (expected format uuid)
Bad header format (expected 'kv3'
Bad header format (expected 'version'
Bad header format (malformed UUID)
Bad header format (no closing marker)
Bad header: invalid binary marker
Bad header: invalid compression header
Bad header: unrecognized encoding id
Bad header (unrecognized encoding specifier)
bad profile name; use es, core, or compatibility
Bad texture dimension type for texture "%s" - returning error texture in  CTextureManagerVK::GetImageView
Bad texture dimension type for texture "%s" - returning error texture in CTextureManagerVulkan::GetResourceView
<bad token>
bad tokens following profile -- expected newline
Bad unary op
Bad VTEX data for '%s'
Bailing out of OnBlockForQuery after %.3f seconds
_bake
BakedLODBuilderMgr001
ballotARB
BaryCoordNoPersp
BaryCoordNoPerspCentroid
BaryCoordNoPerspSample
BaryCoordPullModel
BaryCoordSmooth
BaryCoordSmoothCentroid
BaryCoordSmoothSample
#base
 based on the function's type
BaseIKRig
#base is NULL 
BasePhysicsShape
Basic block #
basic_string
basic type in subpass input
basic type in texture
, bb(%
, BB %
	BB %
BB9hB
BC6h compression not supported on this target (windows only).
BC7 compression not supported on this target (windows only).
B channel not found
 because 
 because it is targeted by an OpEntryPoint instruction.
before solve err=%f
beginInvocationInterlockARB
beginInvocationInterlockARB() cannot be placed after a return from main()
beginInvocationInterlockARB() cannot be placed within flow control
beginInvocationInterlockARB() must be called before endInvocationInterlockARB()
beginInvocationInterlockARB() must be in a fragment shader
beginInvocationInterlockARB() must be in main()
beginInvocationInterlockARB() must only be called once
BeginInvocationInterlockEXT
behavior for extension not specified
behavior not supported:
be instantiated via OpVariable
BenchmarkService001
BentNormalData
be targeted by OpName, OpGroupDecorate, 
b.EycZA
BGR565
BGR888_BLUESCREEN
BGRA1010102
BGRA4444
BGRA5551
BGRA8888_LINEAR
BGRX8888_LINEAR
bhb8"
__BI_
__BI_Append
Biases the mip level the texture streaming system choses to stream for each texture.
Bib81
__BI_CalculateLevelOfDetail
__BI_CalculateLevelOfDetailUnclamped
__BI_Consume
__BI_DecrementCounter
__BI_Gather
__BI_GatherAlpha
__BI_GatherBlue
__BI_GatherCmp
__BI_GatherCmpAlpha
__BI_GatherCmpBlue
__BI_GatherCmpGreen
__BI_GatherCmpRed
__BI_GatherGreen
__BI_GatherRed
__BI_GetDimensions
__BI_GetSamplePosition
__BI_IncrementCounter
__BI_InterlockedAdd
__BI_InterlockedAnd
__BI_InterlockedCompareExchange
__BI_InterlockedCompareStore
__BI_InterlockedExchange
__BI_InterlockedMax
__BI_InterlockedMin
__BI_InterlockedOr
__BI_InterlockedXor
__BI_Load
__BI_Load2
__BI_Load3
__BI_Load4
binary
binary_auto
binary_bc
binary_lz4
BinaryProperties_GetValue
 binding=
Binding
binormal
__BI_RestartStrip
__BI_Sample
__BI_SampleBias
__BI_SampleCmp
__BI_SampleCmpLevelZero
__BI_SampleGrad
__BI_SampleLevel
__BI_Store
__BI_Store2
__BI_Store3
__BI_Store4
__BI_SubpassLoad
__BI_SubpassLoadMS
Bitcast
bitCount
bitfieldExtract
bitfieldInsert
BitFieldInsert
bitfieldReverse
bitFieldReverse
BitFieldSExtract
BitFieldUExtract
-bit integer for the addressing model used in the module)
BitPiece
BitReverse
bitselect
bit shift left
bit-shift left assign
bit shift right
bit-shift right assign
bitwise and
bitwise-and assign
bitwise exclusive or
bitwise inclusive or
bitwise not
Bitwise not
bitwise-or assign
bitwise-xor assign
b"J9_@
BKbhTb~XBK!;
blendamount
blendindices
BlendList
blend_support
blend_support_all_equations
blend_support_colorburn
blend_support_colordodge
blend_support_darken
blend_support_difference
blend_support_exclusion
blend_support_hardlight
blend_support_hsl_color
blend_support_hsl_hue
blend_support_hsl_luminosity
blend_support_hsl_saturation
blend_support_lighten
blend_support_multiply
blend_support_overlay
blend_support_screen
blend_support_softlight
blendweight
block-
block declaration
block <ID> 
blocking issue in occlusion queries!!
block initializer
block instance name redefinition
blockLOS
block name cannot be redefined
block name cannot redefine a non-block name
block redeclaration has extra members
Block(s) 
block_structure
B`M9B
bN!(a
bNEy_
BodyGroup
BodyGroupChoice
body_type
Bogus buffer control mode
Bogus DAC index %d
Bogus DAC value 0x%x
Bogus DHT index %d
Bogus DQT index %d
Bogus Huffman table definition
Bogus input colorspace
Bogus JPEG colorspace
Bogus marker length
Bogus message code %d
Bogus sampling factors
Bogus virtual array access
bonemerge
bone_name
bone_names
bool1
bool1x1
bool1x2
bool1x3
bool1x4
bool2
bool2x1
bool2x2
bool2x3
bool2x4
bool3
bool3x1
bool3x2
bool3x3
bool3x4
bool4
bool4x1
bool4x2
bool4x3
bool4x4
bool anyInvocationARB(bool);bool allInvocationsARB(bool);bool allInvocationsEqualARB(bool);
bool anyInvocation(bool);bool allInvocations(bool);bool allInvocationsEqual(bool);
BOOLCONSTANT
bool CPipelineManagerVulkan::LoadPipelineCache()
bool CSwapChainVulkan::CreateSwapChain(VkDevice, VkPhysicalDevice)
Boolean
boolean expression expected
bool ForceLoadShader(CShaderVulkanBase *)
bool gl_HelperInvocation;flat in highp int gl_PrimitiveID;flat in highp int gl_Layer;
bool helperInvocationEXT();
bool reportIntersectionNV(float, uint);
bool sparseTexelsResidentARB(int code);
bool   subgroupAllEqual(%s);
bool   subgroupAny(bool);
bool   subgroupBallotBitExtract(uvec4, uint);
bool   subgroupInverseBallot(uvec4);
bordercolor
Border color not supported by VK (%x), defaulting to white.
borrow
; Bound: 
box2i
B@q(Y
branch
Branch: Break
BranchConditional
Branch: Continue
 branches to the 
Branch: Kill
Branch: Return
Branch: Unknown Branch
BREAK
breakable_count
breakable_model
breakable_skin
BreakCommand
break_create_joint_revolute
BreakPieceEmbedded
BreakPieceExternal
break statement only allowed in switch and loops
break_uniform_burst
bREybf
__bss_end__
__bss_start
__bss_start__
/BT?O
buf error
buffer aliasing not yet supported
BufferBlock
Buffer error in compressed datastream
buffer is too large:
Buffer passed to JPEG library is too small
 buffer_reference
 buffer_reference_align=
buffer_reference_align
buffer reference indexing
buffers can be declared only as blocks
BuildNDRange
builtin
built-in
BuiltIn
built-in block redeclaration
BuiltIn (No allowed mixing of built-in variables and 
BuiltIns can only target variables, structs or constants
BuiltinSymbolTable {
built in unary operator function.  Type: %s
bUpdate
burst_randomize
burst_scale
, but does not immediately precede it in the OpSwitch's target list
>, but is not listed as an interface
, but not via a structured exit
 but running with 
B)v	@
B)V	@
BVEC2
BVEC3
BVEC4
BXcxc
Bx_! k
By_!6k
By_! k
By?! k
byteAddrTemp
, bytes per element=
ByVal
@=%	@=c
	!c9	
c@95ID
(C@9)?@9*#@9
C9an@
C9(B07
(c@9H
(C@9h
C9h 87
cable
cacheData
callable
callableDataInNV
callableDataInNV block
callable data number
callableDataNV
callableDataNV block
call argument
CALLDATAINNV
CALLDATANV
 calling 
calling user function from global scope
calloc
Call to NULL read function
Call to vkCreateSwapchainWSI returned an error.
Call to vkGetPhysicalDeviceSurfaceSupportKHR returned an error.
C(aN#
cannot access member variables (static member function?)
cannot add memory qualifier to redeclared block member
cannot add non-XFB layout to redeclared block member
cannot add patch to redeclared block member
cannot add perprimitiveNV qualifier to redeclared block member
cannot add perviewNV qualifier to redeclared block member
cannot add storage, auxiliary, memory, interpolation, layout, or precision qualifier to an existing variable
Cannot allocate a variable containing a 16-bit type in 
Cannot allocate a variable containing a 8-bit type in 
 cannot appear before the memory model instruction
 cannot appear in a function declaration
cannot appear outside switch statement
cannot apply layout qualifiers to a shared variable
cannot apply layout qualifiers to hitAttributeNV variable
cannot apply layout qualifier to
cannot apply precision statement to this type; use 'float', 'int' or a sampler type
cannot apply to:
cannot apply to a block
cannot apply to a cooperative matrix type:
cannot apply to a matrix, structure, or block
cannot apply to an array:
cannot apply to 'in'
cannot apply to input
cannot apply to 'out'
cannot apply to taskNV in/out blocks
cannot apply to uniform or buffer block
Cannot attach multiple ES shaders of the same type to a single program
 cannot be 0xFFFFFFFF in WebGPU execution environment.
' cannot be a constant zero.
cannot be a matrix
cannot be an argument type except for '(void)'
) cannot be applied to function id 
cannot be applied to this type
cannot be a structure
cannot be a structure or array
 cannot be a type
' cannot be a void pointer.
cannot be bool
cannot be both specified
 cannot be greater than 3 for pervertexNV
cannot be negative
cannot be nested inside control flow
' cannot be OpTypeVoid.
 cannot be used as a member decoration 
cannot be used (maybe an instance name is needed)
cannot be used with push_constant
cannot be used with shaderRecordNV
cannot change arrayness of redeclared block
cannot change arrayness of redeclared block member
cannot change array size of redeclared block
cannot change array size of redeclared block member
cannot change input storage qualification of
cannot change interpolation qualification of
cannot change output storage qualification of
cannot change previously set domain
cannot change previously set fragment shader interlock ordering
cannot change previously set input primitive
cannot change previously set layout value
cannot change previously set maxvertexcount attribute
cannot change previously set outputcontrolpoints attribute
cannot change previously set output primitive
cannot change previously set outputtopology
cannot change previously set partitioning
cannot change previously set size
cannot change previously set vertex order
cannot change previously set vertex spacing
cannot change qualification after use
cannot change qualification of
cannot change storage, memory, or auxiliary qualification of
cannot change the type of
cannot compose log message
Can not compute
cannot construct this type
cannot construct with these arguments
cannot contain a double, int64, or uint64
cannot convert an atomic_uint
cannot convert a sampler
cannot convert a void
cannot convert from '%s' to '%s'
cannot convert input argument, argument
cannot convert parameter %d from '%s' to '%s'
cannot convert return value to function return type
Cannot copy composites of 8- or 16-bit types
Cannot copy memory of objects containing 8- or 16-bit types
Cannot create a composite containing 8- or 16-bit types
Cannot create undefined values with 8- or 16-bit types
Cannot cross link ES and desktop profiles
cannot declare a default, can only be used on a block
cannot declare a default, can only be used on a scalar
cannot declare a default, include a type or full declaration
cannot declare a default, use a full declaration
Cannot declare a function in a function body
Cannot extract from a composite of 8- or 16-bit types
Cannot extract from a vector of 8- or 16-bit types
Cannot form constants of 8- or 16-bit types
' cannot have a null value.
) cannot have any Location or Component decorations
cannot have statements before first case/default label
' cannot have the sign bit set to 1.
cannot implicitly initialize opaque members
 cannot initialize this type of qualifier 
Cannot insert into a composite of 8- or 16-bit types
Cannot insert into a vector of 8- or 16-bit types
cannot lie in previous members
Cannot mix ES profile with non-ES profile shaders
cannot modify hitAttributeNV in this stage
cannot nest a block definition inside a structure or block
cannot nest a structure definition inside a structure or block
Cannot quantize more than %d color components
Cannot quantize to fewer than %d colors
Cannot quantize to more than %d colors
Cannot read a file 
Cannot read file 
Cannot reconstruct lineOffset table in DecodeEXRImage.
cannot redeclare a built-in block with a user name
cannot redeclare after use
cannot redeclare a non block as a block
cannot redeclare a user-block member array
cannot redeclare block: 
cannot redeclare block member with a different type
cannot redeclare with different qualification:
Cannot register same format from/to a KV3 conversion (from '%s' to '%s')
cannot re-qualify a function name
Cannot reuse block name within the same interface:
Cannot save as KV3_FORMAT_LOAD_WITH_NO_UPCONVERSION.
Cannot save KV3 text to a non-text buffer!
Cannot set ID 
Cannot shuffle a vector of 8- or 16-bit types
cannot specify matrix layout on a variable declaration
cannot specify on a variable declaration
cannot specify packing on a variable declaration
Cannot transcode due to multiple use of quantization table %d
Cannot transpose matrices of 16-bit floats
Cannot use a pointer in the PhysicalStorageBuffer storage class
cannot use auxiliary, memory, interpolation, or precision qualifier in a default qualifier declaration (declaration with no type)
cannot use auxiliary or interpolation qualifiers on a function parameter
Cannot use both gl_FragColor and gl_FragData
cannot use centroid qualifier on an interface block
Cannot use gl_FragColor or gl_FragData when using user-defined outputs
cannot use in a block array where new locations are needed for each block element
cannot use 'inout' at global scope
cannot use in preprocessor expression when expanded from macros
cannot use interpolation qualifiers on an interface block
cannot use interpolation qualifiers with patch
cannot use invariant qualifier on a function parameter
cannot use invariant qualifier on an interface block
cannot use invariant qualifier on structure members
cannot use layout qualifiers on a function parameter
cannot use layout qualifiers on structure members
cannot use memory qualifiers on structure members
cannot use offset or align qualifiers in a default qualifier declaration (declaration with no type)
cannot use sample qualifier on an interface block
cannot use storage or interpolation qualifiers on structure members
Cannot write a file
can only apply depth layout to gl_FragDepth
can only apply highp to atomic_uint
can only apply origin_upper_left and pixel_center_origin to gl_FragCoord
can only apply to an output
can only apply to an output, or to an input in a non-vertex stage
can only apply to a standalone qualifier
can only apply to 'in'
can only apply to 'out'
can only apply to uniform, buffer, in, or out storage qualifiers
can only be applied to a scalar
can only be applied to a standalone 'out'
can only be applied to 'const'-qualified scalar
can only be followed by a single macro name
) can only be formed between a block and a loop header.
can only be used on an output
can only be used on variable declaration
can only be used with a block
can only be used with a buffer
can only be used with an explicit location
can only be used with a subpass
can only be used with a uniform
can only be used with buffer
can only be used with non-externally visible shader Storage 
 can only be used with physical addressing models
can only be used with std140, std430, or scalar layout packing
can only change layout qualification of
can only have one auxiliary qualifier (centroid, patch, and sample)
can only have one interpolation qualifier (flat, smooth, noperspective, __explicitInterpAMD)
can only redeclare a built-in block once, and before any use
can only specify on a buffer block
can only specify on a uniform block
can only use in an in/out block
Can only use one of gl_ClipDistance or gl_ClipDistancePerViewNV
Can only use one of gl_ClipDistance or gl_ClipVertex (gl_ClipDistance is preferred)
Can only use one of gl_CullDistance or gl_ClipVertex (gl_ClipDistance is preferred)
Can only use one of gl_CullDistance or gl_CullDistancePerViewNV
Can only use one of gl_Layer or gl_LayerPerViewNV
Can only use one of gl_Position or gl_PositionPerViewNV
Can only use one of gl_ViewportMask or gl_ViewportMaskPerViewNV
can only use on input blocks in mesh shader
can only use on input in tessellation-evaluation shader
can only use on output in tessellation-control shader
Can't clear TEXTURE_WAITING_FOR_IO flag because of streaming request mismatch: %d in handle, %d in request
can't construct structure containing 16-bit type
can't construct structure containing 8-bit type
can't convert
Can't detect memory size on this platform!
cantdie
Can't discard critical data on CRC error
can't evaluate expression
can't find function
can't handle multiple entry points per stage
can't have an initializer
can't link compilation units from different source languages
can't modify accelerationStructureNV
can't modify a const
can't modify an atomic_uint
can't modify a readonly buffer
can't modify a sampler
can't modify a shaderrecordnv qualified buffer
can't modify a uniform
can't modify gl_FragCoord
can't modify gl_FragDepth if using early_fragment_tests
can't modify gl_FrontFace
can't modify gl_InstanceID
can't modify gl_PointCoord
can't modify gl_VertexID
can't modify shader input
can't modify void
can't read from explicitly-interpolated object: 
can't read from writeonly object: 
Can't set both read_data_fn and write_data_fn in the same structure
: can't specify both Aliased and Restrict for PhysicalStorageBufferEXT pointer.
: can't specify both AliasedPointerEXT and 
: can't specify both AliasedPointerEXT and RestrictPointerEXT for PhysicalStorageBufferEXT pointer.
 Can't specify initial state of dynamic constant buffers at creation time!
can't swizzle types containing float16
can't swizzle types containing (u)int16
can't swizzle types containing (u)int8
can't use auxiliary qualifier on a fragment output
can't use function syntax on variable
can't use interpolation qualifier on a fragment output
can't use variable in patch constant function
can't use with arrays containing float16
can't use with arrays containing int16
can't use with arrays containing int8
can't use with arrays containing uint16
can't use with arrays containing uint8
can't use with reference types
can't use with samplers or structs containing samplers
can't use with structs containing float16
can't use with structs containing int16
can't use with structs containing int8
can't use with structs containing uint16
can't use with structs containing uint8
can't use with types containing arrays sized with a specialization constant
Can't write binary data to a text buffer.
Capability
Capability 
Capability Image1D is required to access storage image
Capability ImageBuffer is required to access storage image
Capability ImageCubeArray is required to access 
Capability ImageRect is required to access storage image
Capability StorageImageReadWithoutFormat is required to 
Capability StorageImageWriteWithoutFormat is required to write 
CaptureEventProfilingInfo
CARET
case: 
Case construct that targets 
case entry block
case exit block
case expression
case_label
catch
CAuthPhysBody
CAuthPhysJoint
Caution: quantization tables are too coarse for baseline JPEG
CB: %u buffers, %.2f MB
cbuffer
(cC9(
*(cC9
*(cC9(
(cC9h
(cC9H
*(cC9H
)cC9I
	cC9I
cC9UA
CCCommandBufferChunk CUtlMemoryPoolMT
CCIR601 sampling not implemented yet
CCommand::Tokenize: Encountered command which overflows the argument buffer.. Clamped!
CCommand::Tokenize: Encountered command which overflows the tokenizer buffer.. Skipping!
CDescriptorSetVulkan::Rebake - could not allocate descriptor in new pool.
Ceiling
center
CEntityIndex
 centroid
CENTROID
centroid/sample/patch
cfg-cleanup
cfg/mobile_gpu_level.txt
cfg/mobile_vulkan_gpu_level.txt
cfg/video_%02d.txt
cfg/videodefaults.txt
cfg/video.txt
ChangeCallbackOnChange
ChangeCallbackOnChangeOrCreate
channels
, channels = 
"channels" attribute not found in the header.
character literals not supported
cheat
CheckAccessFullyMapped
CheckBox
Checked pending presents %s times; waited %s times; abandoned %s times
Checking for VK_NV_device_diagnostic_checkpoints indicating queue failure...
Checkpoint data: '%s' at pipeline stage %s
Chf8%hb8B
ChildOf
ChildOf( 
children
chlist
Chr8R
cHRM Blue X
cHRM Blue Y
cHRM Green X
cHRM Green Y
cHRM Red X
cHRM Red Y
cHRM Red Z
cHRM White X
cHRM White Y
chunkCount
`chunkCount' attribute is not found in the header.
C_INIT_AddVectorToVector
C_INIT_AgeNoise
C_INIT_CreateFromCPs
C_INIT_CreateInEpitrochoid
C_INIT_CreateOnModelAtHeight
C_INIT_CreateSequentialPath
C_INIT_CreateWithinSphere
C_INIT_DistanceToCPInit
C_INIT_GlobalScale
C_INIT_InheritFromParentParticles
C_INIT_InheritVelocity
C_INIT_InitFromCPSnapshot
C_INIT_InitFromParentKilled
C_INIT_InitialRepulsionVelocity
C_INIT_InitialVelocityFromHitbox
C_INIT_InitialVelocityNoise
C_INIT_LifespanFromVelocity
C_INIT_MakeShapes
C_INIT_ModelCull
C_INIT_MoveBetweenPoints
C_INIT_NormalOffset
C_INIT_OffsetVectorToVector
C_INIT_PositionOffset
C_INIT_PositionOffsetToCP
C_INIT_PositionPlaceOnGround
C_INIT_PositionWarp
C_INIT_RandomVectorComponent
C_INIT_RandomYawFlip
C_INIT_RemapCPtoScalar
C_INIT_RemapCPtoVector
C_INIT_RemapInitialCPDirectionToRotation
C_INIT_RemapInitialVisibilityScalar
C_INIT_RemapNamedModelElementToScalar
C_INIT_RemapParticleCountToScalar
C_INIT_RemapScalar
C_INIT_RemapScalarToVector
C_INIT_RemapSpeedToScalar
C_INIT_RtEnvCull
C_INIT_SequenceFromCP
C_INIT_SequenceLifeTime
C_INIT_SetHitboxToClosest
C_INIT_SetRigidAttachment
C_INIT_VelocityFromCP
C_INIT_VelocityFromNormal
C_INIT_VelocityRadialRandom
C_INIT_VelocityRandom
c@L@A
ClampToEdge
CLargeCommandBufferChunk CUtlMemoryPoolMT
Classes: Workgroup, CrossWorkgroup, Private, and Function
Clay Clay Shader Compiler
Cleanup: discarding lookahead
Cleanup: popping
clear
Clearing TEXTURE_WAITING_FOR_IO flag because it's has no streaming request id anymore
ClearLayout
!C)lhi
client
clientcmd_can_execute
client opengl100
client vulkan100
clock2x32ARB
clockARB
clock_gettime
clockRealtime2x32EXT
clockRealtimeEXT
Closed temporary file %s
closest-hit
ClosestHitNV
cloth_collide
cloth_collision_layer0
cloth_collision_layer1
cloth_collision_layer2
cloth_collision_layer3
ClothShapeCapsule
ClothShapeList
ClothShapeSphere
ClusteredReduce
cluster size
c`M9c
CmdExecTime
CMediumCommandBufferChunk CUtlMemoryPoolMT
CMemAllocSystemInitialize
CMemoryManagerVulkan::AllocatePerFrameDynamicPooled: failed to find memory type index for memory properties
CMemoryRefTracker::BuildStateTransitions (%s)
CMemoryStack %s
Codeplay
code-sink
 coherent
Coherent
coherent volatile 
collision_group
collision_prop
ColMajor
color
COLORCORRECTION_VERSION_1
column_major
Column Major operand <id> '
 columns, but access index is 
Columns in a matrix must be of type vector.
Column type is not defined.
combination.
combine-access-chains
combined token is invalid
combined tokens are too long
combined (Vector1 + Vector2) size of 
*** Combo "%s" in %s doesn't match a known combo source!
*** Combo "%s" in %s either does not follow the 0..N format, is not a valid dynamic combo name, or doesn't match an existing feature or mode argument!
*** Combo "%s" in %s has arg %s that doesn't match an existing feature!
*** Combo "%s" in %s has incorrect range %d..%d. Expecting %d..%d!
*** Combo "%s" in %s requires a 3rd argument: Sys( ... )
Comma
COMMA
	Command Buffer Labels - %d
CommandLine
CommandProcedure
CommandProcedureList
Command stream pools: %s bytes in base, %s bytes in medium, %s bytes in large (%s extra data fallbacks)
.comment
COMMON
compact-ids
Compare Equal
Compare Greater Than
Compare Greater Than or Equal
Compare Less Than
Compare Less Than or Equal
Compare Not Equal
 compilation errors.  No code generated.
Compilation failed.  Log string from glslang %s
compilation terminated
CompileShadersForFeatureCombo
Compile Target Expression
CompileTargets
Compile Targets
  [COMPLETE]
 component=
component argument
    Component %d: dc=%d ac=%d
    Component %d: %dhx%dv q=%d
Component decoration specified for type 
Component index 
Component index %d: mismatching sampling ratio %d:%d, %d:%d, %c
component is too large
Component literal at operand 
 components, 
 components.
, components (1/4 stride) needed are 
components < 4 in matrix buffer type
 components are not float scalar.
 components are not int scalar.
components as the first member
 components, but given 
 components, but given only 
 components for 
components must be in the range [0, 3]
components must be in the range [0, 31]
' component type does not match Result Type <id> '
Component type is not defined.
-component vector of
component-wise multiply
CompositeConstruct
CompositeExtract
CompositeInsert
compound_statement
compound_statement_no_new_scope
Compressed texture decoded in %.2f ms
compression
"compression" attribute not found in the header.
ComputeDerivativeGroupLinearNV
ComputeDerivativeGroupQuadsNV
Compute Shader
compute shader derivatives
compute shaders
concatenated_input_layout
Conditional Error: %s
conditional expression
conditional_expression
condition must be a scalar integer expression
Condition operand for OpBranchConditional must be of boolean type
conditionopt
ConfigAttachedModel
ConfigurationSystem_001
configvalue.cpp
conflicting calls to set alpha mode and background
Const
CONST
Constant:
constant_expression
constant expression required
 constant_id=
constant_id
ConstantNull
ConstantPipeStorage
ConstantSampler
const array
const bool
const_cast
const int
const int16_t
const int64_t
const int8_t
const int gl_MaxAtomicCounterBindings = %d;
const int gl_MaxAtomicCounterBufferSize = %d;
const int gl_MaxClipDistances = %d;
const int  gl_MaxClipPlanes = %d;
const int gl_MaxCombinedAtomicCounterBuffers = %d;
const int gl_MaxCombinedAtomicCounters = %d;
const int gl_MaxCombinedClipAndCullDistances = %d;
const int gl_MaxCombinedImageUniforms = %d;
const int gl_MaxCombinedImageUnitsAndFragmentOutputs = %d;
const int gl_MaxCombinedShaderOutputResources = %d;
const int  gl_MaxCombinedTextureImageUnits = %d;
const int gl_MaxComputeAtomicCounterBuffers = %d;
const int gl_MaxComputeAtomicCounters = %d;
const int gl_MaxComputeImageUniforms = %d;
const int gl_MaxComputeTextureImageUnits = %d;
const int gl_MaxComputeUniformComponents = %d;
const int gl_MaxCullDistances = %d;
const int  gl_MaxDrawBuffers = %d;
const int gl_MaxFragmentAtomicCounterBuffers = %d;
const int gl_MaxFragmentAtomicCounters = %d;
const int gl_MaxFragmentImageUniforms = %d;
const int gl_MaxFragmentInputComponents = %d;
const int  gl_MaxFragmentUniformComponents = %d;
const int gl_MaxGeometryAtomicCounterBuffers = %d;
const int gl_MaxGeometryAtomicCounters = %d;
const int gl_MaxGeometryImageUniforms = %d;
const int gl_MaxGeometryInputComponents = %d;
const int gl_MaxGeometryOutputComponents = %d;
const int gl_MaxGeometryOutputVertices = %d;
const int gl_MaxGeometryTextureImageUnits = %d;
const int gl_MaxGeometryTotalOutputComponents = %d;
const int gl_MaxGeometryUniformComponents = %d;
const int gl_MaxGeometryVaryingComponents = %d;
const int gl_MaxImageSamples = %d;
const int gl_MaxImageUnits = %d;
const int  gl_MaxLights = %d;
const int gl_MaxMeshOutputPrimitivesNV = %d;
const int gl_MaxMeshOutputVerticesNV = %d;
const int gl_MaxMeshViewCountNV = %d;
const int gl_MaxPatchVertices = %d;
const int gl_MaxSamples = %d;
const int gl_MaxTessControlAtomicCounterBuffers = %d;
const int gl_MaxTessControlAtomicCounters = %d;
const int gl_MaxTessControlImageUniforms = %d;
const int gl_MaxTessControlInputComponents = %d;
const int gl_MaxTessControlOutputComponents = %d;
const int gl_MaxTessControlTextureImageUnits = %d;
const int gl_MaxTessControlTotalOutputComponents = %d;
const int gl_MaxTessControlUniformComponents = %d;
const int gl_MaxTessEvaluationAtomicCounterBuffers = %d;
const int gl_MaxTessEvaluationAtomicCounters = %d;
const int gl_MaxTessEvaluationImageUniforms = %d;
const int gl_MaxTessEvaluationInputComponents = %d;
const int gl_MaxTessEvaluationOutputComponents = %d;
const int gl_MaxTessEvaluationTextureImageUnits = %d;
const int gl_MaxTessEvaluationUniformComponents = %d;
const int gl_MaxTessGenLevel = %d;
const int gl_MaxTessPatchComponents = %d;
const int  gl_MaxTextureCoords = %d;
const int  gl_MaxTextureImageUnits = %d;
const int  gl_MaxTextureUnits = %d;
const int gl_MaxTransformFeedbackBuffers = %d;
const int gl_MaxTransformFeedbackInterleavedComponents = %d;
const int gl_MaxVaryingComponents = %d;
const int  gl_MaxVaryingFloats = %d;
const int gl_MaxVertexAtomicCounterBuffers = %d;
const int gl_MaxVertexAtomicCounters = %d;
const int  gl_MaxVertexAttribs = %d;
const int gl_MaxVertexImageUniforms = %d;
const int gl_MaxVertexOutputComponents = %d;
const int  gl_MaxVertexTextureImageUnits = %d;
const int  gl_MaxVertexUniformComponents = %d;
const int gl_MaxViewports = %d;
const int gl_ScopeDevice      = 1;
const int gl_ScopeInvocation  = 4;
const int gl_ScopeQueueFamily = 5;
const int gl_ScopeSubgroup    = 3;
const int gl_ScopeWorkgroup   = 2;
const int gl_SemanticsAcquire         = 0x2;
const int gl_SemanticsAcquireRelease  = 0x8;
const int gl_SemanticsMakeAvailable   = 0x2000;
const int gl_SemanticsMakeVisible     = 0x4000;
const int gl_SemanticsRelaxed         = 0x0;
const int gl_SemanticsRelease         = 0x4;
const int gl_SemanticsVolatile        = 0x8000;
const int gl_StorageSemanticsBuffer   = 0x40;
const int gl_StorageSemanticsImage    = 0x800;
const int gl_StorageSemanticsNone     = 0x0;
const int gl_StorageSemanticsOutput   = 0x1000;
const int gl_StorageSemanticsShared   = 0x100;
 Constituent count does not match Result Type <id> '
 Constituent <id> '
 Constituent <id> count does not match Result Type <id> '
const ivec3 gl_MaxComputeWorkGroupCount = ivec3(%d,%d,%d);
const ivec3 gl_MaxComputeWorkGroupSize = ivec3(%d,%d,%d);
const ivec3 gl_MaxMeshWorkGroupSizeNV = ivec3(%d,%d,%d);
const ivec3 gl_MaxTaskWorkGroupSizeNV = ivec3(%d,%d,%d);
const mediump int  gl_MaxCombinedTextureImageUnits = %d;
const mediump int  gl_MaxDrawBuffers = %d;
const mediump int  gl_MaxFragmentInputVectors = %d;
const mediump int  gl_MaxFragmentUniformVectors = %d;
const mediump int  gl_MaxProgramTexelOffset = %d;
const mediump int  gl_MaxTextureImageUnits = %d;
const mediump int  gl_MaxVaryingVectors = %d;
const mediump int  gl_MaxVertexAttribs = %d;
const mediump int  gl_MaxVertexOutputVectors = %d;
const mediump int  gl_MaxVertexTextureImageUnits = %d;
const mediump int  gl_MaxVertexUniformVectors = %d;
const mediump int  gl_MinProgramTexelOffset = %d;
ConstOffset
ConstOffset image operand not allowed 
ConstOffsets
const (read only)
Construct 
Construct bmat2
Construct bmat2x3
Construct bmat2x4
Construct bmat3
Construct bmat3x2
Construct bmat3x4
Construct bmat4
Construct bmat4x2
Construct bmat4x3
Construct bool
 construct, but not to the 
Construct bvec2
Construct bvec3
Construct bvec4
Construct combined texture-sampler
Construct cooperative matrix
Construct dmat2
Construct dmat2x3
Construct dmat2x4
Construct dmat3
Construct dmat3x2
Construct dmat3x4
Construct dmat4
Construct dmat4x2
Construct dmat4x3
Construct double
Construct dvec2
Construct dvec3
Construct dvec4
Construct f16mat2
Construct f16mat2x3
Construct f16mat2x4
Construct f16mat3
Construct f16mat3x2
Construct f16mat3x4
Construct f16mat4
Construct f16mat4x2
Construct f16mat4x3
Construct f16vec2
Construct f16vec3
Construct f16vec4
Construct float
Construct float16_t
Construct i16vec2
Construct i16vec3
Construct i16vec4
Construct i64vec2
Construct i64vec3
Construct i64vec4
Construct i8vec2
Construct i8vec3
Construct i8vec4
Construct imat2
Construct imat2x3
Construct imat2x4
Construct imat3
Construct imat3x2
Construct imat3x4
Construct imat4
Construct imat4x2
Construct imat4x3
constructing matrix from matrix
constructing non-array constituent from array argument
Construct int
Construct int16_t
Construct int64
Construct int8_t
Construct ivec2
Construct ivec3
Construct ivec4
Construct mat2
Construct mat2x3
Construct mat2x4
Construct mat3
Construct mat3x2
Construct mat3x4
Construct mat4
Construct mat4x2
Construct mat4x3
constructor argument does not have a type
Construct reference
Construct reference type
Construct structure
Construct u16vec2
Construct u16vec3
Construct u16vec4
Construct u64vec2
Construct u64vec3
Construct u64vec4
Construct u8vec2
Construct u8vec3
Construct u8vec4
Construct uint
Construct uint16_t
Construct uint64
Construct uint8_t
Construct umat2
Construct umat2x3
Construct umat2x4
Construct umat3
Construct umat3x2
Construct umat3x4
Construct umat4
Construct umat4x2
Construct umat4x3
Construct uvec2
Construct uvec3
Construct uvec4
Construct vec2
Construct vec3
Construct vec4
 construct with the 
ConstType
Constu
const uint
const uint16_t
const uint32_t 
const uint64_t
const uint8_t
const uint gl_RayFlagsNoneNV = 0U;const uint gl_RayFlagsOpaqueNV = 1U;const uint gl_RayFlagsNoOpaqueNV = 2U;const uint gl_RayFlagsTerminateOnFirstHitNV = 4U;const uint gl_RayFlagsSkipClosestHitShaderNV = 8U;const uint gl_RayFlagsCullBackFacingTrianglesNV = 16U;const uint gl_RayFlagsCullFrontFacingTrianglesNV = 32U;const uint gl_RayFlagsCullOpaqueNV = 64U;const uint gl_RayFlagsCullNoOpaqueNV = 128U;
consumestructuredbuffer
ConsumeStructuredBuffer
containing OpTypeRuntimeArray must have storage class of 
contains an array with stride 
 contains members with BuiltIn decoration. Therefore this 
 contains structure <id> 
content
CONTENT
CONTENTROOT
context-insensitive value
continue
CONTINUE
continue statement only allowed in loops
continue target
Continue Target 
ContractionOff
Contradictory depth layouts
Contradictory input layout primitives
Contradictory input vertex spacing
Contradictory layout max_primitives values
Contradictory layout max_vertices values
Contradictory layout vertices values
Contradictory local size
Contradictory local size specialization ids
Contradictory output layout primitives
Contradictory triangle ordering
Contradictory xfb_stride
control_point
ConVarRef %s doesn't point to an existing ConVar
ConVar(%s) defined with infinite float value (%s)
Convert bool to double
Convert bool to float
Convert bool to float16_t
Convert bool to in16t_t
Convert bool to int
Convert bool to int64
Convert bool to int8_t
Convert bool to uint
Convert bool to uint16_t
Convert bool to uint64
Convert bool to uint8_t
Convert double to bool
Convert double to float
Convert double to float16_t
Convert double to int
Convert double to int16_t
Convert double to int64
Convert double to int8_t
Convert double to uint
Convert double to uint16_t
Convert double to uint64
Convert double to uint8_t
Convert float16_t to bool
Convert float16_t to double
Convert float16_t to float
Convert float16_t to int
Convert float16_t to int16_t
Convert float16_t to int64
Convert float16_t to int8_t
Convert float16_t to uint
Convert float16_t to uint16_t
Convert float16_t to uint64
Convert float16_t to uint8_t
Convert float to bool
Convert float to double
Convert float to float16_t
Convert float to int
Convert float to int16_t
Convert float to int64
Convert float to int8_t
Convert float to uint
Convert float to uint16_t
Convert float to uint64
Convert float to uint8_t
ConvertFToS
ConvertFToU
Convert int16_t to bool
Convert int16_t to double
Convert int16_t to float
Convert int16_t to float16_t
Convert int16_t to int
Convert int16_t to int64
Convert int16_t to int8_t
Convert int16_t to uint
Convert int16_t to uint16_t
Convert int16_t to uint64
Convert int16_t to uint8_t
Convert int64 to bool
Convert int64 to double
Convert int64 to float
Convert int64 to float16_t
Convert int64 to int
Convert int64 to int16_t
Convert int64 to int8_t
Convert int64 to uint
Convert int64 to uint16_t
Convert int64 to uint64
Convert int64 to uint8_t
Convert int8_t to bool
Convert int8_t to double
Convert int8_t to float
Convert int8_t to float16_t
Convert int8_t to int
Convert int8_t to int16_t
Convert int8_t to int64
Convert int8_t to uint
Convert int8_t to uint16_t
Convert int8_t to uint64
Convert int8_t to uint8_t
Convert int to bool
Convert int to double
Convert int to float
Convert int to float16_t
Convert int to int16_t
Convert int to int64
Convert int to int8_t
Convert int to uint
Convert int to uint16_t
Convert int to uint64
Convert int to uint8_t
convert-local-access-chains
Convert pointer to uint64_t
ConvertPtrToU
convert-relaxed-to-half
ConvertSToF
Convert uint16_t to bool
Convert uint16_t to double
Convert uint16_t to float
Convert uint16_t to float16_t
Convert uint16_t to int
Convert uint16_t to int16_t
Convert uint16_t to int64
Convert uint16_t to int8_t
Convert uint16_t to uint
Convert uint16_t to uint64
Convert uint16_t to uint8_t
Convert uint64 to bool
Convert uint64 to double
Convert uint64 to float
Convert uint64 to float16_t
Convert uint64 to int
Convert uint64 to int16_t
Convert uint64 to int64
Convert uint64 to int8_t
Convert uint64 to uint
Convert uint64 to uint16
Convert uint64 to uint8_t
Convert uint64_t to pointer
Convert uint8_t to bool
Convert uint8_t to double
Convert uint8_t to float
Convert uint8_t to float16_t
Convert uint8_t to int
Convert uint8_t to int16_t
Convert uint8_t to int64
Convert uint8_t to int8_t
Convert uint8_t to uint
Convert uint8_t to uint16_t
Convert uint8_t to uint64
Convert uint to bool
Convert uint to double
Convert uint to float
Convert uint to float16_t
Convert uint to int
Convert uint to int16_t
Convert uint to int64
Convert uint to int8_t
Convert uint to uint16_t
Convert uint to uint64
Convert uint to uint8_t
ConvertUToF
ConvertUToPtr
Cooperative matrix constructor argument must be scalar or cooperative matrix
Cooperative matrix 'K' mismatch: 
CooperativeMatrixLengthNV
Cooperative matrix 'M' mismatch: 
CooperativeMatrixMulAddNV
Cooperative matrix 'N' mismatch: 
Cooperative matrix scopes must match: 
Cooperative matrix types must not be used in shared memory
Cooperative matrix types (or types containing them) can only be allocated 
coopMatLoadNV
coopMatMulAddNV
coopMatStoreNV
coordTemp
C_OP_AttractToControlPoint
C_OP_ContinuousEmitter
C_OP_DistanceBetweenCPsToCP
C_OP_DriveCPFromGlobalSoundFloat
C_OP_EnableChildrenFromParentParticleCount
C_OP_HSVShiftToCP
C_OP_InheritFromParentParticles
C_OP_InitSetSnapshotOnCP
C_OP_InstantaneousEmitter
C_OP_LockToSavedSequentialPath
C_OP_NoiseEmitter
C_OP_RampCPLinearRandom
C_OP_RemapAverageScalarValuetoCP
C_OP_RemapBoundingVolumetoCP
C_OP_RemapCPtoCP
C_OP_RemapModelVolumetoCP
C_OP_RemapSpeedtoCP
C_OP_RenderModels
C_OP_RenderSprites
C_OP_RenderTrails
C_OP_RepeatedTriggerChildGroup
C_OP_SetControlPointFieldToWater
C_OP_SetControlPointFromObjectScale
C_OP_SetControlPointOrientation
C_OP_SetControlPointPositions
C_OP_SetControlPointPositionToTimeOfDayValue
C_OP_SetControlPointRotation
C_OP_SetControlPointToCenter
C_OP_SetControlPointToHand
C_OP_SetControlPointToHMD
C_OP_SetControlPointToImpactPoint
C_OP_SetControlPointToPlayer
C_OP_SetCPOrientationToPointAtCP
C_OP_SetParentControlPointsToChildCP
C_OP_SetRandomControlPointPosition
C_OP_SetSingleControlPointPosition
C_OP_StopAfterCPDuration
C_OP_TwistAroundAxis
CopyAttrFrom
CopyGPUBufferHiddenStructureCount failed - invalid destination buffer.
CopyGPUBufferHiddenStructureCount failed - invalid source buffer.
CopyLogical
CopyMemory
CopyMemorySized
copy object
CopyObject
  [COPY OF 
copy-propagate-arrays
Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.
Copyright (c) 1996-1997 Andreas Dilger
Copyright (c) 1998-2012 Glenn Randers-Pehrson
Copyright (C) 2010, Thomas G. Lane, Guido Vollbeding
copysign
corresponding member type of Result Type struct
Corrupt image type definition
Corrupt JPEG data: bad arithmetic code
Corrupt JPEG data: bad Huffman code
Corrupt JPEG data: found marker 0x%02x instead of RST%d
Corrupt JPEG data: premature end of data segment
Corrupt JPEG data: %u extraneous bytes before marker 0x%02x
could not create assignment
Could not perform requested binary operation
Could not process include directive
@count
count=
countbits
' count does not match Result Type <id> '
CounterBuffer
, counter %d
' count must be one.
CPacked
CParticleSystemDefinition
CPU time
CRC error
CreateInterface
create_particle
CreatePipeFromPipeStorage
CreateSimpleThread
CreateUserEvent
CRenderContextVulkan::BeginQuery - Issued a Begin on a non-occlusion query
CRenderContextVulkan::BeginQuery - Issued on an in-progress query!
CRenderContextVulkan::ClearUnorderedAccessViewUint could not get CVulkanImage for texture %s.
CRenderContextVulkan::CopyTexture failed to get resource.
CRenderContextVulkan::CopyTexture - Trying to copy from a rect that is outside of the src texture
CRenderContextVulkan::EndQuery - Issued on an in-progress query!
CRenderContextVulkan::SemaphoreWaitAtBegin - already set semaphore to wait on, can't set another one.
CRenderContextVulkan::SetSteamVrCompositorTexture failed because no Vulkan image was found.
CRenderContextVulkan:: Trying to resolve from a rect that is outside of the src rendertarget
CRenderDeviceBase::FindOrCreateTexture: Trying to load multiple mipmaps into 3d or array texture: %s
CRenderDeviceBase::InitPerFrameMemoryStack
CRenderDeviceVulkan::CreateDescriptorSet: Failed to create descriptor set.
CRenderDeviceVulkan::GetDeviceSpecificTexture() failed to get texture data.
CRenderDeviceVulkan::InitDevice: failed to get queue properties
CRenderDeviceVulkan::InitDevice: no graphics queue found
CRenderDeviceVulkan::InitDevice: vkEnumerateDeviceExtensionProperties( ... ) failed.
CRenderDeviceVulkan::RebakeStaticDescriptorSetsReferencingTexture - could not allocate descriptor in new pool.
CRenderDeviceVulkan::SetHardwareGammaRamp failed to get swap chain.
CRenderDeviceVulkan::UpdateDescriptorSet: Failed to update descriptor set.
CRenderThreadVulkan::OnReadPixels not supported for MSAA depth.  Requires shader-based MSAA depth resolve to be implemented.
CResourceArray
CResourceString
CRITICAL: 
cross
Cross
cross-product
CrossWorkgroupMemory
CrossWorkgroup or Function: 
cs_5_0
CSOAContainer::SetAttributeType - ERROR, trying to change type of previously-defined attribute %d!
CSolveIKChainAnimNode
c[subcomponent][.component]
CSwapChainBase::QueuePresentAndWait() looped for %d iterations without a present event.
CSwapChainVulkan::CreateSwapChain - can't create swapchain, ANativeWindow is null.
CSwapChainVulkan::SwapBuffers(): the main thread is more than %d frames ahead which means no swap queue images are available.  Waiting for outstanding frames...
CSwapChainVulkan::SwapBuffers(): waited for %0.2f seconds
cT7O1
CTextureInfoId CTextureManagerBase::AllocTextureSlot()
CTextureManagerBase::MarkAsyncUpdatedThisFrame - Invalid texture handle.
CTextureManagerBase::WasAsyncUpdatedThisFrame - Invalid texture handle.
CTextureManagerVulkan::ComputeTextureObject: Tried to create a depth-stencil texture which is *not* a render target!
/cT?O
CTransform
CTSListBase::CTSListBase()
CTSListBase: Misaligned list
CTSQueue<CFunctor *, false>::CTSQueue() [T = CFunctor *, bTestOptimizer = false]
CTSQueue<CMemoryManagerVulkan::FencedResourceList_t, false>::CTSQueue() [T = CMemoryManagerVulkan::FencedResourceList_t, bTestOptimizer = false]
CTSQueue corruption
CTSQueue<DynamicIndexBufferHandle_t__ *, false>::CTSQueue() [T = DynamicIndexBufferHandle_t__ *, bTestOptimizer = false]
CTSQueue<DynamicVertexBufferHandle_t__ *, false>::CTSQueue() [T = DynamicVertexBufferHandle_t__ *, bTestOptimizer = false]
CTSQueue: Misaligned queue
CTSQueue::Node_t *CTSQueue<CFunctor *, false>::Push(CTSQueue::Node_t *) [T = CFunctor *, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<CMemoryManagerVulkan::FencedResourceList_t, false>::Push(CTSQueue::Node_t *) [T = CMemoryManagerVulkan::FencedResourceList_t, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<DynamicIndexBufferHandle_t__ *, false>::Push(CTSQueue::Node_t *) [T = DynamicIndexBufferHandle_t__ *, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<DynamicVertexBufferHandle_t__ *, false>::Push(CTSQueue::Node_t *) [T = DynamicVertexBufferHandle_t__ *, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<QueuedDisplayListItem_t, false>::Push(CTSQueue::Node_t *) [T = QueuedDisplayListItem_t, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<QueuedSweepNode_t, false>::Push(CTSQueue::Node_t *) [T = QueuedSweepNode_t, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<SweepGroup_t *, false>::Push(CTSQueue::Node_t *) [T = SweepGroup_t *, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<unsigned short, false>::Push(CTSQueue::Node_t *) [T = unsigned short, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<VkCommandBuffer_T *, false>::Push(CTSQueue::Node_t *) [T = VkCommandBuffer_T *, bTestOptimizer = false]
CTSQueue<QueuedDisplayListItem_t, false>::CTSQueue() [T = QueuedDisplayListItem_t, bTestOptimizer = false]
CTSQueue<QueuedSweepNode_t, false>::CTSQueue() [T = QueuedSweepNode_t, bTestOptimizer = false]
CTSQueue<SweepGroup_t *, false>::CTSQueue() [T = SweepGroup_t *, bTestOptimizer = false]
CTSQueue<unsigned short, false>::CTSQueue() [T = unsigned short, bTestOptimizer = false]
CTSQueue<VkCommandBuffer_T *, false>::CTSQueue() [T = VkCommandBuffer_T *, bTestOptimizer = false]
cubeFaceCoord
cubeFaceCoordAMD
CubeFaceCoordAMD
cubeFaceIndex
cubeFaceIndexAMD
CubeFaceIndexAMD
CUBEMAP_FACE_NEGATIVE_X
CUBEMAP_FACE_NEGATIVE_Y
CUBEMAP_FACE_NEGATIVE_Z
CUBEMAP_FACE_POSITIVE_X
CUBEMAP_FACE_POSITIVE_Y
CUBEMAP_FACE_POSITIVE_Z
CubeMapFace_t
CUtlBlockMemory overflow!
CUtlBuffer::VaPrintf: String overflowed buffer [%llu]
CUtlFixedMemory overflow!
CUtlLeanVectorImpl::IndexType_t CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<unsigned char, 12, short>, unsigned char, short>::AddMultipleToTail(int) [B = CUtlLeanVectorFixedGrowableBase<unsigned char, 12, short>, T = unsigned char, I = short]
CUtlLeanVectorImpl::IndexType_t CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<VfxVariableIndexData_t, 2, int>, VfxVariableIndexData_t, int>::AddMultipleToTail(int) [B = CUtlLeanVectorFixedGrowableBase<VfxVariableIndexData_t, 2, int>, T = VfxVariableIndexData_t, I = int]
CUtlLinkedList overflow! (exhausted index range)
CUtlLinkedList overflow! (exhausted memory allocator)
CUtlMemoryPoolBase: Cannot specify 0 elements to grow each time!
CUtlMemoryPoolBase::CUtlMemoryPoolBase(int, int, int, MemoryPoolGrowType_t, const char *)
CUtlRBTree overflow with %u elements!
CUtlStreamBuffer does not support TEXT_BUFFER's use CUtlBuffer
CUtlString
CUtlStringToken
CUtlSymbol
CUtlSymbolLarge
CUtlVector
__cxa_allocate_exception
__cxa_atexit
__cxa_begin_catch
__cxa_end_catch
__cxa_finalize
__cxa_free_exception
__cxa_guard_acquire
__cxa_guard_release
__cxa_pure_virtual
__cxa_rethrow
__cxa_throw
c@y1z
Cycle or diamond double-reference to '%s'
^C)yhi
CZ8	I
   $%d = 
D15S1
D16_SHADOW
D24FS8
D24X4S4
D24X8
D24X8_SHADOW
D3DCOLORtoUBYTE4
	D@8!
D@8)%
D$@8$
	D@8)m
"D@9%
D@9_ 
D@9ElA
.data
@data
/data/data/source2_main/src/thirdparty/glslang/External/spirv-tools/source/opt/type_manager.cpp
data error
Data error in compressed datastream
data_height = 
data height too large.
.data.rel.ro
Data size too short
data width or data height is negative.
data width too large.
dataWindow
"dataWindow" attribute not found in the header or invalid.
data_with or data_height too large. data_width: 
DCT coefficient out of range
DCT scaled block size %dx%d not supported
%d %d
%d..%d
DDDDUUUU
DDDDUUUUDDDDUUUU
ddx_coarse
ddx_fine
ddy_coarse
ddy_fine
debug base type encoding
DebugCompilationUnit
debug composite type
DebugDeclare
-debugdxsupport
DebugExpression
DebugFunction
DebugFunctionDeclaration
Debugging instructions are not allowed in the WebGPU execution 
DebugGlobalVariable
DebugInfo
debug info flags
DebugInfoNone
DebugInlinedAt
DebugInlinedVariable
DebugLexicalBlock
DebugLexicalBlockDiscriminator
DebugLocalVariable
DebugMacroDef
DebugMacroUndef
DebugNoScope
debug operation
DebugOperation
debug pragma syntax is incorrect
DebugScope
DebugTextureInfo001
DebugTypeArray
DebugTypeBasic
DebugTypeComposite
DebugTypedef
DebugTypeEnum
DebugTypeFunction
DebugTypeInheritance
DebugTypeMember
DebugTypePointer
DebugTypePtrToMember
debug type qualifier
DebugTypeQualifier
DebugTypeTemplate
DebugTypeTemplateParameter
DebugTypeTemplateParameterPack
DebugTypeTemplateTemplateParameter
DebugTypeVector
DebugValue
declaration in annotation
declaration list
declaration_statement
decompose-initialized-variables
Decompressed %i texture mips in %.2f ms (%.1fmb/s)
Decompression error
Decompression Error
Decompression failure
DEC_OP
 decorated as 
' decorated with 
' decorated with both 
 decoration applied to an object with invalid type
 decoration applied to a non-object
 decoration applied to a value with void type
DecorationGroup
 decoration may not be applied to 
Decorations taking ID parameters may not be used with OpDecorateId
Decorations that don't take ID parameters may not be used with OpDecorateId
 decoration targeting 
default
default: 
Default
default qualifier requires 'uniform', 'buffer', 'in', or 'out' storage qualification
' default value must be at least 1.
DefaultVB
-deferTextureLoads
#define
Define Arithmetic Table 0x%02x: 0x%02x
"defined" can't be (un)defined:
 defined in block 
#define E_GL_EXT_shader_atomic_int64 1
#define E_GL_EXT_shader_realtime_clock 1
#define GL_AMD_gcn_shader 1
#define GL_AMD_gpu_shader_half_float 1
#define GL_AMD_gpu_shader_half_float_fetch 1
#define GL_AMD_gpu_shader_int16 1
#define GL_AMD_shader_ballot 1
#define GL_AMD_shader_explicit_vertex_parameter 1
#define GL_AMD_shader_fragment_mask 1
#define GL_AMD_shader_image_load_store_lod 1
#define GL_AMD_shader_trinary_minmax 1
#define GL_AMD_texture_gather_bias_lod 1
#define GL_ANDROID_extension_pack_es31a 1
#define GL_ARB_compute_shader 1
#define GL_ARB_derivative_control 1
#define GL_ARB_enhanced_layouts 1
#define GL_ARB_explicit_attrib_location 1
#define GL_ARB_explicit_uniform_location 1
#define GL_ARB_fragment_shader_interlock 1
#define GL_ARB_gpu_shader5 1
#define GL_ARB_gpu_shader_int64 1
#define GL_ARB_post_depth_coverage 1
#define GL_ARB_separate_shader_objects 1
#define GL_ARB_shader_atomic_counters 1
#define GL_ARB_shader_ballot 1
#define GL_ARB_shader_draw_parameters 1
#define GL_ARB_shader_group_vote 1
#define GL_ARB_shader_image_load_store 1
#define GL_ARB_shader_stencil_export 1
#define GL_ARB_shader_texture_image_samples 1
#define GL_ARB_shader_texture_lod 1
#define GL_ARB_shading_language_420pack 1
#define GL_ARB_sparse_texture2 1
#define GL_ARB_sparse_texture_clamp 1
#define GL_ARB_tessellation_shader 1
#define GL_ARB_texture_cube_map_array 1
#define GL_ARB_texture_gather 1
#define GL_ARB_texture_rectangle 1
#define GL_ARB_viewport_array 1
#define GL_compatibility_profile 1
#define GL_core_profile 1
#define GL_ES 1
#define GL_EXT_buffer_reference 1
#define GL_EXT_buffer_reference2 1
#define GL_EXT_buffer_reference_uvec2 1
#define GL_EXT_control_flow_attributes 1
#define GL_EXT_demote_to_helper_invocation 1
#define GL_EXT_device_group 1
#define GL_EXT_frag_depth 1
#define GL_EXT_fragment_invocation_density 1
#define GL_EXT_geometry_point_size 1
#define GL_EXT_geometry_shader 1
#define GL_EXT_gpu_shader5 1
#define GL_EXT_multiview 1
#define GL_EXT_nonuniform_qualifier 1
#define GL_EXT_post_depth_coverage 1
#define GL_EXT_primitive_bounding_box 1
#define GL_EXT_samplerless_texture_functions 1
#define GL_EXT_scalar_block_layout 1
#define GL_EXT_shader_16bit_storage 1
#define GL_EXT_shader_8bit_storage 1
#define GL_EXT_shader_explicit_arithmetic_types 1
#define GL_EXT_shader_explicit_arithmetic_types_float16 1
#define GL_EXT_shader_explicit_arithmetic_types_float32 1
#define GL_EXT_shader_explicit_arithmetic_types_float64 1
#define GL_EXT_shader_explicit_arithmetic_types_int16 1
#define GL_EXT_shader_explicit_arithmetic_types_int32 1
#define GL_EXT_shader_explicit_arithmetic_types_int64 1
#define GL_EXT_shader_explicit_arithmetic_types_int8 1
#define GL_EXT_shader_image_load_formatted 1
#define GL_EXT_shader_io_blocks 1
#define GL_EXT_shader_non_constant_global_initializers 1
#define GL_EXT_shader_subgroup_extended_types_float16 1
#define GL_EXT_shader_subgroup_extended_types_int16 1
#define GL_EXT_shader_subgroup_extended_types_int64 1
#define GL_EXT_shader_subgroup_extended_types_int8 1
#define GL_EXT_shader_texture_lod 1
#define GL_EXT_shadow_samplers 1
#define GL_EXT_tessellation_point_size 1
#define GL_EXT_tessellation_shader 1
#define GL_EXT_texture_buffer 1
#define GL_EXT_texture_cube_map_array 1
#define GL_EXT_YUV_target 1
#define GL_FRAGMENT_PRECISION_HIGH 1
#define GL_GOOGLE_cpp_style_line_directive 1
#define GL_GOOGLE_include_directive 1
#define GL_KHR_blend_equation_advanced 1
#define GL_KHR_shader_subgroup_arithmetic 1
#define GL_KHR_shader_subgroup_ballot 1
#define GL_KHR_shader_subgroup_basic 1
#define GL_KHR_shader_subgroup_clustered 1
#define GL_KHR_shader_subgroup_quad 1
#define GL_KHR_shader_subgroup_shuffle 1
#define GL_KHR_shader_subgroup_shuffle_relative 1
#define GL_KHR_shader_subgroup_vote 1
#define GL_NV_compute_shader_derivatives 1
#define GL_NV_conservative_raster_underestimation 1
#define GL_NV_cooperative_matrix 1
#define GL_NV_fragment_shader_barycentric 1
#define GL_NV_geometry_shader_passthrough 1
#define GL_NV_integer_cooperative_matrix 1
#define GL_NV_mesh_shader 1
#define GL_NV_ray_tracing 1
#define GL_NV_sample_mask_override_coverage 1
#define GL_NV_shader_atomic_int64 1
#define GL_NV_shader_noperspective_interpolation 1
#define GL_NV_shader_sm_builtins 1
#define GL_NV_shader_subgroup_partitioned 1
#define GL_NV_shader_texture_footprint 1
#define GL_NV_shading_rate_image 1
#define GL_NV_viewport_array2 1
#define GL_OES_EGL_image_external 1
#define GL_OES_EGL_image_external_essl3 1
#define GL_OES_geometry_point_size 1
#define GL_OES_geometry_shader 1
#define GL_OES_gpu_shader5 1
#define GL_OES_primitive_bounding_box 1
#define GL_OES_sample_variables 1
#define GL_OES_shader_image_atomic 1
#define GL_OES_shader_io_blocks 1
#define GL_OES_shader_multisample_interpolation 1
#define GL_OES_standard_derivatives 1
#define GL_OES_tessellation_point_size 1
#define GL_OES_tessellation_shader 1
#define GL_OES_texture_3D 1
#define GL_OES_texture_buffer 1
#define GL_OES_texture_cube_map_array 1
#define GL_OES_texture_storage_multisample_2d_array 1
#define GL_OVR_multiview 1
#define GL_OVR_multiview2 1
#define GL_SPIRV 
Define Huffman Table 0x%02x
Define Quantization Table %d  precision %d
Define Restart Interval %u
#define SHADER_MODEL_4 1
#define VULKAN 
 definition does not dominate its parent 
 ( def. "%s" )
degenerate cases of merge-block or continue-target.
DegreeEuler
degrees
Degrees
delete
Deleting texture with outstanding streaming request (%s)
demote
Demote
DEMOTE
demote_statement
DemoteToHelperInvocationEXT
DenormFlushToZero
DenormPreserve
: Dependency 
dependency_infinite
DependencyInfinite
dependency_length
DependencyLength
 depends on 
 deprecated in version 
deprecated, may be removed in future release
depth_any
depth_greater
DepthGreater
depth layout qualifier
depth_less
DepthLess
DepthReplacing
DepthStencil
depth_unchanged
DepthUnchanged
Deref
__deregister_frame
__deregister_frame_info
__deregister_frame_info_bases
DerivativeControl
derivative_group_
derivative_group_linearnv
derivative_group_quadsnv
derivative_group_quadsNV
derivative_group_quadsNV and derivative_group_linearNV
Derivative instructions require DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model: 
Derivative instructions require Fragment or GLCompute execution model: 
Description
Descriptor pool allocation failed, reducing descriptors to attempt allocating in pool to %d
descriptor-scalar-replacement
descriptor set
DescriptorSet
descriptorSetTable
Detected preferred depth/stencil format does not support sampling, disabling read-only depth/stencil.
determinant
Determinant
developer
 devicecoherent
DEVICECOHERENT
DeviceEnqueue
device_event
DeviceGroup
Device ID mismatch in pipeline cache file (Got: %x Expected: %x).  Deleting %s in order to regenerate it.
DeviceMemoryBarrier
DeviceMemoryBarrierWithGroupSync
Device, Workgroup and Invocation
DevMsg
DevShader
Dev Shader
@DEy 
D_FADE_COLOR
dFdxCoarse
dFdxFine
dFdyCoarse
dFdyFine
dFEycJEybNEy
DFUI,,
DFUI,U
Dh`8%h`8
Did8@
 did not find an member index to get underlying data type for struct type.
Didn't expect more than one scan
(Did you mean gl_InstanceIndex?)
(Did you mean gl_VertexIndex?)
digraph {
dimensionality
Dim SubpassData requires format Unknown
Dim SubpassData requires Fragment execution model: 
Dim SubpassData requires Sampled to be 2
dir=%d %d %d, err=%f
Direct3D 11
Direct3D 9
Direct3D 9 sampler declaration
: direct index for structure
directive must end with a newline
disable
Disabling validation feature: %s
-disallowhwmorph
discard
DISCARD
Discarding abandoned streaming texture load for %s
DispatchComputeShaderIndirect failed - invalid dispatch buffer.
Display GPU memory usage.
displayWindow
"displayWindow" attribute not found in the header.
DIV_ASSIGN
divide second child into first child
division by 0
dl_iterate_phdr
dlopen
dlsym
DMAT2
dmat2x2
DMAT2X2
DMAT2X3
DMAT2X4
DMAT3
DMAT3X2
dmat3x3
DMAT3X3
DMAT3X4
DMAT4
DMAT4X2
DMAT4X3
dmat4x4
DMAT4X4
dmg.bullets
dmg.club
dmg.explosive
dmg.fire
d(!N$
does not apply to floating point images
does not apply to signed integer images
does not apply to this type:
does not apply to unsigned integer images
does not dominate
 does not dominate its case construct 
 does not dominate its use in block 
 does not have a 
) does not match block's predecessor count (
 does not match incoming value <id> 
' does not match Pointer <id> '
' does not match the Function Type's return type <id> '
' does not match the OpTypeFunction parameter type of the same index.
) does not match the type that results from indexing into the base <id> (Op
) does not match the type that results from indexing into the composite (Op
) does not match the type that results from indexing into the Composite (Op
 does not meet this requirement.
does not operate on this type:
does not operate on types containing float16
does not operate on types containing (u)int16
does not operate on types containing (u)int8
 does not produce a result ID.
 does not reference an OpExtInstImport result Id
' does not represent a value.
does not strictly dominate
Domain Shader
 do not match.
-dontEvictTextures
dont_flatten
: DontFlatten
DontInline
dont_unroll
: DontUnroll
do sub-statement
DotaCardGameClient_001
dot-product
DOUBLE
double1
double1x1
double1x2
double1x3
double1x4
double2
double2 conversion not implemented
double2x1
double2x2
double2x3
double2x4
double3
double3x1
double3x2
double3x3
double3x4
double4
double4x1
double4x2
double4x3
double4x4
doubleBitsToInt64
doubleBitsToUint64
DOUBLECONSTANT
double floating-point suffix
double fma(double, double, double);dvec2  fma(dvec2,  dvec2,  dvec2 );dvec3  fma(dvec3,  dvec3,  dvec3 );dvec4  fma(dvec4,  dvec4,  dvec4 );
double frexp(double, out int);dvec2  frexp( dvec2, out ivec2);dvec3  frexp( dvec3, out ivec3);dvec4  frexp( dvec4, out ivec4);double ldexp(double, int);dvec2  ldexp( dvec2, ivec2);dvec3  ldexp( dvec3, ivec3);dvec4  ldexp( dvec4, ivec4);double packDouble2x32(uvec2);uvec2 unpackDouble2x32(double);
double literal
double matrix
Double-register of KV3 conversion (from '%s' to '%s')
doubles cannot start on an odd-numbered component
double sqrt(double);dvec2  sqrt(dvec2);dvec3  sqrt(dvec3);dvec4  sqrt(dvec4);double inversesqrt(double);dvec2  inversesqrt(dvec2);dvec3  inversesqrt(dvec3);dvec4  inversesqrt(dvec4);double abs(double);dvec2  abs(dvec2);dvec3  abs(dvec3);dvec4  abs(dvec4);double sign(double);dvec2  sign(dvec2);dvec3  sign(dvec3);dvec4  sign(dvec4);double floor(double);dvec2  floor(dvec2);dvec3  floor(dvec3);dvec4  floor(dvec4);double trunc(double);dvec2  trunc(dvec2);dvec3  trunc(dvec3);dvec4  trunc(dvec4);double round(double);dvec2  round(dvec2);dvec3  round(dvec3);dvec4  round(dvec4);double roundEven(double);dvec2  roundEven(dvec2);dvec3  roundEven(dvec3);dvec4  roundEven(dvec4);double ceil(double);dvec2  ceil(dvec2);dvec3  ceil(dvec3);dvec4  ceil(dvec4);double fract(double);dvec2  fract(dvec2);dvec3  fract(dvec3);dvec4  fract(dvec4);double mod(double, double);dvec2  mod(dvec2 , double);dvec3  mod(dvec3 , double);dvec4  mod(dvec4 , double);dvec2  mod(dvec2 , dvec2);dvec3  mod(dvec3 , dvec3);dvec4  mod(dvec4 , dvec4);double modf(double, out double);dvec2  modf(dvec2,  out dvec2);dvec3  modf(dvec3,  out dvec3);dvec4  modf(dvec4,  out dvec4);double min(double, double);dvec2  min(dvec2,  double);dvec3  min(dvec3,  double);dvec4  min(dvec4,  double);dvec2  min(dvec2,  dvec2);dvec3  min(dvec3,  dvec3);dvec4  min(dvec4,  dvec4);double max(double, double);dvec2  max(dvec2 , double);dvec3  max(dvec3 , double);dvec4  max(dvec4 , double);dvec2  max(dvec2 , dvec2);dvec3  max(dvec3 , dvec3);dvec4  max(dvec4 , dvec4);double clamp(double, double, double);dvec2  clamp(dvec2 , double, double);dvec3  clamp(dvec3 , double, double);dvec4  clamp(dvec4 , double, double);dvec2  clamp(dvec2 , dvec2 , dvec2);dvec3  clamp(dvec3 , dvec3 , dvec3);dvec4  clamp(dvec4 , dvec4 , dvec4);double mix(double, double, double);dvec2  mix(dvec2,  dvec2,  double);dvec3  mix(dvec3,  dvec3,  double);dvec4  mix(dvec4,  dvec4,  double);dvec2  mix(dvec2,  dvec2,  dvec2);dvec3  mix(dvec3,  dvec3,  dvec3);dvec4  mix(dvec4,  dvec4,  dvec4);double mix(double, double, bool);dvec2  mix(dvec2,  dvec2,  bvec2);dvec3  mix(dvec3,  dvec3,  bvec3);dvec4  mix(dvec4,  dvec4,  bvec4);double step(double, double);dvec2  step(dvec2 , dvec2);dvec3  step(dvec3 , dvec3);dvec4  step(dvec4 , dvec4);dvec2  step(double, dvec2);dvec3  step(double, dvec3);dvec4  step(double, dvec4);double smoothstep(double, double, double);dvec2  smoothstep(dvec2 , dvec2 , dvec2);dvec3  smoothstep(dvec3 , dvec3 , dvec3);dvec4  smoothstep(dvec4 , dvec4 , dvec4);dvec2  smoothstep(double, double, dvec2);dvec3  smoothstep(double, double, dvec3);dvec4  smoothstep(double, double, dvec4);bool  isnan(double);bvec2 isnan(dvec2);bvec3 isnan(dvec3);bvec4 isnan(dvec4);bool  isinf(double);bvec2 isinf(dvec2);bvec3 isinf(dvec3);bvec4 isinf(dvec4);double length(double);double length(dvec2);double length(dvec3);double length(dvec4);double distance(double, double);double distance(dvec2 , dvec2);double distance(dvec3 , dvec3);double distance(dvec4 , dvec4);double dot(double, double);double dot(dvec2 , dvec2);double dot(dvec3 , dvec3);double dot(dvec4 , dvec4);dvec3 cross(dvec3, dvec3);double normalize(double);dvec2  normalize(dvec2);dvec3  normalize(dvec3);dvec4  normalize(dvec4);double faceforward(double, double, double);dvec2  faceforward(dvec2,  dvec2,  dvec2);dvec3  faceforward(dvec3,  dvec3,  dvec3);dvec4  faceforward(dvec4,  dvec4,  dvec4);double reflect(double, double);dvec2  reflect(dvec2 , dvec2 );dvec3  reflect(dvec3 , dvec3 );dvec4  reflect(dvec4 , dvec4 );double refract(double, double, double);dvec2  refract(dvec2 , dvec2 , double);dvec3  refract(dvec3 , dvec3 , double);dvec4  refract(dvec4 , dvec4 , double);dmat2 matrixCompMult(dmat2, dmat2);dmat3 matrixCompMult(dmat3, dmat3);dmat4 matrixCompMult(dmat4, dmat4);dmat2x3 matrixCompMult(dmat2x3, dmat2x3);dmat2x4 matrixCompMult(dmat2x4, dmat2x4);dmat3x2 matrixCompMult(dmat3x2, dmat3x2);dmat3x4 matrixCompMult(dmat3x4, dmat3x4);dmat4x2 matrixCompMult(dmat4x2, dmat4x2);dmat4x3 matrixCompMult(dmat4x3, dmat4x3);dmat2   outerProduct(dvec2, dvec2);dmat3   outerProduct(dvec3, dvec3);dmat4   outerProduct(dvec4, dvec4);dmat2x3 outerProduct(dvec3, dvec2);dmat3x2 outerProduct(dvec2, dvec3);dmat2x4 outerProduct(dvec4, dvec2);dmat4x2 outerProduct(dvec2, dvec4);dmat3x4 outerProduct(dvec4, dvec3);dmat4x3 outerProduct(dvec3, dvec4);dmat2   transpose(dmat2);dmat3   transpose(dmat3);dmat4   transpose(dmat4);dmat2x3 transpose(dmat3x2);dmat3x2 transpose(dmat2x3);dmat2x4 transpose(dmat4x2);dmat4x2 transpose(dmat2x4);dmat3x4 transpose(dmat4x3);dmat4x3 transpose(dmat3x4);double determinant(dmat2);double determinant(dmat3);double determinant(dmat4);dmat2 inverse(dmat2);dmat3 inverse(dmat3);dmat4 inverse(dmat4);bvec2 lessThan(dvec2, dvec2);bvec3 lessThan(dvec3, dvec3);bvec4 lessThan(dvec4, dvec4);bvec2 lessThanEqual(dvec2, dvec2);bvec3 lessThanEqual(dvec3, dvec3);bvec4 lessThanEqual(dvec4, dvec4);bvec2 greaterThan(dvec2, dvec2);bvec3 greaterThan(dvec3, dvec3);bvec4 greaterThan(dvec4, dvec4);bvec2 greaterThanEqual(dvec2, dvec2);bvec3 greaterThanEqual(dvec3, dvec3);bvec4 greaterThanEqual(dvec4, dvec4);bvec2 equal(dvec2, dvec2);bvec3 equal(dvec3, dvec3);bvec4 equal(dvec4, dvec4);bvec2 notEqual(dvec2, dvec2);bvec3 notEqual(dvec3, dvec3);bvec4 notEqual(dvec4, dvec4);
double vector
do-while loops not available
dPdxCoarse
DPdxCoarse
dPdxFine
DPdxFine
dPdyCoarse
DPdyCoarse
dPdyFine
DPdyFine
DrawId
DrawIndex
DrawParameters
%d (%s)
ds_5_0
Duplicate bKGD chunk
Duplicate cHRM chunk
duplicated value
Duplicate gAMA chunk
Duplicate hIST chunk
Duplicate iCCP chunk
duplicate label
duplicate macro parameter
duplicate member name:
Duplicate non-aggregate type declarations are not allowed. Opcode: 
Duplicate oFFs chunk
Duplicate pCAL chunk
Duplicate pHYs chunk
Duplicate PLTE chunk
Duplicate sBIT chunk
Duplicate sCAL chunk
Duplicate sRGB chunk
Duplicate tIME chunk
Duplicate tRNS chunk
DVEC2
DVEC3
DVEC4
dword
*-Dx_
-dx11
Dx_! k
dxsupport.cfg
DXT1_ONEBITALPHA
DXT5_NM
Dya:A
Dya~B
.dynamic
DynamicCombo
DynamicComboFromFeature
DynamicComboRule
   DynamicComboRule( 
Dynamic combos:
*** Dynamic combo "%s" in %s cannot refer to a feature! Only static combos can refer to features.
DynamicConfigList
dynamic_interaction
DynamicPoolPMB_%s
DynamicPool_%s
.dynstr
.dynsym
<e;)(
E9i^A
*eA9*
earlydepthstencil
EarlyFragmentTests
ECiPki
EconItemToolModel_001
_edata
EditorDynamicConfig
Eh`8$h`8
eha8fhb8
Ehe8%
.eh_frame
.eh_frame_hdr
Ei.8%jf8
eikonal
either the block needs a location, or all members need a location, or no members have a location
e*L9%
e&L9%
-element array of
Element type is not defined.
#elif
#elif after #else
eliminate-dead-branches
eliminate-dead-code-aggressive
eliminate-dead-const
eliminate-dead-functions
eliminate-dead-inserts
eliminate-dead-members
eliminate-dead-variables
eliminate-insert-extract
eliminate-local-multi-store
eliminate-local-single-block
eliminate-local-single-store
eliminate-redundant-line-info
#else after #else
else statement
emitFromWorld
EmitStreamVertex
EmitVertex
-empty
#empty#
Empty
EmptyAnim
Empty input file
Empty JPEG image (DNL not supported)
E*!N%
enable_limit
Enabling GPU validation.
Enabling instance extension: %s.
Enabling validation layer: %s.
Encountered extended instruction GLSLstd450Bad
__end__
endInvocationInterlockARB
endInvocationInterlockARB() cannot be placed after a return from main()
endInvocationInterlockARB() cannot be placed within flow control
endInvocationInterlockARB() must be in a fragment shader
endInvocationInterlockARB() must be in main()
endInvocationInterlockARB() must only be called once
EndInvocationInterlockEXT
End Of Image
End of input in comment
End of input in macro
End of input reached while decoding Op
End of line in macro substitution:
End of line in string
EndPrimitive
EndStreamPrimitive
EngineServiceMgr001
EnqueuedWorkgroupSize
EnqueueKernel
EnqueueMarker
Entering state %d
entry-point
EntryPoint
entry point cannot return a value
Entry point id '
entry point must return a value for use with patch constant function
Entry point name "
Entry point not found
@entryPointOutput
Entry points may not have a call graph with cycles.
EnvironmentMapBuilder_001
 environments.
EQ_OP
equality_expression
equal_spacing
#error
#error 
error: 
ERROR : 
ERROR!
*** Error adding constant buffer to array!
*** Error adding variable to array!
*** Error! AllowN (nargs=%d) rule in %s must have at least one arg type match the rule type!
*** Error! AllowN rule in %s has out-of-order args! Args must be ordered: Features, Static Combos, Dynamic Combos!
*** Error! AllowN rule in %s must have all args after N be 0..x!
): error at column 
Error! Cannot find GAME\%s file in current search paths! If this is a new shader, you must run vfxcompile.exe at least once, and then reload shaders.
*** Error! ChildOf and Requires rule in %s must have first arg be 0..x!
*** Error! ChildOf and Requires rule in %s must have first arg type match rule type!
*** Error! ChildOf is only allowed in FeatureRules! %s
*** Error! Could not find feature or static combo with name "%s" in %s!
*** Error! Could not find feature with name "%s" in %s!
*** Error! Could not find static or dynamic combo with name "%s" in %s!
Error creating compute pipeline containing shader: %s
Error creating graphics pipeline containing shader: %s
Error creating the clearing pixel shader!
Error creating the clearing vertex shader!
Error creating the NULL pixel shader!
Error creating the resolve depth MSAA pixel shader!
Error creating the resolve MSAA pixel shader!
Error creating the resolve pixel shader!
Error creating the resolve rotated pixel shader!
Error creating the resolve rotated vertex shader!
Error creating the resolve vertex shader!
Error decompressing static combo data
Error: discarding
ERROR: Failed to open file: %s
Error finding static combo data in VCS file!
Error from SDL_GetCurrentDisplayMode( %d ) = %s
Error from SDL_GetDisplayMode( %d, %d ) = %s
*** Error in "%s" - description block can only contain strings!
*** Error in "%s" - expecting '"'
error in user chunk
Error loading static combo data from VCS file!
*** Error masking unused parts! Equal sign not found after token "%s"! (line %d)
*** Error masking unused parts for "%s"!
*** Error masking unused parts! Unknown text found. This is usually caused by a '{' or '}' not tabbed properly or an invalid declaration at the global scope. (line %d):
*** Error! Multiple dynamic combos are putting the same constant (%s) in different descriptor sets. This won't work correctly.
*** Error! Multiple dynamic combos are putting the same constant (%s) in different locations. This shouldn't happen.
*** Error! Multiple dynamic combos are putting the same texure (%s) in different descriptor set slots. This won't work correctly.
ERROR_not_op_extension
*** Error parsing AllowN rule in %s!
*** Error parsing AllowN rule in %s! N must be >= 0!
*** Error parsing arg for rule in %s! Found unexpected character '%c'. The only allowed arg modifier is '=='.
*** Error parsing modes for %s! You need at least 1 mode. Use "Default();" if you don't need specific mode support.
*** Error parsing mode "%s"! Modes can either fallback to a different shader or set static combo values, but not both!
*** Error parsing mode "%s"! Modes require arguments in the form Name( arg )!
*** Error parsing =N for mode %s in %s!
*** Error parsing ==N for rule in %s!
*** Error parsing ==N for rule in %s! AllowN args not allowed to have ==0!
*** Error parsing ==N for rule in %s! First arg to RequiresN cannot be ==0!
*** Error parsing ==N for rule in %s! Not allowed on ChildOf. Use RequiresN instead.
*** Error parsing RequiresN rule in %s!
*** Error parsing RequiresN rule in %s! N must be >= 1!
Error parsing supported compile targets from vfx file "%s"
Error: popping
Error resolving symbol "%s"
ERROR: Resource name "%s" has the incorrect extension "%s" for the specified resource type (expected "%s")!
Error: Result Id is 0
*** Error! Rule error string must be quoted in %s!
ERROR: Specified full path %s does not lie under the mod search path!)
ERROR: Specified path %s could not be made content-relative
*** Error! Too many args found in rule in %s!
*** Error! Too many or too few arguments to a rule in %s!
Error: Type Id is 0
ERROR! VK call failed! result = %s ( %s )
ETC compression not supported on this target .
EvaluateAttributeAtCentroid
EvaluateAttributeAtSample
EvaluateAttributeSnapped
event_class
eventindex
event_keys
EventSystem001
Evict all resident texture.
Exceeded size limit while expanding chunk
) exceeds the limit (
(except for OpLine, which can be mixed with OpPhi).
exclusive-or
exclusive_or_expression
exclusive or second child into first child
EXECUTABLE_PATH
executeCallableNV
ExecuteCallableNV
execution mode
ExecutionMode
Execution mode can only be used with a Geometry or tessellation execution model.
Execution mode can only be used with a Geometry, tessellation or MeshNV execution model.
Execution mode can only be used with a Kernel, GLCompute, MeshNV, or TaskNV execution model.
Execution mode can only be used with a Kernel or GLCompute execution model.
Execution mode can only be used with a tessellation execution model.
Execution mode can only be used with the Fragment execution model.
Execution mode can only be used with the Geometry execution model.
Execution mode can only be used with the Geometry or MeshNV execution model.
Execution mode can only be used with the Kernel execution model.
ExecutionModeId
Execution mode must be one of OriginUpperLeft, DepthReplacing, DepthGreater, DepthLess, DepthUnchanged, LocalSize, or LocalSizeHint for WebGPU environment.
: Execution scope is limited to Subgroup or Workgroup
 exits the 
: expected 
expected ')'
Expected
Expected 
Expected '['
Expected '{'
Expected '#'
Expected []
expected 16, 32, or 64 bits for first type parameter
Expected 32-bit float scalar or vector type as Result Type: 
expected 8 or 32 bits for first type parameter
"(" expected after 'debug' keyword
Expected '=' after member name '%s'
Expected "="after member '%s'
"(" expected after 'optimize' keyword
'=' expected after result id.
: expected Aliased or Restrict for PhysicalStorageBufferEXT pointer.
: expected AliasedPointerEXT or RestrictPointerEXT for 
: expected AliasedPointerEXT or RestrictPointerEXT for PhysicalStorageBufferEXT pointer.
expected all operands to be int scalars or vectors
expected all operands to have the same bit width as 
expected all operands to have the same dimension as 
Expected '&' and instance name or 'NULL'
Expected arithmetic operands to be of Result Type: 
Expected arithmetic operands to have the same bit width 
Expected arithmetic operands to have the same dimension 
expected a single integer argument
Expected a struct as Result Type: 
Expected Base dimension to be equal to Result Type dimension: 
Expected Base to be int scalar or vector: 
Expected Base to have the same bit width 
Expected Base to have the same dimension 
Expected Base Type to be equal to Result Type: 
Expected Base Type to be int scalar or vector: 
expected bit width of components of Hi and Lo operands to be half of the bit width of components of Result Type
expected bit width of Result Type components to be 16, 32 or 64
Expected bool scalar or vector type as condition: 
Expected bool scalar or vector type as Result Type: 
Expected bool scalar type as Result Type: 
Expected both Image Operand Grad ids to be float scalars or 
Expected both objects to be of Result Type: 
Expected both operands to be of Result Type: 
Expected both operands to be of Result Type member type: 
Expected both operands to have the same component bit width: 
expected 'c'
Expected columns of Matrix type and Result Type to be 
Expected column type of Result Type to be equal to the type 
Expected column type of the matrix to be equal to Result Type: 
Expected column types of Result Type and left matrix to be 
: expected Comparator to be of type Result Type
Expected Component to be 32-bit int scalar
Expected component types of Matrix and Result Type to be 
Expected component types of Result Type and matrix to be 
Expected component types of Result Type and right matrix to be 
Expected component types of Result Type and vector to be 
Expected component types of the operands to be equal: 
Expected component type to be equal to Result Type: 
Expected Component type to be equal to Result Type 
Expected Composite to be an object of composite type
Expected Constituents to be scalars or vectors of
Expected Constituent type to be equal to the 
Expected Constituent type to be equal to the column 
Expected Constituent type to be equal to the component type
Expected cooperative matrix type as A Type: 
Expected cooperative matrix type as B Type: 
Expected cooperative matrix type as C Type: 
Expected cooperative matrix type as Result Type: 
Expected cooperative matrix types
Expected Coordinate to be float scalar or vector
Expected Coordinate to be integer scalar or vector
Expected Coordinate to be int or float scalar or vector
Expected Coordinate to be int scalar or vector
Expected Coordinate to have 
Expected Coordinate to have at least 
Expected ( <count> )
Expected Count Type to be int scalar: 
expected Data to be a 32 or 64-bit float scalar
expected Data to be a 32 or 64-bit float vector
expected Data to be an int or float vector
expected Data to have 2, 3, 4, 8 or 16 components
expected data type of the pointer to be a 32-bit int scalar or vector type
expected data type of the pointer to be equal to Result Type
expected data type of the pointer to have the same number of components as Result Type
Expected Dref to be of 32-bit float type
: expected Execution Scope to be a 32-bit int
Expected floating scalar or vector type as Result Type: 
Expected float matrix type as left operand: 
Expected float matrix type as Result Type: 
Expected float matrix type as right operand: 
Expected float scalar or vector type as Result Type: 
Expected float scalar type as Result Type: 
Expected float vector as operand: 
Expected float vector type as left operand: 
Expected float vector type as Result Type: 
Expected float vector type as right operand: 
expected Format data type to be 8-bit int
expected Format storage class to be UniformConstant
Expected '=', found end of stream.
expected four type parameters
Expected hex byte (eg. 00-FF)
expected Hi and Lo operands to have the same number of components as Result Type
expected Hi and Lo operands to have the same type
Expected id to start with %.
Expected Image 'Dim' cannot be Cube
Expected Image 'Dim' must be one of 1D, 2D, or Cube when Arrayed is 1
Expected Image 'Dim' parameter to be 1D, 2D, 3D or Rect
Expected Image 'Dim' parameter to be not SubpassData.
Expected Image Operand Bias to be float scalar
Expected Image Operand ConstOffsets array componenets to be int vectors of size 2
Expected Image Operand ConstOffsets to be a const object
Expected Image Operand ConstOffsets to be an array of size 4
Expected Image Operand ConstOffset to be a const object
Expected Image Operand ConstOffset to be int scalar or 
Expected Image Operand ConstOffset to have 
Expected Image Operand Grad dx to have 
Expected Image Operand Grad dy to have 
Expected Image Operand Lod to be float scalar when used 
Expected Image Operand Lod to be int scalar when used with 
Expected Image Operand MinLod to be float scalar
Expected Image Operand Offset to be int scalar or 
Expected Image Operand Offset to have 
Expected Image Operand Sample to be int scalar
Expected Image operand to be of type OpTypeSampledImage
Expected Image 'Sampled' parameter to be 0 or 1
Expected Image 'Sampled' parameter to be 0 or 2
Expected Image 'Sampled' parameter to be 1
Expected Image 'Sampled' parameter to be 1 
Expected Image 'Sampled Type' to be the same as 
Expected Image 'Sampled Type' to be the same as Texel 
Expected Image 'Sampled Type' to be the same as the Type pointed to by Result Type
Expected Image to be of type OpTypeImage
Expected Image to be of type OpTypeImage.
Expected Image to be OpTypePointer
Expected Image to be OpTypePointer with Type OpTypeImage
Expected Index to be int scalar
expected 'INF'
Expected input and Result Type to point to the same type: 
Expected input to be a pointer: 
Expected input to be a pointer, int scalar or 32-bit int vector if Result Type is pointer: 
Expected input to be a pointer or int or float vector 
Expected input to be a pointer or int scalar if Result Type is pointer: 
Expected input to be float scalar or vector: 
Expected input to be int scalar or vector: 
Expected input to have a type: 
Expected input to have different bit width from Result Type: 
Expected input to have storage class Generic: 
Expected input to have storage class Workgroup, 
Expected input to have the same dimension as Result Type: 
Expected input to have the same total bit width as 
Expected input type to be equal to Result Type: 
Expected Insert Type to be equal to Result Type: 
expected Interpolant data type to be equal to Result Type
expected Interpolant storage class to be Input
expected Interpolant to be a pointer
Expected int scalar as input: 
Expected int scalar or vector as input: 
Expected int scalar or vector as operand: 
Expected int scalar or vector type as operand: 
Expected int scalar or vector type as Result Type: 
Expected left and right operands to have the same type: 
Expected Level of Detail to be int scalar
expected literal N to be equal to the number of components of Result Type
Expected literal string, found literal number '
Expected matrix operand type to be equal to Result Type: 
Expected Matrix to be of type OpTypeMatrix
Expected <member name> after type
Expected member name or '}'
: expected Memory Scope to be a 32-bit int
: expected Memory Semantics to be a 32-bit int
: expected Memory Semantics to include a storage class
: expected Memory Semantics to include a Vulkan-supported storage class
: expected more operands after 
expected: mul arguments
: expected Named Barrier to be of type OpTypeNamedBarrier
expected Nancode to be an int scalar or vector type
expected Nancode to have the same bit width as Result Type
expected Nancode to have the same number of components as Result Type
expected newline after header name:
expected no arguments
: expected no more operands after 
expected number after 'c'
Expected number of columns and the column size of Matrix 
Expected number of columns of left matrix and number of rows 
Expected number of columns of Result Type and right matrix to 
Expected number of columns of the matrix to be equal to 
Expected number of columns of the matrix to be equal to the 
Expected number of constituents to be at least 2
Expected number of rows of the matrix to be equal to the 
expected Offset to be a vector of 2 32-bit floats
Expected Offset Type to be int scalar: 
Expected opcode, found end of stream.
Expected <opcode> or <result-id> at the beginning of an instruction, found '
expected operand A type to be equal to Result Type
expected operand B type to be equal to Result Type
expected operand C to be an int scalar or vector
expected operand C to have the same bit width as Result Type
expected operand C to have the same number of components as Result Type
expected operand Eta to be a float scalar
expected operand Exp data type to be a 
expected operand Exp data type to have the same component 
expected operand Exp to be a 32-bit int scalar 
expected operand Exp to be a pointer
expected operand Exp to have the same component 
expected operand Format to be a pointer
Expected operand, found end of stream.
Expected operand, found next instruction instead.
expected operand I data type to be equal to Result Type
expected operand I to be a pointer
expected operand I to be of type equal to Result Type
expected operand N to be of type equal to Result Type
expected operand Num Elements to be of type size_t (
expected operand Offset to be of type size_t (
expected operand P0 component type to be equal to 
expected operand P0 to be of float scalar or vector type
expected operand P0 to have no more than 4 components
expected operand P1 component type to be equal to 
expected operand P1 to be of float scalar or vector type
expected operand P component type to be equal to Result Type
expected operand P data type to be 16-bit float scalar
expected operand P data type to be equal to component type of Result Type
expected operand P data type to be equal to the type of operand Data components
expected operand P storage class to be Generic, CrossWorkgroup, Workgroup or Function
expected operand P storage class to be UniformConstant, Generic, CrossWorkgroup, Workgroup or Function
expected operand P to be a 32-bit int scalar
expected operand P to be a float scalar or vector
expected operand P to be a pointer
expected operand P to have no more than 4 components
expected operand Ptr storage class to be CrossWorkgroup
expected operand Ptr to be a pointer
expected operand P type to be equal to Result Type
expected operand Shuffle Mask components to have the same bit width as Result Type components
expected operand Shuffle Mask to be an int vector
expected operand Shuffle Mask to have the same number of components as Result Type
expected operands P0 and P1 to be of the same type
expected operands P0 and P1 to have the same number of 
Expected operands to be scalar or vector float: 
Expected operands to be scalar or vector int: 
Expected operands to have the same bit width 
Expected operands to have the same dimension 
Expected operands to have the same number of componenets: 
expected operands X and Y to be of the same type
Expected operand to be of Result Type: 
Expected operand to be of type OpTypeImage
Expected operand to be scalar or vector float: 
Expected operand to be vector bool: 
expected operand V to be a 32-bit float vector of size 2
expected operand V to be a 32-bit float vector of size 4
expected operand V to be a 32-bit int vector of size 2
expected operand V to be a 64-bit float scalar
expected operand X and Result Type to have equal component types
expected operand X component type to be equal to 
expected operand X component type to be equal to Result Type
expected operand X to be a float scalar or vector
expected operand X to be an int or float vector
expected operand X to be a square matrix
expected operand X to be of float scalar or vector type
expected operand X to have 2, 4, 8 or 16 components
expected operand X to have the same number of components as Result Type
expected operand X type to be equal to members of 
expected operand X type to be equal to Result Type
expected operand X type to be equal to the first member 
expected operand Y type to be equal to Result Type
Expected '[' or '('
Expected ',' or '%s'
: expected Pointer to be a pointer to int or float 
: expected Pointer to be of type OpTypePointer
: expected Pointer to point to a value of 32-bit int type
: expected Pointer to point to a value of type Result Type
expected Ptr data type to be int or float scalar or vector
Expected P type and Result Type to be the same: 
expected register number after register type
expected register type
Expected Resident Code to be int scalar
Expected <result-id> at the beginning of an instruction, found '
Expected Result Type and Operand type to be the same
Expected Result Type struct member types to be identical: 
Expected Result Type struct member types to be integer scalar 
Expected Result Type struct member types to be unsigned 
Expected Result Type struct to have two members: 
expected Result Type to be 32-bit int scalar type
expected Result Type to be 64-bit float scalar type
expected Result Type to be a 16 or 32-bit scalar or vector float type
expected Result Type to be a 32-bit float scalar 
expected Result Type to be a 32-bit float vector of size 2
expected Result Type to be a 32-bit float vector of size 4
expected Result Type to be a 32-bit int scalar or vector type
expected Result Type to be a 32-bit int type
expected Result Type to be a 32-bit int vector of size 2
Expected Result Type to be a composite type
expected Result Type to be a float scalar or vector type
expected Result Type to be a float scalar type
expected Result Type to be a float vector type
Expected Result Type to be a matrix type
expected Result Type to be an int or float scalar or vector type
expected Result Type to be an int or float vector type
expected Result Type to be an int scalar or vector type
Expected Result Type to be an unsigned integer type scalar.
Expected Result Type to be a pointer: 
Expected Result Type to be a pointer or int or float vector 
expected Result Type to be a scalar or a vector with 2, 3, 4, 8 or 16 components
expected Result Type to be a scalar or vector float type
Expected Result Type to be a scalar type
expected Result Type to be a square matrix
Expected Result Type to be a struct containing an int scalar and a texel
expected Result Type to be a struct with two identical 
expected Result Type to be a struct with two members, 
: expected Result Type to be bool scalar type
Expected Result Type to be bool scalar type
Expected Result Type to be float scalar or vector type: 
Expected Result Type to be float vector type
: expected Result Type to be int or float scalar type
Expected Result Type to be int scalar or vector type
: expected Result Type to be int scalar type
Expected Result Type to be int scalar type
Expected Result Type to be of target storage class: 
Expected Result Type to be OpTypeImage
: expected Result Type to be OpTypeNamedBarrier
Expected Result Type to be OpTypePointer
Expected Result Type to be OpTypePointer whose Storage Class operand is Image
Expected Result Type to be OpTypePointer whose Type operand must be a scalar numerical type or OpTypeVoid
Expected Result Type to be OpTypeSampledImage.
Expected Result Type to be OpTypeStruct
Expected Result Type to be OpTypeVector
: expected Result Type to be void
expected Result Type to have 2, 3, 4, 8 or 16 components
expected Result Type to have 2, 4, 8 or 16 components
Expected Result Type to have 2 components
expected Result Type to have 3 components
expected Result Type to have 3 or 4 components
expected Result Type to have no more than 4 components
Expected Result Type to have storage class Generic: 
Expected Result Type to have storage class Workgroup, 
Expected rows of Matrix type and Result Type to be 
Expected Sampled Image to be of type OpTypeSampledImage
Expected Sampled Type to be a 32-bit int or float scalar type for Vulkan environment
Expected Sampled Type to be either void or
Expected Sample for Image with MS 0 to be a valid <id> for the value 0
Expected Sample Image image type to be equal to Result Type
Expected Sample Image to be of type OpTypeSampleImage
expected: SamplerComparisonState
Expected Sampler to be of type OpTypeSampler
expected: sampler type
expected Sample to be 32-bit integer
Expected Sample to be integer scalar
Expected scalar operand type to be equal to the component 
Expected scalar or 
expected: scalar or vector type in texture structure
Expected scopes of Matrix and Result Type to be 
Expected Shift to be int scalar or vector: 
Expected Shift to have the same dimension 
Expected single constituent
expected spaceN
expected storage class of the pointer to be Generic, CrossWorkgroup, Workgroup or Function
: expected Stream to be constant instruction
: expected Stream to be int scalar
: expected Subgroup Count to be a 32-bit int
expected symbol, not user-defined type
Expected target storage class to be Workgroup, 
Expected Texel to be int or float vector or scalar
expected the exponent to be a 32-bit int scalar or vector
expected the exponent to have the same number of components as Result Type
expected the last operand to be a pointer
")" expected to end 'debug' pragma
")" expected to end 'optimize' pragma
Expected token
Expected total number of Constituents to be equal 
Expected total number of given components to be equal 
expected type name
Expected type of next member
expected type of operand X to be equal to Result Type
expected type of operand Y to be equal to Result Type
expected types of all operands to be equal to Result Type
Expected unsigned int scalar or vector type as Result Type: 
Expected unsigned int scalar type as Result Type: 
Expected value or ']'
Expected Value to be a vector of four components of integer type scalar
Expected Value to be a vector of two components of unsigned integer or 64bit unsigned integer
: expected Value to be of type Result Type
: expected Value type and the type pointed to by Pointer to be the same
Expected Vector component type to be equal to Result Type
Expected vector operand type to be equal to Result Type: 
Expected vector sizes of Result Type and the condition to be equal: 
Expected vector sizes of Result Type and the operands to be
Expected vector sizes of Result Type and the operands to be equal: 
Expected vector sizes of Result Type and the operand to be equal: 
Expected Vector type to be equal to Result Type
Expected Vector type to be OpTypeVector
expected {x, y, z, w} for component
Expecting compressed combo data
Experimental: Set to 1 to enable full GPU pipeline flushing after each command list.
Experimental: Set to 1 to enable full GPU pipeline flushing after each present.
explicit
 __explicitInterpAMD
ExplicitInterpAMD
EXPLICITINTERPAMD
explicit interpolation
explosion_behavior
explosion_buildup
explosion_delay
explosion_type
explosive_damage
explosive_radius
expm1
Export
EXPORTSYSTEM_INTERFACE_VERSION_001
__Expression__
expression after :
expression after ?
expression followed by ']'
expression_statement
EXRHeader variable is not initialized.
EXRReadFile() - B channel not found!
EXRReadFile() - G channel not found!
EXRReadFile() - R channel not found!
Extended instruction GLSLstd450IMix is not supported
#extension
#extension 
extension 'all' cannot have 'require' or 'enable' behavior
#extension GL_NV_mesh_shader
extension instruction number
extension is only partially supported:
extension name expected
extension name not specified
extension not supported:
extern
external_declaration
externaldescriptorset
ExternalDescSet
ExtInstImport
Extra compressed data
Extra compression data
extra content after header name:
extraneous semicolon
extra tokens
extra tokens -- expected newline
extreme cHRM chunk cannot be converted to tristimulus values
F,,,,
f16image1D
F16IMAGE1D
f16image1DArray
F16IMAGE1DARRAY
f16image2D
F16IMAGE2D
f16image2DArray
F16IMAGE2DARRAY
f16image2DMS
F16IMAGE2DMS
f16image2DMSArray
F16IMAGE2DMSARRAY
f16image2DRect
F16IMAGE2DRECT
f16image3D
F16IMAGE3D
f16imageBuffer
F16IMAGEBUFFER
f16imageCube
F16IMAGECUBE
f16imageCubeArray
F16IMAGECUBEARRAY
F16MAT2
f16mat2x2
F16MAT2X2
F16MAT2X3
F16MAT2X4
F16MAT3
F16MAT3X2
f16mat3x3
F16MAT3X3
F16MAT3X4
F16MAT4
F16MAT4X2
F16MAT4X3
f16mat4x4
F16MAT4X4
f16sampler1D
F16SAMPLER1D
f16sampler1DArray
F16SAMPLER1DARRAY
f16sampler1DArrayShadow
F16SAMPLER1DARRAYSHADOW
f16sampler1DShadow
F16SAMPLER1DSHADOW
f16sampler2D
F16SAMPLER2D
f16sampler2DArray
F16SAMPLER2DARRAY
f16sampler2DArrayShadow
F16SAMPLER2DARRAYSHADOW
f16sampler2DMS
F16SAMPLER2DMS
f16sampler2DMSArray
F16SAMPLER2DMSARRAY
f16sampler2DRect
F16SAMPLER2DRECT
f16sampler2DRectShadow
F16SAMPLER2DRECTSHADOW
f16sampler2DShadow
F16SAMPLER2DSHADOW
f16sampler3D
F16SAMPLER3D
f16samplerBuffer
F16SAMPLERBUFFER
f16samplerCube
F16SAMPLERCUBE
f16samplerCubeArray
F16SAMPLERCUBEARRAY
f16samplerCubeArrayShadow
F16SAMPLERCUBEARRAYSHADOW
f16samplerCubeShadow
F16SAMPLERCUBESHADOW
f16subpassInput
F16SUBPASSINPUT
f16subpassInputMS
F16SUBPASSINPUTMS
f16texture1D
F16TEXTURE1D
f16texture1DArray
F16TEXTURE1DARRAY
f16texture2D
F16TEXTURE2D
f16texture2DArray
F16TEXTURE2DARRAY
f16texture2DMS
F16TEXTURE2DMS
f16texture2DMSArray
F16TEXTURE2DMSARRAY
f16texture2DRect
F16TEXTURE2DRECT
f16texture3D
F16TEXTURE3D
f16textureBuffer
F16TEXTUREBUFFER
f16textureCube
F16TEXTURECUBE
f16textureCubeArray
F16TEXTURECUBEARRAY
f16tof32
,f16vec
, f16vec
F16VEC2
F16VEC3
,f16vec4
F16VEC4
f32mat2
F32MAT2
f32mat2x2
F32MAT2X2
f32mat2x3
F32MAT2X3
f32mat2x4
F32MAT2X4
f32mat3
F32MAT3
f32mat3x2
F32MAT3X2
f32mat3x3
F32MAT3X3
f32mat3x4
F32MAT3X4
f32mat4
F32MAT4
f32mat4x2
F32MAT4X2
f32mat4x3
F32MAT4X3
f32mat4x4
F32MAT4X4
f32tof16
f32vec2
F32VEC2
f32vec3
F32VEC3
f32vec4
F32VEC4
F-4WE-6_G-
f64mat2
F64MAT2
f64mat2x2
F64MAT2X2
f64mat2x3
F64MAT2X3
f64mat2x4
F64MAT2X4
f64mat3
F64MAT3
f64mat3x2
F64MAT3X2
f64mat3x3
F64MAT3X3
f64mat3x4
F64MAT3X4
f64mat4
F64MAT4
f64mat4x2
F64MAT4X2
f64mat4x3
F64MAT4X3
f64mat4x4
F64MAT4X4
f64vec2
F64VEC2
f64vec3
F64VEC3
f64vec4
F64VEC4
f@9H1
f@9h2
F9Ii@
\|FA@
faceforward
face-forward
FaceForward
faceMergeAngle
Failed
Failed AllocateTexture for '%s'
Failed fallback GPU allocation in system memory.
Failed to allocate buffer memory for query results to be written to.
Failed to allocate GPU memory for object.
Failed to assign bool literal value
Failed to compute channel layout.
Failed to convert KV3 to string; error: %s
Failed to create depth stencil image with VK.
Failed to create device. Modules loaded: %s
Failed to create renderpass.
Failed to create temporary file %s
Failed to create VK shader module.
Failed to create VkSurfaceKHR.
Failed to create Vulkan pipeline cache from file %s  - deleting so it can be regenerated.
Failed to create Vulkan pipeline object.
Failed to find adequate memory type for buffer.
Failed to find instance extension for validation.  '%s' and '%s' not supported.
Failed to get a Vulkan memory pool for query object
Failed to get swapchain from texture, renderpass will be missing swapchain per-color texture info.
Failed to initialize Vulkan memory manager.
failed to insert the global constant buffer
Failed to map from %s to content-path
Failed to map from %s to game-path
Failed to on-demand compile shader
Failed to open validation shader cache %s, might not exit yet.
Failed to parse attribute
Failed to parse channel info
Failed to parse channel info.
Failed to parse EXR version
Failed to pre-warm pipeline object.
Failed to read attribute.
Failed to save video settings config to '%s'
Failed to setup frame pacing, renderthread is not available.
false
false case
F(aNb(a
fast_distance
fast_length
fast_normalize
fastopt
FATAL ERROR: unable to register all schema data: %s
fclamp
FClamp
FConvert
fcoopmatNV
FCOOPMATNV
fcoopmatNV coopMatMulAddNV(fcoopmatNV A, fcoopmatNV B, fcoopmatNV C);
FCVAR_NEVER_AS_STRING
_feature
feature not yet implemented
FeatureRule
features
FEATURES
*** Feature "%s" in %s does not follow the 0..N format!
*** Feature "%s" in %s has a string index out of order!
*** Feature "%s" in %s has min(%d) == max(%d)! Features must have a valid range!
*** Feature "%s" in %s is missing an option!
*** Feature "%s" in %s is missing an option string!
*** Feature "%s" in %s is missing string options! Ex: 0..2( "a", "b", "c" )
*** Feature "%s" in %s requires string to be N="String" where N = combo value for arg %d!
__FeatureToBool__
__FeatureToFloat__
__FeatureToInt__
*F	F*
%f %f %f %f
Fhf8&
Fif8ut
file error
File has not been opened!
FileKeys
filename-based __FILE__
filename-based #line
File size is zero : 
File size too short 
filesystem_stdio
FillAttr
filter
filterinY
filterinZ
Finalizer
FindClosestMatchingRegion
FindILsb
findLSB
findMSB
FindOrCreateTexture: Cannot create static textures with no data!
FindOrCreateTexture: Cannot load multiple mipmaps into cubemap texture: %s
FindOrCreateTexture: Only dynamic textures can have non-global scope!
FindOrCreateTexture: Texture scope is unspecified!
FindOrCreateTexture: Texture usage is unspecified!
FindSMsb
FindUMsb
.fini_array
@finitetmp
first argument must be an interpolant, or interpolant-array element
firstbithigh
firstbitlow
First block 
first member a float scalar or vector, second member a 
firstrenderstatelement < 0 : i = %d, frse = %d
FIU,I
FIU,I,I
FIU,I,I,I
FIU,s,F,
FIU,S,F
FIU,S,F,
FIU,S,F,,
FIU,s,F,F
FIU,s,F,F,I
FIU,s,F,,I
FIU,s,F,,I,,,
FIU,S,F,I
FIU,S,F,,I
FIU,S,F,,,I
FIU,S,F,I,,,
FIU,s,F,,I,U
FIU,s,F,,I,,,,U
FIU,S,F,I,U
FIU,S,F,I,,,,U
fixed
fixed point overflow ignored
fixed point overflow in 
fix-storage-class
FixupResourceName: Illegal full path passed in ("%s")!
FixupResourceName: Illegal path, missing extension passed in ("%s")!
FlagArtificial
FlagExplicit
FlagFwdDecl
FlagIndirectVariable
FlagIsDefinition
FlagIsLocal
FlagIsOptimized
FlagIsPrivate
FlagIsProtected
FlagIsPublic
FlagLValueReference
FlagObjectPointer
FlagPrototyped
FlagRValueReference
FlagStaticMember
flat in highp int gl_DeviceIndex;flat in highp int gl_ViewIndex;
flat in highp uint gl_ViewID_OVR;
flat in int gl_Layer;flat in int gl_ViewportIndex;
flat in int gl_PrimitiveID;
flat in  int  gl_SampleID;     in  vec2 gl_SamplePosition;flat in  int  gl_SampleMaskIn[];     out int  gl_SampleMask[];
flat in ivec2 gl_FragmentSizeNV;flat in int   gl_InvocationsPerPixelNV;
flat in ivec2 gl_FragmentSizeNV;flat in int   gl_InvocationsPerPixelNV;in vec3 gl_BaryCoordNV;in vec3 gl_BaryCoordNoPerspNV;
flat in ivec2 gl_FragSizeEXT;flat in int   gl_FragInvocationCountEXT;
flat  in lowp     int gl_SampleID;      in mediump vec2 gl_SamplePosition;flat  in highp    int gl_SampleMaskIn[];     out highp    int gl_SampleMask[];
flat in mediump uint  gl_SubgroupSize;flat in mediump uint  gl_SubgroupInvocationID;flat in highp   uvec4 gl_SubgroupEqMask;flat in highp   uvec4 gl_SubgroupGeMask;flat in highp   uvec4 gl_SubgroupGtMask;flat in highp   uvec4 gl_SubgroupLeMask;flat in highp   uvec4 gl_SubgroupLtMask;flat in highp   uint  gl_WarpsPerSMNV;flat in highp   uint  gl_SMCountNV;flat in highp   uint  gl_WarpIDNV;flat in highp   uint  gl_SMIDNV;
flat/smooth/noperspective
: Flatten
flatten-decorations
FlattenedSerializersVersion001
flattenShadow
flattenTemp
flatten-uniform-arrays
<float
, float
FLOAT
float16BitsToInt16
float16BitsToUint16
Float16Buffer
FLOAT16CONSTANT
Float16ImageAMD
, float16_t
float16_t 
FLOAT16_T
float16_t dFdx(float16_t);f16vec2   dFdx(f16vec2);f16vec3   dFdx(f16vec3);f16vec4   dFdx(f16vec4);float16_t dFdy(float16_t);f16vec2   dFdy(f16vec2);f16vec3   dFdy(f16vec3);f16vec4   dFdy(f16vec4);float16_t dFdxFine(float16_t);f16vec2   dFdxFine(f16vec2);f16vec3   dFdxFine(f16vec3);f16vec4   dFdxFine(f16vec4);float16_t dFdyFine(float16_t);f16vec2   dFdyFine(f16vec2);f16vec3   dFdyFine(f16vec3);f16vec4   dFdyFine(f16vec4);float16_t dFdxCoarse(float16_t);f16vec2   dFdxCoarse(f16vec2);f16vec3   dFdxCoarse(f16vec3);f16vec4   dFdxCoarse(f16vec4);float16_t dFdyCoarse(float16_t);f16vec2   dFdyCoarse(f16vec2);f16vec3   dFdyCoarse(f16vec3);f16vec4   dFdyCoarse(f16vec4);float16_t fwidth(float16_t);f16vec2   fwidth(f16vec2);f16vec3   fwidth(f16vec3);f16vec4   fwidth(f16vec4);float16_t fwidthFine(float16_t);f16vec2   fwidthFine(f16vec2);f16vec3   fwidthFine(f16vec3);f16vec4   fwidthFine(f16vec4);float16_t fwidthCoarse(float16_t);f16vec2   fwidthCoarse(f16vec2);f16vec3   fwidthCoarse(f16vec3);f16vec4   fwidthCoarse(f16vec4);
,float16_t,float16_t
float16_t interpolateAtCentroid(float16_t);f16vec2   interpolateAtCentroid(f16vec2);f16vec3   interpolateAtCentroid(f16vec3);f16vec4   interpolateAtCentroid(f16vec4);float16_t interpolateAtSample(float16_t, int);f16vec2   interpolateAtSample(f16vec2,   int);f16vec3   interpolateAtSample(f16vec3,   int);f16vec4   interpolateAtSample(f16vec4,   int);float16_t interpolateAtOffset(float16_t, f16vec2);f16vec2   interpolateAtOffset(f16vec2,   f16vec2);f16vec3   interpolateAtOffset(f16vec3,   f16vec2);f16vec4   interpolateAtOffset(f16vec4,   f16vec2);
float16_t radians(float16_t);f16vec2   radians(f16vec2);f16vec3   radians(f16vec3);f16vec4   radians(f16vec4);float16_t degrees(float16_t);f16vec2   degrees(f16vec2);f16vec3   degrees(f16vec3);f16vec4   degrees(f16vec4);float16_t sin(float16_t);f16vec2   sin(f16vec2);f16vec3   sin(f16vec3);f16vec4   sin(f16vec4);float16_t cos(float16_t);f16vec2   cos(f16vec2);f16vec3   cos(f16vec3);f16vec4   cos(f16vec4);float16_t tan(float16_t);f16vec2   tan(f16vec2);f16vec3   tan(f16vec3);f16vec4   tan(f16vec4);float16_t asin(float16_t);f16vec2   asin(f16vec2);f16vec3   asin(f16vec3);f16vec4   asin(f16vec4);float16_t acos(float16_t);f16vec2   acos(f16vec2);f16vec3   acos(f16vec3);f16vec4   acos(f16vec4);float16_t atan(float16_t, float16_t);f16vec2   atan(f16vec2,   f16vec2);f16vec3   atan(f16vec3,   f16vec3);f16vec4   atan(f16vec4,   f16vec4);float16_t atan(float16_t);f16vec2   atan(f16vec2);f16vec3   atan(f16vec3);f16vec4   atan(f16vec4);float16_t sinh(float16_t);f16vec2   sinh(f16vec2);f16vec3   sinh(f16vec3);f16vec4   sinh(f16vec4);float16_t cosh(float16_t);f16vec2   cosh(f16vec2);f16vec3   cosh(f16vec3);f16vec4   cosh(f16vec4);float16_t tanh(float16_t);f16vec2   tanh(f16vec2);f16vec3   tanh(f16vec3);f16vec4   tanh(f16vec4);float16_t asinh(float16_t);f16vec2   asinh(f16vec2);f16vec3   asinh(f16vec3);f16vec4   asinh(f16vec4);float16_t acosh(float16_t);f16vec2   acosh(f16vec2);f16vec3   acosh(f16vec3);f16vec4   acosh(f16vec4);float16_t atanh(float16_t);f16vec2   atanh(f16vec2);f16vec3   atanh(f16vec3);f16vec4   atanh(f16vec4);float16_t pow(float16_t, float16_t);f16vec2   pow(f16vec2,   f16vec2);f16vec3   pow(f16vec3,   f16vec3);f16vec4   pow(f16vec4,   f16vec4);float16_t exp(float16_t);f16vec2   exp(f16vec2);f16vec3   exp(f16vec3);f16vec4   exp(f16vec4);float16_t log(float16_t);f16vec2   log(f16vec2);f16vec3   log(f16vec3);f16vec4   log(f16vec4);float16_t exp2(float16_t);f16vec2   exp2(f16vec2);f16vec3   exp2(f16vec3);f16vec4   exp2(f16vec4);float16_t log2(float16_t);f16vec2   log2(f16vec2);f16vec3   log2(f16vec3);f16vec4   log2(f16vec4);float16_t sqrt(float16_t);f16vec2   sqrt(f16vec2);f16vec3   sqrt(f16vec3);f16vec4   sqrt(f16vec4);float16_t inversesqrt(float16_t);f16vec2   inversesqrt(f16vec2);f16vec3   inversesqrt(f16vec3);f16vec4   inversesqrt(f16vec4);float16_t abs(float16_t);f16vec2   abs(f16vec2);f16vec3   abs(f16vec3);f16vec4   abs(f16vec4);float16_t sign(float16_t);f16vec2   sign(f16vec2);f16vec3   sign(f16vec3);f16vec4   sign(f16vec4);float16_t floor(float16_t);f16vec2   floor(f16vec2);f16vec3   floor(f16vec3);f16vec4   floor(f16vec4);float16_t trunc(float16_t);f16vec2   trunc(f16vec2);f16vec3   trunc(f16vec3);f16vec4   trunc(f16vec4);float16_t round(float16_t);f16vec2   round(f16vec2);f16vec3   round(f16vec3);f16vec4   round(f16vec4);float16_t roundEven(float16_t);f16vec2   roundEven(f16vec2);f16vec3   roundEven(f16vec3);f16vec4   roundEven(f16vec4);float16_t ceil(float16_t);f16vec2   ceil(f16vec2);f16vec3   ceil(f16vec3);f16vec4   ceil(f16vec4);float16_t fract(float16_t);f16vec2   fract(f16vec2);f16vec3   fract(f16vec3);f16vec4   fract(f16vec4);float16_t mod(float16_t, float16_t);f16vec2   mod(f16vec2,   float16_t);f16vec3   mod(f16vec3,   float16_t);f16vec4   mod(f16vec4,   float16_t);f16vec2   mod(f16vec2,   f16vec2);f16vec3   mod(f16vec3,   f16vec3);f16vec4   mod(f16vec4,   f16vec4);float16_t modf(float16_t, out float16_t);f16vec2   modf(f16vec2,   out f16vec2);f16vec3   modf(f16vec3,   out f16vec3);f16vec4   modf(f16vec4,   out f16vec4);float16_t min(float16_t, float16_t);f16vec2   min(f16vec2,   float16_t);f16vec3   min(f16vec3,   float16_t);f16vec4   min(f16vec4,   float16_t);f16vec2   min(f16vec2,   f16vec2);f16vec3   min(f16vec3,   f16vec3);f16vec4   min(f16vec4,   f16vec4);float16_t max(float16_t, float16_t);f16vec2   max(f16vec2,   float16_t);f16vec3   max(f16vec3,   float16_t);f16vec4   max(f16vec4,   float16_t);f16vec2   max(f16vec2,   f16vec2);f16vec3   max(f16vec3,   f16vec3);f16vec4   max(f16vec4,   f16vec4);float16_t clamp(float16_t, float16_t, float16_t);f16vec2   clamp(f16vec2,   float16_t, float16_t);f16vec3   clamp(f16vec3,   float16_t, float16_t);f16vec4   clamp(f16vec4,   float16_t, float16_t);f16vec2   clamp(f16vec2,   f16vec2,   f16vec2);f16vec3   clamp(f16vec3,   f16vec3,   f16vec3);f16vec4   clamp(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, float16_t);f16vec2   mix(f16vec2,   f16vec2,   float16_t);f16vec3   mix(f16vec3,   f16vec3,   float16_t);f16vec4   mix(f16vec4,   f16vec4,   float16_t);f16vec2   mix(f16vec2,   f16vec2,   f16vec2);f16vec3   mix(f16vec3,   f16vec3,   f16vec3);f16vec4   mix(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, bool);f16vec2   mix(f16vec2,   f16vec2,   bvec2);f16vec3   mix(f16vec3,   f16vec3,   bvec3);f16vec4   mix(f16vec4,   f16vec4,   bvec4);float16_t step(float16_t, float16_t);f16vec2   step(f16vec2,   f16vec2);f16vec3   step(f16vec3,   f16vec3);f16vec4   step(f16vec4,   f16vec4);f16vec2   step(float16_t, f16vec2);f16vec3   step(float16_t, f16vec3);f16vec4   step(float16_t, f16vec4);float16_t smoothstep(float16_t, float16_t, float16_t);f16vec2   smoothstep(f16vec2,   f16vec2,   f16vec2);f16vec3   smoothstep(f16vec3,   f16vec3,   f16vec3);f16vec4   smoothstep(f16vec4,   f16vec4,   f16vec4);f16vec2   smoothstep(float16_t, float16_t, f16vec2);f16vec3   smoothstep(float16_t, float16_t, f16vec3);f16vec4   smoothstep(float16_t, float16_t, f16vec4);bool  isnan(float16_t);bvec2 isnan(f16vec2);bvec3 isnan(f16vec3);bvec4 isnan(f16vec4);bool  isinf(float16_t);bvec2 isinf(f16vec2);bvec3 isinf(f16vec3);bvec4 isinf(f16vec4);float16_t fma(float16_t, float16_t, float16_t);f16vec2   fma(f16vec2,   f16vec2,   f16vec2);f16vec3   fma(f16vec3,   f16vec3,   f16vec3);f16vec4   fma(f16vec4,   f16vec4,   f16vec4);float16_t frexp(float16_t, out int);f16vec2   frexp(f16vec2,   out ivec2);f16vec3   frexp(f16vec3,   out ivec3);f16vec4   frexp(f16vec4,   out ivec4);float16_t ldexp(float16_t, in int);f16vec2   ldexp(f16vec2,   in ivec2);f16vec3   ldexp(f16vec3,   in ivec3);f16vec4   ldexp(f16vec4,   in ivec4);uint    packFloat2x16(f16vec2);f16vec2 unpackFloat2x16(uint);float16_t length(float16_t);float16_t length(f16vec2);float16_t length(f16vec3);float16_t length(f16vec4);float16_t distance(float16_t, float16_t);float16_t distance(f16vec2,   f16vec2);float16_t distance(f16vec3,   f16vec3);float16_t distance(f16vec4,   f16vec4);float16_t dot(float16_t, float16_t);float16_t dot(f16vec2,   f16vec2);float16_t dot(f16vec3,   f16vec3);float16_t dot(f16vec4,   f16vec4);f16vec3 cross(f16vec3, f16vec3);float16_t normalize(float16_t);f16vec2   normalize(f16vec2);f16vec3   normalize(f16vec3);f16vec4   normalize(f16vec4);float16_t faceforward(float16_t, float16_t, float16_t);f16vec2   faceforward(f16vec2,   f16vec2,   f16vec2);f16vec3   faceforward(f16vec3,   f16vec3,   f16vec3);f16vec4   faceforward(f16vec4,   f16vec4,   f16vec4);float16_t reflect(float16_t, float16_t);f16vec2   reflect(f16vec2,   f16vec2);f16vec3   reflect(f16vec3,   f16vec3);f16vec4   reflect(f16vec4,   f16vec4);float16_t refract(float16_t, float16_t, float16_t);f16vec2   refract(f16vec2,   f16vec2,   float16_t);f16vec3   refract(f16vec3,   f16vec3,   float16_t);f16vec4   refract(f16vec4,   f16vec4,   float16_t);f16mat2   matrixCompMult(f16mat2,   f16mat2);f16mat3   matrixCompMult(f16mat3,   f16mat3);f16mat4   matrixCompMult(f16mat4,   f16mat4);f16mat2x3 matrixCompMult(f16mat2x3, f16mat2x3);f16mat2x4 matrixCompMult(f16mat2x4, f16mat2x4);f16mat3x2 matrixCompMult(f16mat3x2, f16mat3x2);f16mat3x4 matrixCompMult(f16mat3x4, f16mat3x4);f16mat4x2 matrixCompMult(f16mat4x2, f16mat4x2);f16mat4x3 matrixCompMult(f16mat4x3, f16mat4x3);f16mat2   outerProduct(f16vec2, f16vec2);f16mat3   outerProduct(f16vec3, f16vec3);f16mat4   outerProduct(f16vec4, f16vec4);f16mat2x3 outerProduct(f16vec3, f16vec2);f16mat3x2 outerProduct(f16vec2, f16vec3);f16mat2x4 outerProduct(f16vec4, f16vec2);f16mat4x2 outerProduct(f16vec2, f16vec4);f16mat3x4 outerProduct(f16vec4, f16vec3);f16mat4x3 outerProduct(f16vec3, f16vec4);f16mat2   transpose(f16mat2);f16mat3   transpose(f16mat3);f16mat4   transpose(f16mat4);f16mat2x3 transpose(f16mat3x2);f16mat3x2 transpose(f16mat2x3);f16mat2x4 transpose(f16mat4x2);f16mat4x2 transpose(f16mat2x4);f16mat3x4 transpose(f16mat4x3);f16mat4x3 transpose(f16mat3x4);float16_t determinant(f16mat2);float16_t determinant(f16mat3);float16_t determinant(f16mat4);f16mat2 inverse(f16mat2);f16mat3 inverse(f16mat3);f16mat4 inverse(f16mat4);bvec2 lessThan(f16vec2, f16vec2);bvec3 lessThan(f16vec3, f16vec3);bvec4 lessThan(f16vec4, f16vec4);bvec2 lessThanEqual(f16vec2, f16vec2);bvec3 lessThanEqual(f16vec3, f16vec3);bvec4 lessThanEqual(f16vec4, f16vec4);bvec2 greaterThan(f16vec2, f16vec2);bvec3 greaterThan(f16vec3, f16vec3);bvec4 greaterThan(f16vec4, f16vec4);bvec2 greaterThanEqual(f16vec2, f16vec2);bvec3 greaterThanEqual(f16vec3, f16vec3);bvec4 greaterThanEqual(f16vec4, f16vec4);bvec2 equal(f16vec2, f16vec2);bvec3 equal(f16vec3, f16vec3);bvec4 equal(f16vec4, f16vec4);bvec2 notEqual(f16vec2, f16vec2);bvec3 notEqual(f16vec3, f16vec3);bvec4 notEqual(f16vec4, f16vec4);
float16 types can only be in uniform block or buffer storage
float1x1
float1x2
float1x3
float1x4
	float2 vTexCoord				: TEXCOORD0;	
	float2 vTexCoord				: TEXCOORD0;					
float2x1
float2x2
float2x3
float2x4
float32_t
FLOAT32_T
float32_t matrix
float32_t vector
	float3 vProjPos					: POSITION0;	
float3x1
float3x2
float3x3
float3x4
float4 main( const PS_INPUT i )	: SV_TARGET0	
float4 main( const PS_INPUT i )	: SV_TARGET0					
	float4 vColor					: COLOR;		
	float4 vColor					: COLOR0;		
	float4 vProjPos					: SV_Position;	
	float4 vProjPos					: SV_Position;					
	float4 vProjPos					: SV_Position		;			
	float4 vTexCoordScaleOffset		: COLOR;		
	float4 vTexCoordScaleOffset		: COLOR;						
	float4 vTexCoordScaleOffset		: COLOR0;		
float4x1
float4x2
float4x3
float4x4
Float64
float64_t
FLOAT64_T
float64_t dFdx(float64_t);f64vec2   dFdx(f64vec2);f64vec3   dFdx(f64vec3);f64vec4   dFdx(f64vec4);float64_t dFdy(float64_t);f64vec2   dFdy(f64vec2);f64vec3   dFdy(f64vec3);f64vec4   dFdy(f64vec4);float64_t dFdxFine(float64_t);f64vec2   dFdxFine(f64vec2);f64vec3   dFdxFine(f64vec3);f64vec4   dFdxFine(f64vec4);float64_t dFdyFine(float64_t);f64vec2   dFdyFine(f64vec2);f64vec3   dFdyFine(f64vec3);f64vec4   dFdyFine(f64vec4);float64_t dFdxCoarse(float64_t);f64vec2   dFdxCoarse(f64vec2);f64vec3   dFdxCoarse(f64vec3);f64vec4   dFdxCoarse(f64vec4);float64_t dFdyCoarse(float64_t);f64vec2   dFdyCoarse(f64vec2);f64vec3   dFdyCoarse(f64vec3);f64vec4   dFdyCoarse(f64vec4);float64_t fwidth(float64_t);f64vec2   fwidth(f64vec2);f64vec3   fwidth(f64vec3);f64vec4   fwidth(f64vec4);float64_t fwidthFine(float64_t);f64vec2   fwidthFine(f64vec2);f64vec3   fwidthFine(f64vec3);f64vec4   fwidthFine(f64vec4);float64_t fwidthCoarse(float64_t);f64vec2   fwidthCoarse(f64vec2);f64vec3   fwidthCoarse(f64vec3);f64vec4   fwidthCoarse(f64vec4);
float64_t interpolateAtCentroid(float64_t);f64vec2   interpolateAtCentroid(f64vec2);f64vec3   interpolateAtCentroid(f64vec3);f64vec4   interpolateAtCentroid(f64vec4);float64_t interpolateAtSample(float64_t, int);f64vec2   interpolateAtSample(f64vec2,   int);f64vec3   interpolateAtSample(f64vec3,   int);f64vec4   interpolateAtSample(f64vec4,   int);float64_t interpolateAtOffset(float64_t, f64vec2);f64vec2   interpolateAtOffset(f64vec2,   f64vec2);f64vec3   interpolateAtOffset(f64vec3,   f64vec2);f64vec4   interpolateAtOffset(f64vec4,   f64vec2);
float64_t matrix
float64_t vector
floatbitmap.cpp
floatbitmap.cpp(141): Unknown gamma type "%s"!
floatbitmap.cpp(2473): Error calling TGALoader::GetInfo( %s )
floatbitmap.cpp(2484): Error loading %s
floatbitmap.cpp(2507): Error! Unknown file type for %s
floatbitmap.cpp(2526): Error! Slice %d format %dx%dx%d Attr(%d) != previous slices of %dx%d Attr(%d) for %s
floatbitmap.cpp(325): Conversion not supported yet!
floatbitmap.cpp(425): Conversion not supported yet!
floatbitmap.cpp(888): Unsupported color format "%s", skipping!
FloatBitMap::DownsampleNiceFiltered
FloatBitMap::QuarterSize
FloatBitMap::QuarterSizeBlocky
FloatBitMap_t::CopyFloatBitmap: Received NULL pointer!
FloatBitMap_t: Error loading %s
FloatBitMap_t::LoadFromBuffer: Received improper buffer size, skipping!
FloatBitMap_t::LoadFromBuffer: Unsupported color format, skipping!
FloatBitMap_t::LoadFromFloatBitmap: Received improper bitmap size, skipping!
FloatBitMap_t::WriteToBuffer: Received improper buffer size %s (expecting %s), skipping!
floatBitsToInt
floatBitsToUint
FLOATCONSTANT
float cubeFaceIndexAMD(vec3);vec2  cubeFaceCoordAMD(vec3);uint64_t timeAMD();in int gl_SIMDGroupSizeAMD;
float determinant(mat2 m);float determinant(mat3 m);float determinant(mat4 m);mat2 inverse(mat2 m);mat3 inverse(mat3 m);mat4 inverse(mat4 m);
float dFdxFine(float p);vec2  dFdxFine(vec2  p);vec3  dFdxFine(vec3  p);vec4  dFdxFine(vec4  p);float dFdyFine(float p);vec2  dFdyFine(vec2  p);vec3  dFdyFine(vec3  p);vec4  dFdyFine(vec4  p);float fwidthFine(float p);vec2  fwidthFine(vec2  p);vec3  fwidthFine(vec3  p);vec4  fwidthFine(vec4  p);float dFdxCoarse(float p);vec2  dFdxCoarse(vec2  p);vec3  dFdxCoarse(vec3  p);vec4  dFdxCoarse(vec4  p);float dFdyCoarse(float p);vec2  dFdyCoarse(vec2  p);vec3  dFdyCoarse(vec3  p);vec4  dFdyCoarse(vec4  p);float fwidthCoarse(float p);vec2  fwidthCoarse(vec2  p);vec3  fwidthCoarse(vec3  p);vec4  fwidthCoarse(vec4  p);
float( %f )
,float,float
float  fma(float,  float,  float );vec2   fma(vec2,   vec2,   vec2  );vec3   fma(vec3,   vec3,   vec3  );vec4   fma(vec4,   vec4,   vec4  );
float frexp(highp float, out highp int);vec2  frexp(highp vec2,  out highp ivec2);vec3  frexp(highp vec3,  out highp ivec3);vec4  frexp(highp vec4,  out highp ivec4);float ldexp(highp float, highp int);vec2  ldexp(highp vec2,  highp ivec2);vec3  ldexp(highp vec3,  highp ivec3);vec4  ldexp(highp vec4,  highp ivec4);
float gl_CullDistance[];
float gl_CullDistance[];int  gl_ViewportMask[];vec4 gl_SecondaryPositionNV;int  gl_SecondaryViewportMaskNV[];vec4 gl_PositionPerViewNV[];int  gl_ViewportMaskPerViewNV[];
float gl_CullDistance[];vec4 gl_SecondaryPositionNV;vec4 gl_PositionPerViewNV[];
float imageAtomicExchange(volatile coherent 
floating-point fast math mode
floating-point rounding mode
float interpolateAtCentroid(float);vec2  interpolateAtCentroid(vec2);vec3  interpolateAtCentroid(vec3);vec4  interpolateAtCentroid(vec4);float interpolateAtSample(float, int);vec2  interpolateAtSample(vec2,  int);vec3  interpolateAtSample(vec3,  int);vec4  interpolateAtSample(vec4,  int);float interpolateAtOffset(float, vec2);vec2  interpolateAtOffset(vec2,  vec2);vec3  interpolateAtOffset(vec3,  vec2);vec4  interpolateAtOffset(vec4,  vec2);
float interpolateAtVertexAMD(float, uint);vec2  interpolateAtVertexAMD(vec2,  uint);vec3  interpolateAtVertexAMD(vec3,  uint);vec4  interpolateAtVertexAMD(vec4,  uint);int   interpolateAtVertexAMD(int,   uint);ivec2 interpolateAtVertexAMD(ivec2, uint);ivec3 interpolateAtVertexAMD(ivec3, uint);ivec4 interpolateAtVertexAMD(ivec4, uint);uint  interpolateAtVertexAMD(uint,  uint);uvec2 interpolateAtVertexAMD(uvec2, uint);uvec3 interpolateAtVertexAMD(uvec3, uint);uvec4 interpolateAtVertexAMD(uvec4, uint);float16_t interpolateAtVertexAMD(float16_t, uint);f16vec2   interpolateAtVertexAMD(f16vec2,   uint);f16vec3   interpolateAtVertexAMD(f16vec3,   uint);f16vec4   interpolateAtVertexAMD(f16vec4,   uint);
float literal needs a decimal point or exponent
float literal too long
float main( const PS_INPUT i )	: SV_DEPTH							
float min3(float, float, float);vec2  min3(vec2,  vec2,  vec2);vec3  min3(vec3,  vec3,  vec3);vec4  min3(vec4,  vec4,  vec4);int   min3(int,   int,   int);ivec2 min3(ivec2, ivec2, ivec2);ivec3 min3(ivec3, ivec3, ivec3);ivec4 min3(ivec4, ivec4, ivec4);uint  min3(uint,  uint,  uint);uvec2 min3(uvec2, uvec2, uvec2);uvec3 min3(uvec3, uvec3, uvec3);uvec4 min3(uvec4, uvec4, uvec4);float max3(float, float, float);vec2  max3(vec2,  vec2,  vec2);vec3  max3(vec3,  vec3,  vec3);vec4  max3(vec4,  vec4,  vec4);int   max3(int,   int,   int);ivec2 max3(ivec2, ivec2, ivec2);ivec3 max3(ivec3, ivec3, ivec3);ivec4 max3(ivec4, ivec4, ivec4);uint  max3(uint,  uint,  uint);uvec2 max3(uvec2, uvec2, uvec2);uvec3 max3(uvec3, uvec3, uvec3);uvec4 max3(uvec4, uvec4, uvec4);float mid3(float, float, float);vec2  mid3(vec2,  vec2,  vec2);vec3  mid3(vec3,  vec3,  vec3);vec4  mid3(vec4,  vec4,  vec4);int   mid3(int,   int,   int);ivec2 mid3(ivec2, ivec2, ivec2);ivec3 mid3(ivec3, ivec3, ivec3);ivec4 mid3(ivec4, ivec4, ivec4);uint  mid3(uint,  uint,  uint);uvec2 mid3(uvec2, uvec2, uvec2);uvec3 mid3(uvec3, uvec3, uvec3);uvec4 mid3(uvec4, uvec4, uvec4);float16_t min3(float16_t, float16_t, float16_t);f16vec2   min3(f16vec2,   f16vec2,   f16vec2);f16vec3   min3(f16vec3,   f16vec3,   f16vec3);f16vec4   min3(f16vec4,   f16vec4,   f16vec4);float16_t max3(float16_t, float16_t, float16_t);f16vec2   max3(f16vec2,   f16vec2,   f16vec2);f16vec3   max3(f16vec3,   f16vec3,   f16vec3);f16vec4   max3(f16vec4,   f16vec4,   f16vec4);float16_t mid3(float16_t, float16_t, float16_t);f16vec2   mid3(f16vec2,   f16vec2,   f16vec2);f16vec3   mid3(f16vec3,   f16vec3,   f16vec3);f16vec4   mid3(f16vec4,   f16vec4,   f16vec4);int16_t   min3(int16_t,   int16_t,   int16_t);i16vec2   min3(i16vec2,   i16vec2,   i16vec2);i16vec3   min3(i16vec3,   i16vec3,   i16vec3);i16vec4   min3(i16vec4,   i16vec4,   i16vec4);int16_t   max3(int16_t,   int16_t,   int16_t);i16vec2   max3(i16vec2,   i16vec2,   i16vec2);i16vec3   max3(i16vec3,   i16vec3,   i16vec3);i16vec4   max3(i16vec4,   i16vec4,   i16vec4);int16_t   mid3(int16_t,   int16_t,   int16_t);i16vec2   mid3(i16vec2,   i16vec2,   i16vec2);i16vec3   mid3(i16vec3,   i16vec3,   i16vec3);i16vec4   mid3(i16vec4,   i16vec4,   i16vec4);uint16_t  min3(uint16_t,  uint16_t,  uint16_t);u16vec2   min3(u16vec2,   u16vec2,   u16vec2);u16vec3   min3(u16vec3,   u16vec3,   u16vec3);u16vec4   min3(u16vec4,   u16vec4,   u16vec4);uint16_t  max3(uint16_t,  uint16_t,  uint16_t);u16vec2   max3(u16vec2,   u16vec2,   u16vec2);u16vec3   max3(u16vec3,   u16vec3,   u16vec3);u16vec4   max3(u16vec4,   u16vec4,   u16vec4);uint16_t  mid3(uint16_t,  uint16_t,  uint16_t);u16vec2   mid3(u16vec2,   u16vec2,   u16vec2);u16vec3   mid3(u16vec3,   u16vec3,   u16vec3);u16vec4   mid3(u16vec4,   u16vec4,   u16vec4);
float minInvocationsAMD(float);vec2  minInvocationsAMD(vec2);vec3  minInvocationsAMD(vec3);vec4  minInvocationsAMD(vec4);int   minInvocationsAMD(int);ivec2 minInvocationsAMD(ivec2);ivec3 minInvocationsAMD(ivec3);ivec4 minInvocationsAMD(ivec4);uint  minInvocationsAMD(uint);uvec2 minInvocationsAMD(uvec2);uvec3 minInvocationsAMD(uvec3);uvec4 minInvocationsAMD(uvec4);double minInvocationsAMD(double);dvec2  minInvocationsAMD(dvec2);dvec3  minInvocationsAMD(dvec3);dvec4  minInvocationsAMD(dvec4);int64_t minInvocationsAMD(int64_t);i64vec2 minInvocationsAMD(i64vec2);i64vec3 minInvocationsAMD(i64vec3);i64vec4 minInvocationsAMD(i64vec4);uint64_t minInvocationsAMD(uint64_t);u64vec2  minInvocationsAMD(u64vec2);u64vec3  minInvocationsAMD(u64vec3);u64vec4  minInvocationsAMD(u64vec4);float16_t minInvocationsAMD(float16_t);f16vec2   minInvocationsAMD(f16vec2);f16vec3   minInvocationsAMD(f16vec3);f16vec4   minInvocationsAMD(f16vec4);int16_t minInvocationsAMD(int16_t);i16vec2 minInvocationsAMD(i16vec2);i16vec3 minInvocationsAMD(i16vec3);i16vec4 minInvocationsAMD(i16vec4);uint16_t minInvocationsAMD(uint16_t);u16vec2  minInvocationsAMD(u16vec2);u16vec3  minInvocationsAMD(u16vec3);u16vec4  minInvocationsAMD(u16vec4);float minInvocationsInclusiveScanAMD(float);vec2  minInvocationsInclusiveScanAMD(vec2);vec3  minInvocationsInclusiveScanAMD(vec3);vec4  minInvocationsInclusiveScanAMD(vec4);int   minInvocationsInclusiveScanAMD(int);ivec2 minInvocationsInclusiveScanAMD(ivec2);ivec3 minInvocationsInclusiveScanAMD(ivec3);ivec4 minInvocationsInclusiveScanAMD(ivec4);uint  minInvocationsInclusiveScanAMD(uint);uvec2 minInvocationsInclusiveScanAMD(uvec2);uvec3 minInvocationsInclusiveScanAMD(uvec3);uvec4 minInvocationsInclusiveScanAMD(uvec4);double minInvocationsInclusiveScanAMD(double);dvec2  minInvocationsInclusiveScanAMD(dvec2);dvec3  minInvocationsInclusiveScanAMD(dvec3);dvec4  minInvocationsInclusiveScanAMD(dvec4);int64_t minInvocationsInclusiveScanAMD(int64_t);i64vec2 minInvocationsInclusiveScanAMD(i64vec2);i64vec3 minInvocationsInclusiveScanAMD(i64vec3);i64vec4 minInvocationsInclusiveScanAMD(i64vec4);uint64_t minInvocationsInclusiveScanAMD(uint64_t);u64vec2  minInvocationsInclusiveScanAMD(u64vec2);u64vec3  minInvocationsInclusiveScanAMD(u64vec3);u64vec4  minInvocationsInclusiveScanAMD(u64vec4);float16_t minInvocationsInclusiveScanAMD(float16_t);f16vec2   minInvocationsInclusiveScanAMD(f16vec2);f16vec3   minInvocationsInclusiveScanAMD(f16vec3);f16vec4   minInvocationsInclusiveScanAMD(f16vec4);int16_t minInvocationsInclusiveScanAMD(int16_t);i16vec2 minInvocationsInclusiveScanAMD(i16vec2);i16vec3 minInvocationsInclusiveScanAMD(i16vec3);i16vec4 minInvocationsInclusiveScanAMD(i16vec4);uint16_t minInvocationsInclusiveScanAMD(uint16_t);u16vec2  minInvocationsInclusiveScanAMD(u16vec2);u16vec3  minInvocationsInclusiveScanAMD(u16vec3);u16vec4  minInvocationsInclusiveScanAMD(u16vec4);float minInvocationsExclusiveScanAMD(float);vec2  minInvocationsExclusiveScanAMD(vec2);vec3  minInvocationsExclusiveScanAMD(vec3);vec4  minInvocationsExclusiveScanAMD(vec4);int   minInvocationsExclusiveScanAMD(int);ivec2 minInvocationsExclusiveScanAMD(ivec2);ivec3 minInvocationsExclusiveScanAMD(ivec3);ivec4 minInvocationsExclusiveScanAMD(ivec4);uint  minInvocationsExclusiveScanAMD(uint);uvec2 minInvocationsExclusiveScanAMD(uvec2);uvec3 minInvocationsExclusiveScanAMD(uvec3);uvec4 minInvocationsExclusiveScanAMD(uvec4);double minInvocationsExclusiveScanAMD(double);dvec2  minInvocationsExclusiveScanAMD(dvec2);dvec3  minInvocationsExclusiveScanAMD(dvec3);dvec4  minInvocationsExclusiveScanAMD(dvec4);int64_t minInvocationsExclusiveScanAMD(int64_t);i64vec2 minInvocationsExclusiveScanAMD(i64vec2);i64vec3 minInvocationsExclusiveScanAMD(i64vec3);i64vec4 minInvocationsExclusiveScanAMD(i64vec4);uint64_t minInvocationsExclusiveScanAMD(uint64_t);u64vec2  minInvocationsExclusiveScanAMD(u64vec2);u64vec3  minInvocationsExclusiveScanAMD(u64vec3);u64vec4  minInvocationsExclusiveScanAMD(u64vec4);float16_t minInvocationsExclusiveScanAMD(float16_t);f16vec2   minInvocationsExclusiveScanAMD(f16vec2);f16vec3   minInvocationsExclusiveScanAMD(f16vec3);f16vec4   minInvocationsExclusiveScanAMD(f16vec4);int16_t minInvocationsExclusiveScanAMD(int16_t);i16vec2 minInvocationsExclusiveScanAMD(i16vec2);i16vec3 minInvocationsExclusiveScanAMD(i16vec3);i16vec4 minInvocationsExclusiveScanAMD(i16vec4);uint16_t minInvocationsExclusiveScanAMD(uint16_t);u16vec2  minInvocationsExclusiveScanAMD(u16vec2);u16vec3  minInvocationsExclusiveScanAMD(u16vec3);u16vec4  minInvocationsExclusiveScanAMD(u16vec4);float maxInvocationsAMD(float);vec2  maxInvocationsAMD(vec2);vec3  maxInvocationsAMD(vec3);vec4  maxInvocationsAMD(vec4);int   maxInvocationsAMD(int);ivec2 maxInvocationsAMD(ivec2);ivec3 maxInvocationsAMD(ivec3);ivec4 maxInvocationsAMD(ivec4);uint  maxInvocationsAMD(uint);uvec2 maxInvocationsAMD(uvec2);uvec3 maxInvocationsAMD(uvec3);uvec4 maxInvocationsAMD(uvec4);double maxInvocationsAMD(double);dvec2  maxInvocationsAMD(dvec2);dvec3  maxInvocationsAMD(dvec3);dvec4  maxInvocationsAMD(dvec4);int64_t maxInvocationsAMD(int64_t);i64vec2 maxInvocationsAMD(i64vec2);i64vec3 maxInvocationsAMD(i64vec3);i64vec4 maxInvocationsAMD(i64vec4);uint64_t maxInvocationsAMD(uint64_t);u64vec2  maxInvocationsAMD(u64vec2);u64vec3  maxInvocationsAMD(u64vec3);u64vec4  maxInvocationsAMD(u64vec4);float16_t maxInvocationsAMD(float16_t);f16vec2   maxInvocationsAMD(f16vec2);f16vec3   maxInvocationsAMD(f16vec3);f16vec4   maxInvocationsAMD(f16vec4);int16_t maxInvocationsAMD(int16_t);i16vec2 maxInvocationsAMD(i16vec2);i16vec3 maxInvocationsAMD(i16vec3);i16vec4 maxInvocationsAMD(i16vec4);uint16_t maxInvocationsAMD(uint16_t);u16vec2  maxInvocationsAMD(u16vec2);u16vec3  maxInvocationsAMD(u16vec3);u16vec4  maxInvocationsAMD(u16vec4);float maxInvocationsInclusiveScanAMD(float);vec2  maxInvocationsInclusiveScanAMD(vec2);vec3  maxInvocationsInclusiveScanAMD(vec3);vec4  maxInvocationsInclusiveScanAMD(vec4);int   maxInvocationsInclusiveScanAMD(int);ivec2 maxInvocationsInclusiveScanAMD(ivec2);ivec3 maxInvocationsInclusiveScanAMD(ivec3);ivec4 maxInvocationsInclusiveScanAMD(ivec4);uint  maxInvocationsInclusiveScanAMD(uint);uvec2 maxInvocationsInclusiveScanAMD(uvec2);uvec3 maxInvocationsInclusiveScanAMD(uvec3);uvec4 maxInvocationsInclusiveScanAMD(uvec4);double maxInvocationsInclusiveScanAMD(double);dvec2  maxInvocationsInclusiveScanAMD(dvec2);dvec3  maxInvocationsInclusiveScanAMD(dvec3);dvec4  maxInvocationsInclusiveScanAMD(dvec4);int64_t maxInvocationsInclusiveScanAMD(int64_t);i64vec2 maxInvocationsInclusiveScanAMD(i64vec2);i64vec3 maxInvocationsInclusiveScanAMD(i64vec3);i64vec4 maxInvocationsInclusiveScanAMD(i64vec4);uint64_t maxInvocationsInclusiveScanAMD(uint64_t);u64vec2  maxInvocationsInclusiveScanAMD(u64vec2);u64vec3  maxInvocationsInclusiveScanAMD(u64vec3);u64vec4  maxInvocationsInclusiveScanAMD(u64vec4);float16_t maxInvocationsInclusiveScanAMD(float16_t);f16vec2   maxInvocationsInclusiveScanAMD(f16vec2);f16vec3   maxInvocationsInclusiveScanAMD(f16vec3);f16vec4   maxInvocationsInclusiveScanAMD(f16vec4);int16_t maxInvocationsInclusiveScanAMD(int16_t);i16vec2 maxInvocationsInclusiveScanAMD(i16vec2);i16vec3 maxInvocationsInclusiveScanAMD(i16vec3);i16vec4 maxInvocationsInclusiveScanAMD(i16vec4);uint16_t maxInvocationsInclusiveScanAMD(uint16_t);u16vec2  maxInvocationsInclusiveScanAMD(u16vec2);u16vec3  maxInvocationsInclusiveScanAMD(u16vec3);u16vec4  maxInvocationsInclusiveScanAMD(u16vec4);float maxInvocationsExclusiveScanAMD(float);vec2  maxInvocationsExclusiveScanAMD(vec2);vec3  maxInvocationsExclusiveScanAMD(vec3);vec4  maxInvocationsExclusiveScanAMD(vec4);int   maxInvocationsExclusiveScanAMD(int);ivec2 maxInvocationsExclusiveScanAMD(ivec2);ivec3 maxInvocationsExclusiveScanAMD(ivec3);ivec4 maxInvocationsExclusiveScanAMD(ivec4);uint  maxInvocationsExclusiveScanAMD(uint);uvec2 maxInvocationsExclusiveScanAMD(uvec2);uvec3 maxInvocationsExclusiveScanAMD(uvec3);uvec4 maxInvocationsExclusiveScanAMD(uvec4);double maxInvocationsExclusiveScanAMD(double);dvec2  maxInvocationsExclusiveScanAMD(dvec2);dvec3  maxInvocationsExclusiveScanAMD(dvec3);dvec4  maxInvocationsExclusiveScanAMD(dvec4);int64_t maxInvocationsExclusiveScanAMD(int64_t);i64vec2 maxInvocationsExclusiveScanAMD(i64vec2);i64vec3 maxInvocationsExclusiveScanAMD(i64vec3);i64vec4 maxInvocationsExclusiveScanAMD(i64vec4);uint64_t maxInvocationsExclusiveScanAMD(uint64_t);u64vec2  maxInvocationsExclusiveScanAMD(u64vec2);u64vec3  maxInvocationsExclusiveScanAMD(u64vec3);u64vec4  maxInvocationsExclusiveScanAMD(u64vec4);float16_t maxInvocationsExclusiveScanAMD(float16_t);f16vec2   maxInvocationsExclusiveScanAMD(f16vec2);f16vec3   maxInvocationsExclusiveScanAMD(f16vec3);f16vec4   maxInvocationsExclusiveScanAMD(f16vec4);int16_t maxInvocationsExclusiveScanAMD(int16_t);i16vec2 maxInvocationsExclusiveScanAMD(i16vec2);i16vec3 maxInvocationsExclusiveScanAMD(i16vec3);i16vec4 maxInvocationsExclusiveScanAMD(i16vec4);uint16_t maxInvocationsExclusiveScanAMD(uint16_t);u16vec2  maxInvocationsExclusiveScanAMD(u16vec2);u16vec3  maxInvocationsExclusiveScanAMD(u16vec3);u16vec4  maxInvocationsExclusiveScanAMD(u16vec4);float addInvocationsAMD(float);vec2  addInvocationsAMD(vec2);vec3  addInvocationsAMD(vec3);vec4  addInvocationsAMD(vec4);int   addInvocationsAMD(int);ivec2 addInvocationsAMD(ivec2);ivec3 addInvocationsAMD(ivec3);ivec4 addInvocationsAMD(ivec4);uint  addInvocationsAMD(uint);uvec2 addInvocationsAMD(uvec2);uvec3 addInvocationsAMD(uvec3);uvec4 addInvocationsAMD(uvec4);double  addInvocationsAMD(double);dvec2   addInvocationsAMD(dvec2);dvec3   addInvocationsAMD(dvec3);dvec4   addInvocationsAMD(dvec4);int64_t addInvocationsAMD(int64_t);i64vec2 addInvocationsAMD(i64vec2);i64vec3 addInvocationsAMD(i64vec3);i64vec4 addInvocationsAMD(i64vec4);uint64_t addInvocationsAMD(uint64_t);u64vec2  addInvocationsAMD(u64vec2);u64vec3  addInvocationsAMD(u64vec3);u64vec4  addInvocationsAMD(u64vec4);float16_t addInvocationsAMD(float16_t);f16vec2   addInvocationsAMD(f16vec2);f16vec3   addInvocationsAMD(f16vec3);f16vec4   addInvocationsAMD(f16vec4);int16_t addInvocationsAMD(int16_t);i16vec2 addInvocationsAMD(i16vec2);i16vec3 addInvocationsAMD(i16vec3);i16vec4 addInvocationsAMD(i16vec4);uint16_t addInvocationsAMD(uint16_t);u16vec2  addInvocationsAMD(u16vec2);u16vec3  addInvocationsAMD(u16vec3);u16vec4  addInvocationsAMD(u16vec4);float addInvocationsInclusiveScanAMD(float);vec2  addInvocationsInclusiveScanAMD(vec2);vec3  addInvocationsInclusiveScanAMD(vec3);vec4  addInvocationsInclusiveScanAMD(vec4);int   addInvocationsInclusiveScanAMD(int);ivec2 addInvocationsInclusiveScanAMD(ivec2);ivec3 addInvocationsInclusiveScanAMD(ivec3);ivec4 addInvocationsInclusiveScanAMD(ivec4);uint  addInvocationsInclusiveScanAMD(uint);uvec2 addInvocationsInclusiveScanAMD(uvec2);uvec3 addInvocationsInclusiveScanAMD(uvec3);uvec4 addInvocationsInclusiveScanAMD(uvec4);double  addInvocationsInclusiveScanAMD(double);dvec2   addInvocationsInclusiveScanAMD(dvec2);dvec3   addInvocationsInclusiveScanAMD(dvec3);dvec4   addInvocationsInclusiveScanAMD(dvec4);int64_t addInvocationsInclusiveScanAMD(int64_t);i64vec2 addInvocationsInclusiveScanAMD(i64vec2);i64vec3 addInvocationsInclusiveScanAMD(i64vec3);i64vec4 addInvocationsInclusiveScanAMD(i64vec4);uint64_t addInvocationsInclusiveScanAMD(uint64_t);u64vec2  addInvocationsInclusiveScanAMD(u64vec2);u64vec3  addInvocationsInclusiveScanAMD(u64vec3);u64vec4  addInvocationsInclusiveScanAMD(u64vec4);float16_t addInvocationsInclusiveScanAMD(float16_t);f16vec2   addInvocationsInclusiveScanAMD(f16vec2);f16vec3   addInvocationsInclusiveScanAMD(f16vec3);f16vec4   addInvocationsInclusiveScanAMD(f16vec4);int16_t addInvocationsInclusiveScanAMD(int16_t);i16vec2 addInvocationsInclusiveScanAMD(i16vec2);i16vec3 addInvocationsInclusiveScanAMD(i16vec3);i16vec4 addInvocationsInclusiveScanAMD(i16vec4);uint16_t addInvocationsInclusiveScanAMD(uint16_t);u16vec2  addInvocationsInclusiveScanAMD(u16vec2);u16vec3  addInvocationsInclusiveScanAMD(u16vec3);u16vec4  addInvocationsInclusiveScanAMD(u16vec4);float addInvocationsExclusiveScanAMD(float);vec2  addInvocationsExclusiveScanAMD(vec2);vec3  addInvocationsExclusiveScanAMD(vec3);vec4  addInvocationsExclusiveScanAMD(vec4);int   addInvocationsExclusiveScanAMD(int);ivec2 addInvocationsExclusiveScanAMD(ivec2);ivec3 addInvocationsExclusiveScanAMD(ivec3);ivec4 addInvocationsExclusiveScanAMD(ivec4);uint  addInvocationsExclusiveScanAMD(uint);uvec2 addInvocationsExclusiveScanAMD(uvec2);uvec3 addInvocationsExclusiveScanAMD(uvec3);uvec4 addInvocationsExclusiveScanAMD(uvec4);double  addInvocationsExclusiveScanAMD(double);dvec2   addInvocationsExclusiveScanAMD(dvec2);dvec3   addInvocationsExclusiveScanAMD(dvec3);dvec4   addInvocationsExclusiveScanAMD(dvec4);int64_t addInvocationsExclusiveScanAMD(int64_t);i64vec2 addInvocationsExclusiveScanAMD(i64vec2);i64vec3 addInvocationsExclusiveScanAMD(i64vec3);i64vec4 addInvocationsExclusiveScanAMD(i64vec4);uint64_t addInvocationsExclusiveScanAMD(uint64_t);u64vec2  addInvocationsExclusiveScanAMD(u64vec2);u64vec3  addInvocationsExclusiveScanAMD(u64vec3);u64vec4  addInvocationsExclusiveScanAMD(u64vec4);float16_t addInvocationsExclusiveScanAMD(float16_t);f16vec2   addInvocationsExclusiveScanAMD(f16vec2);f16vec3   addInvocationsExclusiveScanAMD(f16vec3);f16vec4   addInvocationsExclusiveScanAMD(f16vec4);int16_t addInvocationsExclusiveScanAMD(int16_t);i16vec2 addInvocationsExclusiveScanAMD(i16vec2);i16vec3 addInvocationsExclusiveScanAMD(i16vec3);i16vec4 addInvocationsExclusiveScanAMD(i16vec4);uint16_t addInvocationsExclusiveScanAMD(uint16_t);u16vec2  addInvocationsExclusiveScanAMD(u16vec2);u16vec3  addInvocationsExclusiveScanAMD(u16vec3);u16vec4  addInvocationsExclusiveScanAMD(u16vec4);float minInvocationsNonUniformAMD(float);vec2  minInvocationsNonUniformAMD(vec2);vec3  minInvocationsNonUniformAMD(vec3);vec4  minInvocationsNonUniformAMD(vec4);int   minInvocationsNonUniformAMD(int);ivec2 minInvocationsNonUniformAMD(ivec2);ivec3 minInvocationsNonUniformAMD(ivec3);ivec4 minInvocationsNonUniformAMD(ivec4);uint  minInvocationsNonUniformAMD(uint);uvec2 minInvocationsNonUniformAMD(uvec2);uvec3 minInvocationsNonUniformAMD(uvec3);uvec4 minInvocationsNonUniformAMD(uvec4);double minInvocationsNonUniformAMD(double);dvec2  minInvocationsNonUniformAMD(dvec2);dvec3  minInvocationsNonUniformAMD(dvec3);dvec4  minInvocationsNonUniformAMD(dvec4);int64_t minInvocationsNonUniformAMD(int64_t);i64vec2 minInvocationsNonUniformAMD(i64vec2);i64vec3 minInvocationsNonUniformAMD(i64vec3);i64vec4 minInvocationsNonUniformAMD(i64vec4);uint64_t minInvocationsNonUniformAMD(uint64_t);u64vec2  minInvocationsNonUniformAMD(u64vec2);u64vec3  minInvocationsNonUniformAMD(u64vec3);u64vec4  minInvocationsNonUniformAMD(u64vec4);float16_t minInvocationsNonUniformAMD(float16_t);f16vec2   minInvocationsNonUniformAMD(f16vec2);f16vec3   minInvocationsNonUniformAMD(f16vec3);f16vec4   minInvocationsNonUniformAMD(f16vec4);int16_t minInvocationsNonUniformAMD(int16_t);i16vec2 minInvocationsNonUniformAMD(i16vec2);i16vec3 minInvocationsNonUniformAMD(i16vec3);i16vec4 minInvocationsNonUniformAMD(i16vec4);uint16_t minInvocationsNonUniformAMD(uint16_t);u16vec2  minInvocationsNonUniformAMD(u16vec2);u16vec3  minInvocationsNonUniformAMD(u16vec3);u16vec4  minInvocationsNonUniformAMD(u16vec4);float minInvocationsInclusiveScanNonUniformAMD(float);vec2  minInvocationsInclusiveScanNonUniformAMD(vec2);vec3  minInvocationsInclusiveScanNonUniformAMD(vec3);vec4  minInvocationsInclusiveScanNonUniformAMD(vec4);int   minInvocationsInclusiveScanNonUniformAMD(int);ivec2 minInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 minInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 minInvocationsInclusiveScanNonUniformAMD(ivec4);uint  minInvocationsInclusiveScanNonUniformAMD(uint);uvec2 minInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 minInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 minInvocationsInclusiveScanNonUniformAMD(uvec4);double minInvocationsInclusiveScanNonUniformAMD(double);dvec2  minInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  minInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  minInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t minInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 minInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 minInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 minInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t minInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  minInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  minInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  minInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t minInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   minInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   minInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   minInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t minInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 minInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 minInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 minInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t minInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  minInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  minInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  minInvocationsInclusiveScanNonUniformAMD(u16vec4);float minInvocationsExclusiveScanNonUniformAMD(float);vec2  minInvocationsExclusiveScanNonUniformAMD(vec2);vec3  minInvocationsExclusiveScanNonUniformAMD(vec3);vec4  minInvocationsExclusiveScanNonUniformAMD(vec4);int   minInvocationsExclusiveScanNonUniformAMD(int);ivec2 minInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 minInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 minInvocationsExclusiveScanNonUniformAMD(ivec4);uint  minInvocationsExclusiveScanNonUniformAMD(uint);uvec2 minInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 minInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 minInvocationsExclusiveScanNonUniformAMD(uvec4);double minInvocationsExclusiveScanNonUniformAMD(double);dvec2  minInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  minInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  minInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t minInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 minInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 minInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 minInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t minInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  minInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  minInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  minInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t minInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   minInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   minInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   minInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t minInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 minInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 minInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 minInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t minInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  minInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  minInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  minInvocationsExclusiveScanNonUniformAMD(u16vec4);float maxInvocationsNonUniformAMD(float);vec2  maxInvocationsNonUniformAMD(vec2);vec3  maxInvocationsNonUniformAMD(vec3);vec4  maxInvocationsNonUniformAMD(vec4);int   maxInvocationsNonUniformAMD(int);ivec2 maxInvocationsNonUniformAMD(ivec2);ivec3 maxInvocationsNonUniformAMD(ivec3);ivec4 maxInvocationsNonUniformAMD(ivec4);uint  maxInvocationsNonUniformAMD(uint);uvec2 maxInvocationsNonUniformAMD(uvec2);uvec3 maxInvocationsNonUniformAMD(uvec3);uvec4 maxInvocationsNonUniformAMD(uvec4);double maxInvocationsNonUniformAMD(double);dvec2  maxInvocationsNonUniformAMD(dvec2);dvec3  maxInvocationsNonUniformAMD(dvec3);dvec4  maxInvocationsNonUniformAMD(dvec4);int64_t maxInvocationsNonUniformAMD(int64_t);i64vec2 maxInvocationsNonUniformAMD(i64vec2);i64vec3 maxInvocationsNonUniformAMD(i64vec3);i64vec4 maxInvocationsNonUniformAMD(i64vec4);uint64_t maxInvocationsNonUniformAMD(uint64_t);u64vec2  maxInvocationsNonUniformAMD(u64vec2);u64vec3  maxInvocationsNonUniformAMD(u64vec3);u64vec4  maxInvocationsNonUniformAMD(u64vec4);float16_t maxInvocationsNonUniformAMD(float16_t);f16vec2   maxInvocationsNonUniformAMD(f16vec2);f16vec3   maxInvocationsNonUniformAMD(f16vec3);f16vec4   maxInvocationsNonUniformAMD(f16vec4);int16_t maxInvocationsNonUniformAMD(int16_t);i16vec2 maxInvocationsNonUniformAMD(i16vec2);i16vec3 maxInvocationsNonUniformAMD(i16vec3);i16vec4 maxInvocationsNonUniformAMD(i16vec4);uint16_t maxInvocationsNonUniformAMD(uint16_t);u16vec2  maxInvocationsNonUniformAMD(u16vec2);u16vec3  maxInvocationsNonUniformAMD(u16vec3);u16vec4  maxInvocationsNonUniformAMD(u16vec4);float maxInvocationsInclusiveScanNonUniformAMD(float);vec2  maxInvocationsInclusiveScanNonUniformAMD(vec2);vec3  maxInvocationsInclusiveScanNonUniformAMD(vec3);vec4  maxInvocationsInclusiveScanNonUniformAMD(vec4);int   maxInvocationsInclusiveScanNonUniformAMD(int);ivec2 maxInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 maxInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 maxInvocationsInclusiveScanNonUniformAMD(ivec4);uint  maxInvocationsInclusiveScanNonUniformAMD(uint);uvec2 maxInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 maxInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 maxInvocationsInclusiveScanNonUniformAMD(uvec4);double maxInvocationsInclusiveScanNonUniformAMD(double);dvec2  maxInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  maxInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  maxInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t maxInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 maxInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 maxInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 maxInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t maxInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  maxInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  maxInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  maxInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t maxInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   maxInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   maxInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   maxInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t maxInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 maxInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 maxInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 maxInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t maxInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  maxInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  maxInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  maxInvocationsInclusiveScanNonUniformAMD(u16vec4);float maxInvocationsExclusiveScanNonUniformAMD(float);vec2  maxInvocationsExclusiveScanNonUniformAMD(vec2);vec3  maxInvocationsExclusiveScanNonUniformAMD(vec3);vec4  maxInvocationsExclusiveScanNonUniformAMD(vec4);int   maxInvocationsExclusiveScanNonUniformAMD(int);ivec2 maxInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 maxInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 maxInvocationsExclusiveScanNonUniformAMD(ivec4);uint  maxInvocationsExclusiveScanNonUniformAMD(uint);uvec2 maxInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 maxInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 maxInvocationsExclusiveScanNonUniformAMD(uvec4);double maxInvocationsExclusiveScanNonUniformAMD(double);dvec2  maxInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  maxInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  maxInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t maxInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 maxInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 maxInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 maxInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t maxInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  maxInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  maxInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  maxInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t maxInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   maxInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   maxInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   maxInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t maxInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 maxInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 maxInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 maxInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t maxInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  maxInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  maxInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  maxInvocationsExclusiveScanNonUniformAMD(u16vec4);float addInvocationsNonUniformAMD(float);vec2  addInvocationsNonUniformAMD(vec2);vec3  addInvocationsNonUniformAMD(vec3);vec4  addInvocationsNonUniformAMD(vec4);int   addInvocationsNonUniformAMD(int);ivec2 addInvocationsNonUniformAMD(ivec2);ivec3 addInvocationsNonUniformAMD(ivec3);ivec4 addInvocationsNonUniformAMD(ivec4);uint  addInvocationsNonUniformAMD(uint);uvec2 addInvocationsNonUniformAMD(uvec2);uvec3 addInvocationsNonUniformAMD(uvec3);uvec4 addInvocationsNonUniformAMD(uvec4);double addInvocationsNonUniformAMD(double);dvec2  addInvocationsNonUniformAMD(dvec2);dvec3  addInvocationsNonUniformAMD(dvec3);dvec4  addInvocationsNonUniformAMD(dvec4);int64_t addInvocationsNonUniformAMD(int64_t);i64vec2 addInvocationsNonUniformAMD(i64vec2);i64vec3 addInvocationsNonUniformAMD(i64vec3);i64vec4 addInvocationsNonUniformAMD(i64vec4);uint64_t addInvocationsNonUniformAMD(uint64_t);u64vec2  addInvocationsNonUniformAMD(u64vec2);u64vec3  addInvocationsNonUniformAMD(u64vec3);u64vec4  addInvocationsNonUniformAMD(u64vec4);float16_t addInvocationsNonUniformAMD(float16_t);f16vec2   addInvocationsNonUniformAMD(f16vec2);f16vec3   addInvocationsNonUniformAMD(f16vec3);f16vec4   addInvocationsNonUniformAMD(f16vec4);int16_t addInvocationsNonUniformAMD(int16_t);i16vec2 addInvocationsNonUniformAMD(i16vec2);i16vec3 addInvocationsNonUniformAMD(i16vec3);i16vec4 addInvocationsNonUniformAMD(i16vec4);uint16_t addInvocationsNonUniformAMD(uint16_t);u16vec2  addInvocationsNonUniformAMD(u16vec2);u16vec3  addInvocationsNonUniformAMD(u16vec3);u16vec4  addInvocationsNonUniformAMD(u16vec4);float addInvocationsInclusiveScanNonUniformAMD(float);vec2  addInvocationsInclusiveScanNonUniformAMD(vec2);vec3  addInvocationsInclusiveScanNonUniformAMD(vec3);vec4  addInvocationsInclusiveScanNonUniformAMD(vec4);int   addInvocationsInclusiveScanNonUniformAMD(int);ivec2 addInvocationsInclusiveScanNonUniformAMD(ivec2);ivec3 addInvocationsInclusiveScanNonUniformAMD(ivec3);ivec4 addInvocationsInclusiveScanNonUniformAMD(ivec4);uint  addInvocationsInclusiveScanNonUniformAMD(uint);uvec2 addInvocationsInclusiveScanNonUniformAMD(uvec2);uvec3 addInvocationsInclusiveScanNonUniformAMD(uvec3);uvec4 addInvocationsInclusiveScanNonUniformAMD(uvec4);double addInvocationsInclusiveScanNonUniformAMD(double);dvec2  addInvocationsInclusiveScanNonUniformAMD(dvec2);dvec3  addInvocationsInclusiveScanNonUniformAMD(dvec3);dvec4  addInvocationsInclusiveScanNonUniformAMD(dvec4);int64_t addInvocationsInclusiveScanNonUniformAMD(int64_t);i64vec2 addInvocationsInclusiveScanNonUniformAMD(i64vec2);i64vec3 addInvocationsInclusiveScanNonUniformAMD(i64vec3);i64vec4 addInvocationsInclusiveScanNonUniformAMD(i64vec4);uint64_t addInvocationsInclusiveScanNonUniformAMD(uint64_t);u64vec2  addInvocationsInclusiveScanNonUniformAMD(u64vec2);u64vec3  addInvocationsInclusiveScanNonUniformAMD(u64vec3);u64vec4  addInvocationsInclusiveScanNonUniformAMD(u64vec4);float16_t addInvocationsInclusiveScanNonUniformAMD(float16_t);f16vec2   addInvocationsInclusiveScanNonUniformAMD(f16vec2);f16vec3   addInvocationsInclusiveScanNonUniformAMD(f16vec3);f16vec4   addInvocationsInclusiveScanNonUniformAMD(f16vec4);int16_t addInvocationsInclusiveScanNonUniformAMD(int16_t);i16vec2 addInvocationsInclusiveScanNonUniformAMD(i16vec2);i16vec3 addInvocationsInclusiveScanNonUniformAMD(i16vec3);i16vec4 addInvocationsInclusiveScanNonUniformAMD(i16vec4);uint16_t addInvocationsInclusiveScanNonUniformAMD(uint16_t);u16vec2  addInvocationsInclusiveScanNonUniformAMD(u16vec2);u16vec3  addInvocationsInclusiveScanNonUniformAMD(u16vec3);u16vec4  addInvocationsInclusiveScanNonUniformAMD(u16vec4);float addInvocationsExclusiveScanNonUniformAMD(float);vec2  addInvocationsExclusiveScanNonUniformAMD(vec2);vec3  addInvocationsExclusiveScanNonUniformAMD(vec3);vec4  addInvocationsExclusiveScanNonUniformAMD(vec4);int   addInvocationsExclusiveScanNonUniformAMD(int);ivec2 addInvocationsExclusiveScanNonUniformAMD(ivec2);ivec3 addInvocationsExclusiveScanNonUniformAMD(ivec3);ivec4 addInvocationsExclusiveScanNonUniformAMD(ivec4);uint  addInvocationsExclusiveScanNonUniformAMD(uint);uvec2 addInvocationsExclusiveScanNonUniformAMD(uvec2);uvec3 addInvocationsExclusiveScanNonUniformAMD(uvec3);uvec4 addInvocationsExclusiveScanNonUniformAMD(uvec4);double addInvocationsExclusiveScanNonUniformAMD(double);dvec2  addInvocationsExclusiveScanNonUniformAMD(dvec2);dvec3  addInvocationsExclusiveScanNonUniformAMD(dvec3);dvec4  addInvocationsExclusiveScanNonUniformAMD(dvec4);int64_t addInvocationsExclusiveScanNonUniformAMD(int64_t);i64vec2 addInvocationsExclusiveScanNonUniformAMD(i64vec2);i64vec3 addInvocationsExclusiveScanNonUniformAMD(i64vec3);i64vec4 addInvocationsExclusiveScanNonUniformAMD(i64vec4);uint64_t addInvocationsExclusiveScanNonUniformAMD(uint64_t);u64vec2  addInvocationsExclusiveScanNonUniformAMD(u64vec2);u64vec3  addInvocationsExclusiveScanNonUniformAMD(u64vec3);u64vec4  addInvocationsExclusiveScanNonUniformAMD(u64vec4);float16_t addInvocationsExclusiveScanNonUniformAMD(float16_t);f16vec2   addInvocationsExclusiveScanNonUniformAMD(f16vec2);f16vec3   addInvocationsExclusiveScanNonUniformAMD(f16vec3);f16vec4   addInvocationsExclusiveScanNonUniformAMD(f16vec4);int16_t addInvocationsExclusiveScanNonUniformAMD(int16_t);i16vec2 addInvocationsExclusiveScanNonUniformAMD(i16vec2);i16vec3 addInvocationsExclusiveScanNonUniformAMD(i16vec3);i16vec4 addInvocationsExclusiveScanNonUniformAMD(i16vec4);uint16_t addInvocationsExclusiveScanNonUniformAMD(uint16_t);u16vec2  addInvocationsExclusiveScanNonUniformAMD(u16vec2);u16vec3  addInvocationsExclusiveScanNonUniformAMD(u16vec3);u16vec4  addInvocationsExclusiveScanNonUniformAMD(u16vec4);float swizzleInvocationsAMD(float, uvec4);vec2  swizzleInvocationsAMD(vec2,  uvec4);vec3  swizzleInvocationsAMD(vec3,  uvec4);vec4  swizzleInvocationsAMD(vec4,  uvec4);int   swizzleInvocationsAMD(int,   uvec4);ivec2 swizzleInvocationsAMD(ivec2, uvec4);ivec3 swizzleInvocationsAMD(ivec3, uvec4);ivec4 swizzleInvocationsAMD(ivec4, uvec4);uint  swizzleInvocationsAMD(uint,  uvec4);uvec2 swizzleInvocationsAMD(uvec2, uvec4);uvec3 swizzleInvocationsAMD(uvec3, uvec4);uvec4 swizzleInvocationsAMD(uvec4, uvec4);float swizzleInvocationsMaskedAMD(float, uvec3);vec2  swizzleInvocationsMaskedAMD(vec2,  uvec3);vec3  swizzleInvocationsMaskedAMD(vec3,  uvec3);vec4  swizzleInvocationsMaskedAMD(vec4,  uvec3);int   swizzleInvocationsMaskedAMD(int,   uvec3);ivec2 swizzleInvocationsMaskedAMD(ivec2, uvec3);ivec3 swizzleInvocationsMaskedAMD(ivec3, uvec3);ivec4 swizzleInvocationsMaskedAMD(ivec4, uvec3);uint  swizzleInvocationsMaskedAMD(uint,  uvec3);uvec2 swizzleInvocationsMaskedAMD(uvec2, uvec3);uvec3 swizzleInvocationsMaskedAMD(uvec3, uvec3);uvec4 swizzleInvocationsMaskedAMD(uvec4, uvec3);float writeInvocationAMD(float, float, uint);vec2  writeInvocationAMD(vec2,  vec2,  uint);vec3  writeInvocationAMD(vec3,  vec3,  uint);vec4  writeInvocationAMD(vec4,  vec4,  uint);int   writeInvocationAMD(int,   int,   uint);ivec2 writeInvocationAMD(ivec2, ivec2, uint);ivec3 writeInvocationAMD(ivec3, ivec3, uint);ivec4 writeInvocationAMD(ivec4, ivec4, uint);uint  writeInvocationAMD(uint,  uint,  uint);uvec2 writeInvocationAMD(uvec2, uvec2, uint);uvec3 writeInvocationAMD(uvec3, uvec3, uint);uvec4 writeInvocationAMD(uvec4, uvec4, uint);uint mbcntAMD(uint64_t);
float near;float far;float diff;
float noise1(float x);float noise1(vec2  x);float noise1(vec3  x);float noise1(vec4  x);vec2 noise2(float x);vec2 noise2(vec2  x);vec2 noise2(vec3  x);vec2 noise2(vec4  x);vec3 noise3(float x);vec3 noise3(vec2  x);vec3 noise3(vec3  x);vec3 noise3(vec4  x);vec4 noise4(float x);vec4 noise4(vec2  x);vec4 noise4(vec3  x);vec4 noise4(vec4  x);
floor
Floor
fltx4
FMax3AMD
fmax_common
FMid3AMD
FMin3AMD
fmin_common
FNegate
fold-spec-const-op-composite
FontManager_001
) for 
force
forcecase
-force_recommend_gl
forcing 32-bit vector type to non 64-bit scalar
forcing non 32-bit vector type
FOrdEqual
FOrdGreaterThan
FOrdGreaterThanEqual
FOrdLessThan
FOrdLessThanEqual
FOrdNotEqual
 for Entry Point id 
for header name: %s
for_init_statement
for-loop initializer statement
format requires readonly or writeonly memory qualifier
for non-parameter, can only apply to 'in' or no storage qualifier
For OpExecutionModeId all Extra Operand ids must be constant instructions.
for_rest_statement
for sub-statement
 for target environment 
 for variable in 
For Vulkan, an OpTypeStruct variable containing an 
for Vulkan environment.
For Vulkan OpTypeRuntimeArray can only 
For Vulkan, OpTypeStruct variables containing 
For Vulkan with RuntimeDescriptorArrayEXT, a variable 
forward_pointer(
Forward pointers must point to a structure
For WebGPU, AcquireRelease must be set for Memory Semantics of OpControlBarrier.
For WebGPU, all blocks must be reachable, unless they are 
For WebGPU, an OpTypeStruct variable containing an 
For WebGPU, functions need to be defined before being called.
For WebGPU, ImageMemory must be set for Memory Semantics of OpMemoryBarrier.
For WebGPU Memory no bits may be set for Memory Semantics of OpAtomic* instructions.
For WebGPU only ImageMemory may be set for Memory Semantics of OpMemoryBarrier.
For WebGPU only WorkgroupMemory and AcquireRelease may be set for Memory Semantics of OpControlBarrier.
For WebGPU OpTypeRuntimeArray can only 
For WebGPU, OpTypeStruct variables containing 
For WebGPU, the only valid parameter to OpExtension is 
For WebGPU, the only valid parameter to OpExtInstImport is "GLSL.std.450".
For WebGPU, unreachable continue-target cannot be the target of a branch.
For WebGPU, unreachable continue-target must be referenced by a loop instruction.
For WebGPU, unreachable continue-target must be referenced by a reachable loop instruction.
For WebGPU, unreachable continue-target must only contain an OpLabel and an OpBranch instruction.
For WebGPU, unreachable continue-target must only have a back edge to a single reachable loop instruction.
For WebGPU, unreachable continue-target must terminate with OpBranch.
For WebGPU, unreachable merge-blocks cannot be the target of a branch.
For WebGPU, unreachable merge-blocks must be referenced by a reachable merge instruction.
For WebGPU, unreachable merge-blocks must only contain an OpLabel and OpUnreachable instruction.
For WebGPU, unreachable merge-blocks must terminate with OpUnreachable.
For WebGPU, WorkgroupMemory must be set for Memory Semantics of OpControlBarrier.
. Found 
*** Found combo "%s" multiple times in %s declared differently!
Found %d checkpoints.
Found %d streaming textures in array, but in-flight count is %d
*** Found feature "%s" multiple times in %s!
 Found result <id> '
Found unrecognized extension 
FPFastMathMode
fprintf
FPRoundingMode
FPRoundingMode decoration can be applied only to a width-only conversion instruction for floating-point object.
FPRoundingMode decoration can be applied only to the Object operand of an OpStore.
FPRoundingMode decoration can be applied only to the Object operand of an OpStore in the StorageBuffer, PhysicalStorageBufferEXT, Uniform, PushConstant, Input, or Output Storage Classes.
FPRoundingMode decoration can be applied only to the Object operand of an OpStore storing through a pointer to a 16-bit floating-point scalar or vector object.
fputc
fputs
Fract
Fraction
fractional_even
fractional_even_spacing
fractional_odd
fractional_odd_spacing
Fractional sampling not implemented yet
fragColor
fragment
FragmentBarycentricNV
FragmentDensityEXT
Fragment execution model entry points can only specify one of OriginUpperLeft or OriginLowerLeft execution modes.
Fragment execution model entry points can specify at most one fragment shader interlock execution mode.
Fragment execution model entry points can specify at most one of DepthGreater, DepthLess or DepthUnchanged execution modes.
Fragment execution model entry points require either an OriginUpperLeft or OriginLowerLeft execution mode.
fragmentFetchAMD
FragmentFetchAMD
FragmentFullyCoveredEXT
fragment input block
FragmentMaskAMD
fragmentMaskFetchAMD
FragmentMaskFetchAMD
fragment outputs sharing the same location must be the same basic type
fragment-shader array-of-array input
fragment-shader array-of-array output
fragment-shader array-of-struct input
fragment shader barycentric
fragment shader interlock layout qualifier
fragment shader output
FragmentShaderPixelInterlockEXT
FragmentShaderSampleInterlockEXT
FragmentShaderShadingRateInterlockEXT
fragment-shader struct input
fragment-shader struct input containing an array
fragment-shader struct input containing structure
FragStencilRef
FragStencilRefEXT
frame
	Framebuffer Count ( %d ): 
__frame_state_for
FrameSync() - bailing out of vkWaitForFences( fenceCount = %d ) after %f seconds, error = %s
fread
`fread' error. file may be corrupted.
fread() error on 
	 FreeBlock Start: %s End: %s
Freed EMS handle %u
Freed XMS handle %u
freeze-spec-const
frexp
Frexp
FrexpStruct
friction
friend
From 
From ARB_gl_spirv extension:
__FROM_ATTRIBUTE__
__FROM_ATTRIBUTE_OR_FEATURE__
From SPIR-V spec, section 3.32.8 on OpVariable:
From Vulkan spec, section 14.5.1:
From Vulkan spec, section 14.5.2:
From WebGPU execution environment spec:
FSign
ftransform
FUI,F
FUI,F,
FUI,F,,
FUI,F,F,F
FUI,I
FUI,S,F
FUI,U,
FUI,U,,
FUI,U,,,
FUI,U,,,,
FUI,U,F,
FUI,U,F,,
FUI,U,F,,,
fully_specified_type
FuncParamAttr
Function #
function already has a body
function body can't be in a declarator list
function body can't be in a typedef
function_call
FunctionCall
Function Call: 
function call arguments
function_call_generic
function_call_header
function_call_header_no_parameters
function_call_header_with_parameters
function call, method, or subroutine call expected
function_call_or_method
function cannot take any parameter(s)
function control
Function declaration (id 
Function declarations must appear before function definitions.
function_declarator
function_definition
Function Definition: 
Function definition (id 
function does not return a value:
FunctionEnd
Function end cannot be called in blocks
Function end instructions must be in a function body
function_header
function_header_with_parameters
function_identifier
function inside function
function name is redeclaration of existing name
FunctionParameter
function parameter attribute
Function parameter cannot be the first instruction.
Function parameter instructions must be in a function body
function parameter list
Function parameter must be preceded by a function.
function parameter requires array size
Function Parameters: 
Function parameters must only appear immediately after the function definition
function_prototype
: Function storage class forbidden when the Shader capability is declared.
function typedefs not implemented
FUnordEqual
FUnordGreaterThan
FUnordGreaterThanEqual
FUnordLessThan
FUnordLessThanEqual
FUnordNotEqual
future reserved word in ES 300 and keyword in GLSL
fvec2
fvec3
fvec4
fwidth
Fwidth
fwidthCoarse
FwidthCoarse
fwidthFine
FwidthFine
fwrite
fYfxk
	*	G)
G@7WOH7
game_class
GAMECONSOLE
gameinfo.gi
gameinfo.txt
game_keys
GameResourceServiceClientV001
GameResourceServiceServerV001
GAMEROOT
GameUIService_001
gamma table being rebuilt
gamma value
(gC9H
GCC: (GNU) 4.9.x 20150123 (prerelease)
G channel not found
GENERAL
GenerateDistanceField
GenerateResourceNameFromFileName: Invalid extension specified in file name "%s"!
generate-webgpu-initializers
Generating SPIR-V array-of-arrays, but Vulkan only supports single array level for this resource
Generating variable pointers requires capability 
; Generator: 
GenericCastToPtr
GenericCastToPtrExplicit
GenericGameData
GenericPointer
GenericPtrMemSemantics
geometry
Geometry
Geometry execution model entry points must specify exactly one of InputPoints, InputLines, InputLinesAdjacency, Triangles or InputTrianglesAdjacency execution modes.
Geometry execution model entry points must specify exactly one of OutputPoints, OutputLineStrip or OutputTriangleStrip execution modes.
GeometryPointSize
Geometry Shader
geometry shader passthrough
GeometryShaderPassthroughNV
geometry shaders
GeometryStreams
GE_OP
GetCPUInformation
GetCStringCharConversion
GetDefaultQueue
getenv
GetKernelLocalSizeForSubgroupCount
GetKernelMaxNumSubgroups
GetKernelNDrangeMaxSubGroupSize
GetKernelNDrangeSubGroupCount
GetKernelPreferredWorkGroupSizeMultiple
GetKernelWorkGroupSize
GetMaxPipePackets
GetNumPipePackets
GetRenderTargetSampleCount
GetRenderTargetSamplePosition
GetResourceManifestCount
GetResourceManifests
getrusage
 gets larger than 3
GetVfxShaderFile: Failed to unserialize CVfxShaderFile.  Is your shadercache out-of-date?  Try deleting it.
GetVfxShaderFile: Failed to unserialize CVfxShaderFileVulkan.  Is your shadercache out-of-date?  Try deleting it.
Gig8ut
GL_3DL_array_objects
GL_AMD_gcn_shader
GL_AMD_gpu_shader_half_float
GL_AMD_gpu_shader_half_float_fetch
GL_AMD_gpu_shader_int16
GL_AMD_shader_ballot
GL_AMD_shader_explicit_vertex_parameter
GL_AMD_shader_fragment_mask
GL_AMD_shader_image_load_store_lod
GL_AMD_shader_trinary_minmax
GL_AMD_texture_gather_bias_lod
GL_ANDROID_extension_pack_es31a
GL_ARB_compute_shader
GL_ARB_derivative_control
GL_ARB_enhanced_layouts
GL_ARB_explicit_attrib_location
GL_ARB_explicit_uniform_location
GL_ARB_fragment_shader_interlock
GL_ARB_gpu_shader5
GL_ARB_gpu_shader_int64
GL_ARB_post_depth_coverage
GL_ARB_separate_shader_objects
GL_ARB_shader_atomic_counters
GL_ARB_shader_ballot
GL_ARB_shader_clock
GL_ARB_shader_draw_parameters
GL_ARB_shader_group_vote
GL_ARB_shader_image_load_store
GL_ARB_shader_stencil_export
GL_ARB_shader_texture_image_samples
GL_ARB_shader_texture_lod
GL_ARB_shader_viewport_layer_array
GL_ARB_shading_language_420pack
GL_ARB_sparse_texture2
GL_ARB_sparse_texture_clamp
GL_ARB_tessellation_shader
GL_ARB_texture_cube_map_array
GL_ARB_texture_gather
GL_ARB_texture_rectangle
GL_ARB_viewport_array
gl_BackColor
gl_BackSecondaryColor
gl_BaryCoordNoPerspAMD
gl_BaryCoordNoPerspCentroidAMD
gl_BaryCoordNoPerspNV
gl_BaryCoordNoPerspSampleAMD
gl_BaryCoordNV
gl_BaryCoordPullModelAMD
gl_BaryCoordSmoothAMD
gl_BaryCoordSmoothCentroidAMD
gl_BaryCoordSmoothSampleAMD
gl_BaseInstance
gl_BaseInstanceARB
gl_BaseVertex
gl_BaseVertexARB
gl_BoundingBox
gl_BoundingBoxEXT
gl_BoundingBoxOES
gl_ClipDistance
gl_ClipDistance array size
gl_ClipDistancePerViewNV array size
gl_ClipVertex
gl_Color
GLCompute
gl_CullDistance
gl_CullDistance array size
gl_CullDistancePerViewNV array size
gl_DeviceIndex
gl_DrawID
gl_DrawIDARB
GL_EXT_buffer_reference
GL_EXT_buffer_reference2
GL_EXT_buffer_reference_uvec2
GL_EXT_control_flow_attributes
GL_EXT_demote_to_helper_invocation
GL_EXT_device_group
GL_EXT_frag_depth
GL_EXT_fragment_invocation_density
GL_EXT_geometry_point_size
GL_EXT_geometry_shader
GL_EXT_gpu_shader5
GL_EXT_multiview
GL_EXT_nonuniform_qualifier
GL_EXT_post_depth_coverage
GL_EXT_primitive_bounding_box
GL_EXT_samplerless_texture_functions
GL_EXT_scalar_block_layout
GL_EXT_shader_16bit_storage
GL_EXT_shader_8bit_storage
GL_EXT_shader_atomic_int64
GL_EXT_shader_explicit_arithmetic_types
GL_EXT_shader_explicit_arithmetic_types_float16
GL_EXT_shader_explicit_arithmetic_types_float32
GL_EXT_shader_explicit_arithmetic_types_float64
GL_EXT_shader_explicit_arithmetic_types_int16
GL_EXT_shader_explicit_arithmetic_types_int32
GL_EXT_shader_explicit_arithmetic_types_int64
GL_EXT_shader_explicit_arithmetic_types_int8
GL_EXT_shader_image_load_formatted
GL_EXT_shader_io_blocks
GL_EXT_shader_non_constant_global_initializers
GL_EXT_shader_realtime_clock
GL_EXT_shader_subgroup_extended_types_float16
GL_EXT_shader_subgroup_extended_types_int16
GL_EXT_shader_subgroup_extended_types_int64
GL_EXT_shader_subgroup_extended_types_int8
GL_EXT_shader_texture_lod
GL_EXT_shadow_samplers
GL_EXT_tessellation_point_size
GL_EXT_tessellation_shader
GL_EXT_texture_buffer
GL_EXT_texture_cube_map_array
GL_EXT_YUV_target
gl_FogCoord
gl_FogFragCoord
gl_FragColor
gl_FragCoord origin is upper left
gl_FragCoord pixel center is integer
gl_FragCoord redeclarations must match across shaders
gl_FragDepthEXT
gl_FragFullyCoveredNV
gl_FragInvocationCountEXT
gl_FragmentSizeNV
gl_FragSizeEXT
gl_FragStencilRefARB
gl_FrontColor
gl_FrontFacing
gl_FrontSecondaryColor
gl_GlobalInvocationID
GL_GOOGLE_cpp_style_line_directive
GL_GOOGLE_include_directive
gl_HelperInvocation
gl_HitKindNV
gl_HitTNV
gl_in
gl_IncomingRayFlagsNV
} gl_in[];in int gl_PrimitiveIDIn;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
gl_InstanceCustomIndexNV
gl_InstanceId
gl_InstanceIndex
gl_InvocationsPerPixelNV
GL_KHR_blend_equation_advanced
GL_KHR_memory_scope_semantics
GL_KHR_shader_subgroup_arithmetic
GL_KHR_shader_subgroup_ballot
GL_KHR_shader_subgroup_basic
GL_KHR_shader_subgroup_clustered
GL_KHR_shader_subgroup_quad
GL_KHR_shader_subgroup_shuffle
GL_KHR_shader_subgroup_shuffle_relative
GL_KHR_shader_subgroup_vote
gl_LaunchIDNV
gl_LaunchSizeNV
gl_Layer
gl_LocalInvocationID
gl_LocalInvocationIndex
gl_MaxClipDistances
gl_MaxComputeAtomicCounterBuffers
gl_MaxComputeAtomicCounters
gl_MaxComputeImageUniforms
gl_MaxComputeTextureImageUnits
gl_MaxComputeUniformComponents
gl_MaxComputeWorkGroupCount
gl_MaxCullDistances
gl_MaxMeshViewCountNV
gl_MaxProgramTexelOffset
gl_MaxTextureCoords
gl_MaxTransformFeedbackBuffers
gl_MaxTransformFeedbackBuffers is %d
gl_MaxTransformFeedbackInterleavedComponents
, gl_MaxTransformFeedbackInterleavedComponents is 
gl_MaxTransformFeedbackInterleavedComponents is %d
gl_MaxViewports
gl_MeshPerPrimitiveNV
gl_MeshPerVertexNV
gl_MeshPrimitivesNV
gl_MeshVerticesNV
gl_MeshViewCountNV
gl_MeshViewIndicesNV
gl_MinProgramTexelOffset
[gl_MinProgramTexelOffset, gl_MaxProgramTexelOffset]
gl_MultiTexCoord0
gl_MultiTexCoord1
gl_MultiTexCoord2
gl_MultiTexCoord3
gl_MultiTexCoord4
gl_MultiTexCoord5
gl_MultiTexCoord6
gl_MultiTexCoord7
gl_Normal
gl_NumSamples
gl_NumSubgroups
gl_NumWorkGroups
GL_NV_compute_shader_derivatives
GL_NV_conservative_raster_underestimation
GL_NV_cooperative_matrix
GL_NV_fragment_shader_barycentric
GL_NV_geometry_shader_passthrough
GL_NV_integer_cooperative_matrix
GL_NV_ray_tracing
GL_NV_sample_mask_override_coverage
GL_NV_shader_atomic_int64
GL_NV_shader_noperspective_interpolation
GL_NV_shader_sm_builtins
GL_NV_shader_subgroup_partitioned
GL_NV_shader_texture_footprint
GL_NV_shading_rate_image
GL_NV_stereo_view_rendering
GL_NV_viewport_array2
GL_NVX_multiview_per_view_attributes
global
$Global
global binding
global_cbuffer_binding
global const initializers must be constant
GlobalInvocationId
GlobalLinearId
globallycoherent
GlobalOffset
GlobalSize
global storage input qualifier cannot be used in a compute shader
global storage output qualifier cannot be used in a compute shader
gl_ObjectRayDirectionNV
gl_ObjectRayOriginNV
gl_ObjectToWorldNV
GL_OES_EGL_image_external
GL_OES_EGL_image_external_essl3
GL_OES_geometry_point_size
GL_OES_geometry_shader
GL_OES_gpu_shader5
GL_OES_primitive_bounding_box
GL_OES_sample_variables
GL_OES_shader_image_atomic
GL_OES_shader_io_blocks
GL_OES_shader_multisample_interpolation
GL_OES_standard_derivatives
GL_OES_tessellation_point_size
GL_OES_tessellation_shader
GL_OES_texture_3D
GL_OES_texture_buffer
GL_OES_texture_cube_map_array
GL_OES_texture_storage_multisample_2d_array
gl_out
} gl_out[];patch out float gl_TessLevelOuter[4];patch out float gl_TessLevelInner[2];
} gl_out[];patch out highp float gl_TessLevelOuter[4];patch out highp float gl_TessLevelInner[2];patch out highp vec4 gl_BoundingBoxOES[2];patch out highp vec4 gl_BoundingBoxEXT[2];
GL_OVR_multiview
GL_OVR_multiview2
gl_PatchVertices
gl_PatchVerticesIn
gl_PerFragment
gl_PerVertex
gl_PointSize
gl_Position
gl_PrimitiveCountNV
gl_PrimitiveID
gl_PrimitiveIDIn
gl_PrimitiveIndicesNV
gl_RayTmaxNV
gl_RayTminNV
gl_SampleID
gl_SampleMask
gl_SampleMaskIn
gl_SamplePosition
gl_ScopeDevice
gl_ScopeInvocation
gl_ScopeSubgroup
gl_ScopeWorkgroup
gl_SecondaryColor
gl_SecondaryPositionNV
gl_SecondaryViewportMaskNV
gl_SemanticsAcquire
gl_SemanticsAcquire must not be used with (image) atomic store
gl_SemanticsAcquireRelease must not be used with (image) atomic load/store
gl_SemanticsMakeAvailable
gl_SemanticsMakeAvailable requires gl_SemanticsRelease or gl_SemanticsAcquireRelease
gl_SemanticsMakeVisible
gl_SemanticsMakeVisible requires gl_SemanticsAcquire or gl_SemanticsAcquireRelease
gl_SemanticsRelaxed
gl_SemanticsRelease
gl_SemanticsRelease must not be used with (image) atomic load
gl_SemanticsVolatile
gl_SemanticsVolatile must not be used with memoryBarrier or controlBarrier
gl_SIMDGroupSizeAMD
GLSL450
glslang_binary_double_output
GLSLPacked
GLSLShared
GLSL.std.450
-glsl_to_spirv
gl_SMCountNV
gl_SMIDNV
gl_StorageSemanticsBuffer
gl_StorageSemanticsImage
gl_StorageSemanticsNone
gl_StorageSemanticsOutput
gl_StorageSemanticsShared
gl_SubgroupEqMask
gl_SubGroupEqMaskARB
gl_SubgroupGeMask
gl_SubGroupGeMaskARB
gl_SubgroupGtMask
gl_SubGroupGtMaskARB
gl_SubgroupID
gl_SubGroupInvocationARB
@gl_SubgroupInvocationID
gl_SubgroupLeMask
gl_SubGroupLeMaskARB
gl_SubgroupLtMask
gl_SubGroupLtMaskARB
@gl_SubgroupSize
gl_SubGroupSizeARB
gl_TaskCountNV
gl_TessCoord
gl_TessLevelInner
gl_TessLevelOuter
gl_TexCoord
gl_TexCoord array size
gl_Vertex
gl_VertexId
gl_VertexIndex
gl_ViewID_OVR
gl_ViewIndex
gl_ViewportIndex
gl_ViewportMask
gl_WarpIDNV
gl_WarpsPerSMNV
gl_WorkGroupID
gl_WorkGroupSize
gl_WorldRayDirectionNV
gl_WorldRayOriginNV
gl_WorldToObjectNV
g_Mathlib_GammaToLinearByteTable
.gnu_debuglink
.gnu.version
.gnu.version_r
Google
Google Clspv
Google MLIR SPIR-V Serializer
Google rspirv
Google Shaderc over Glslang
Google spiregg
.got.plt
g_pMemAlloc
g_pThreadPool
GPU memory available (%d MB of %d MB used). Increasing texture pool size %d MB -> %d MB.
GPU reports %dMB available memory which is too low, using %d MB
Graphics Device changed, resetting video config
graphics-robust-access
gravity
greaterThan
greaterThanEqual
GRendersystem/SheetCacheTextureRows
GroupAll
GroupAny
GroupAsyncCopy
GroupBroadcast
GroupCommitReadPipe
GroupCommitWritePipe
GroupDecorate
GroupFAdd
GroupFAddNonUniformAMD
GroupFMax
GroupFMaxNonUniformAMD
GroupFMin
GroupFMinNonUniformAMD
GroupIAdd
GroupIAddNonUniformAMD
GroupMemoryBarrier
GroupMemoryBarrierWithGroupSync
GroupNonUniform
GroupNonUniformAll
GroupNonUniformAllEqual
GroupNonUniformAny
GroupNonUniformArithmetic
GroupNonUniformBallot
GroupNonUniformBallotBitCount
GroupNonUniformBallotBitExtract
GroupNonUniformBallotFindLSB
GroupNonUniformBallotFindMSB
GroupNonUniformBitwiseAnd
GroupNonUniformBitwiseOr
GroupNonUniformBitwiseXor
GroupNonUniformBroadcast
GroupNonUniformBroadcastFirst
GroupNonUniformClustered
GroupNonUniformElect
GroupNonUniformFAdd
GroupNonUniformFMax
GroupNonUniformFMin
GroupNonUniformFMul
GroupNonUniformIAdd
GroupNonUniformIMul
GroupNonUniformInverseBallot
GroupNonUniformLogicalAnd
GroupNonUniformLogicalOr
GroupNonUniformLogicalXor
GroupNonUniformPartitionedNV
GroupNonUniformPartitionNV
GroupNonUniformQuad
GroupNonUniformQuadBroadcast
GroupNonUniformQuadSwap
GroupNonUniformShuffle
GroupNonUniformShuffleDown
GroupNonUniformShuffleRelative
GroupNonUniformShuffleUp
GroupNonUniformShuffleXor
GroupNonUniformSMax
GroupNonUniformSMin
GroupNonUniformUMax
GroupNonUniformUMin
GroupNonUniformVote
group operation
GroupReserveReadPipePackets
GroupReserveWritePipePackets
groupshared
GroupSMax
GroupSMaxNonUniformAMD
GroupSMin
GroupSMinNonUniformAMD
GroupUMax
GroupUMaxNonUniformAMD
GroupUMin
GroupUMinNonUniformAMD
GroupWaitEvents
gs_4_0
gs_4_1
gs_5_0
g_Tier1_BitWriteMasks
__gxx_personality_v0
g@yRz
	)	)h
h&@)?
H)!	@
H0@)i
h1xnj 
H6c"J9
h6hf@
#-)h7@
h78abB
`h`8@
 h"8`
"*"h 8
"h$8	
@h`8 
$h)8)
&h 8	
&h$8	
h`8 $
?h88a
 H`8a
h!8`>B
h$8`:B
h`8ch`8$h`8
h$8d:B
	h(8h
h`8%h`8
h#8Jh#8
h*@9(
h&@9(
H9(-@
H`@94A
?h98a
h.@9h
h.@9H
h"@9iZ@
h"A9(
h"A9)
h"A9a
hA@9I
half1
half1x1
half1x2
half1x3
half1x4
half2
half2x1
half2x2
half2x3
half2x4
half3
half3x1
half3x2
half3x3
half3x4
half4
half4x1
half4x2
half4x3
half4x4
halfBitsToInt16
halfBitsToUint16
half_cos
half_divide
half_exp
half_exp10
half_exp2
HalfFloat
half float image
half floating-point suffix
half float literal
half float matrix
half float sampler
half float subpass input
half float texture
half float vector
half_log
half_log10
half_log2
half_powr
half_recip
half_rsqrt
half_sin
half_sqrt
half_tan
HammerMapLoader001
handindex
HangWatchdogInternal_BeginScope
HangWatchdogInternal_EndScope
' has 
' has a consumer in a different basic block. The consumer instruction <id> is '
', has a disallowed initializer & storage class 
 has already been used to generate a type
 has bit width 
 has branches to multiple other case construct targets 
 has branches to the case construct that targets 
 has components with bit width 
) has exceeded the limit (
.hash
Hash: %llu
' has illegal type.
 has invalid branch to block 
 has invalid mask component 
 has not been defined
 has no type
has storage class StorageBuffer.
Having 
H(Ay	M
!Hb8b
hb8bF
hb@9`
hb@9h
hb@9H
hB@9h
hB@9i
hB@9t
hb@9w
hBA9)
hbA9h
hBA9h
hbC9(
hbC9h
hbC9H
*hbC9H
hBE9h
hBE9j
hBg9)
hBH9h
hBI9H%
h&B)@Q
hB@yh&
hc87hd89hc88hb8
hc8#h 8
h"C9?
HC@9)E
hC@9H
hcC9(
HcC9(
hcC9H
*hcC9H
HcC9h
HcC9H
HcOy@
hd8% 
hd8%,
hd8%(
hd8%$
hd8%0
hd8%4
hd8!8
hd8ghg8
 hd8`h`8 h$8
hd8ihi8
h"D9(
h"D9h
h"D9H
!hdx?
=h'E)
 headed by <ID> 
HEADER
header crc mismatch
header name too long
Header size does not contain enough data in pipeline cache file %s.  Deleting.
headtype
health
health_override
, height = 
helperInvocationEXT
HelpSystem_001
hexadecimal literal too big
hexadecimal literal too long
=hf@9
hf@9a*
hf@9A
hf@9h
hf@9H
hf@9i
h"F9i
hfC9H
hFD9u
h"G9i
$hh8Chh8
*h&I)
HIGHDPI
highp 
highp float gl_FragDepthEXT;
highp float near;highp float far;highp float diff;
highp int
highp ivec2 textureSize(__samplerExternal2DY2YEXT, int lod);vec4 texture(__samplerExternal2DY2YEXT, vec2);vec4 texture(__samplerExternal2DY2YEXT, vec2, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec3);vec4 textureProj(__samplerExternal2DY2YEXT, vec3, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec4);vec4 textureProj(__samplerExternal2DY2YEXT, vec4, float bias);vec4 texelFetch(__samplerExternal2DY2YEXT sampler, ivec2, int lod);
highp ivec2 textureSize(samplerExternalOES, int lod);vec4 texture(samplerExternalOES, vec2);vec4 texture(samplerExternalOES, vec2, float bias);vec4 textureProj(samplerExternalOES, vec3);vec4 textureProj(samplerExternalOES, vec3, float bias);vec4 textureProj(samplerExternalOES, vec4);vec4 textureProj(samplerExternalOES, vec4, float bias);vec4 texelFetch(samplerExternalOES, ivec2, int lod);
highp precision qualifier
HIGH_PRECISION
highp uint
highp uint packSnorm2x16(vec2);      vec2 unpackSnorm2x16(highp uint);highp uint packHalf2x16(vec2);
highp uint packSnorm4x8(vec4);highp uint packUnorm4x8(vec4);
highp uint packUnorm2x16(vec2);vec2 unpackUnorm2x16(highp uint);
highp   vec4  gl_FragCoord;        bool  gl_FrontFacing;mediump vec2  gl_PointCoord;highp   float gl_FragDepth;
highp vec4  gl_Position;highp float gl_PointSize;
highp   vec4  gl_Position;mediump float gl_PointSize;
Hih8,
Hih8?
Hih81
Hih8h
Hih8R
hihxi
hitAttributeNV
HitAttributeNV
hitAttributeNV block
HITATTRNV
Hitch alert: Present was waiting for %d iterations and %.1f seconds.
h&?)j
H%@)J	@
hj8."@
hJ@9h
hjh8{
hjj8)1C
hJL9	
h'@)jS@
*hjt8
hjt8U
	H*k	
HlslCounterBufferGOOGLE
hlsl-iomap
hlsl-offsets
, HLSL parsing failed.
HlslSemanticGOOGLE
hn8c|
HookUpTextureBits
HostStateMgr001
hr1yI
h"R9h
=hrCy
hrqy`Z
hr@y`
hs_5_0
Huffman code size table overflow
Huffman table 0x%02x was not defined
Hull Shader
hurt_me
hurt_them
hvCy(
hvec2
hvec3
hvec4
H{vxH
hv@y	
hv@y7
*h&X)
h*@y_
h!@yIA@y(}
H%@yJ
hypot
*I))}@
&I)(}
	*I}`
I16VEC2
I16VEC3
I16VEC4
i1xhj*
i1xhj+
i1xjj,
i32vec2
I32VEC2
i32vec3
I32VEC3
i32vec4
I32VEC4
I64VEC2
I64VEC3
I64VEC4
i6xh&@
i6@yh
(i;8{
i;8f/
+i*8h
^i~8H
i(8hilxi*
i)8i&
i*8?i,x
?i(8?i*x?i+
I8VEC2
I8VEC3
I8VEC4
i8xh>@yu:
i9xh*@
IAddCarry
IAddSatINTEL
IAverageINTEL
IAverageRoundedINTEL
iB_8b
ib@9`
ib@9(
ib@9)
ib@9i
iB@9i
ib@9l
ibA9J
IB: %d buffers, %.2f MB
*ibE9
ibE9I
IB)Mki
*** IB "%s": Tried to lock a GPU-only buffer!
*** IB "%s": Tried to lock a non integral number of indices!
*** IB "%s": Tried to lock a static buffer twice!
*** IB "%s": Tried to lock too much memory (%d>%d)!
*** IB "%s": Tried to lock too much memory for subregion (%d>%d)!
*** IB "%s": Tried to lock twice without an unlock!
*** IB "%s": Wrote a non integral number of indices!
i.Bx?
i"By?
iB@y(
ic8)Q
ic@9k
icoopmatNV
ICOOPMATNV
icoopmatNV coopMatMulAddNV(icoopmatNV A, icoopmatNV B, icoopmatNV C);
I CUtlLinkedList<BlendStateVulkan_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<BlendStateVulkan_t, long long> > >::AllocInternal(bool) [T = BlendStateVulkan_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<BlendStateVulkan_t, long long> >]
I CUtlLinkedList<CDescriptorSetVulkan *, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<CDescriptorSetVulkan *, long long> > >::AllocInternal(bool) [T = CDescriptorSetVulkan *, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<CDescriptorSetVulkan *, long long> >]
I CUtlLinkedList<CMemoryManagerVulkan::FencedResourceList_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMemoryManagerVulkan::FencedResourceList_t, unsigned short>, unsigned short> >::AllocInternal(bool) [T = CMemoryManagerVulkan::FencedResourceList_t, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CMemoryManagerVulkan::FencedResourceList_t, unsigned short>, unsigned short>]
I CUtlLinkedList<CMemoryRefTracker::VulkanBufferToFree_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMemoryRefTracker::VulkanBufferToFree_t, unsigned short>, unsigned short> >::AllocInternal(bool) [T = CMemoryRefTracker::VulkanBufferToFree_t, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CMemoryRefTracker::VulkanBufferToFree_t, unsigned short>, unsigned short>]
I CUtlLinkedList<COcclusionQueryMgr::OcclusionQueryObject_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> > >::AllocInternal(bool) [T = COcclusionQueryMgr::OcclusionQueryObject_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> >]
I CUtlLinkedList<CRenderThreadVulkan::PresentFenceVulkan_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRenderThreadVulkan::PresentFenceVulkan_t, unsigned short>, unsigned short> >::AllocInternal(bool) [T = CRenderThreadVulkan::PresentFenceVulkan_t, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CRenderThreadVulkan::PresentFenceVulkan_t, unsigned short>, unsigned short>]
I CUtlLinkedList<CRenderThreadVulkan::SemaphoreFenceVulkan_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRenderThreadVulkan::SemaphoreFenceVulkan_t, unsigned short>, unsigned short> >::AllocInternal(bool) [T = CRenderThreadVulkan::SemaphoreFenceVulkan_t, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CRenderThreadVulkan::SemaphoreFenceVulkan_t, unsigned short>, unsigned short>]
I CUtlLinkedList<CRenderThreadVulkan::VulkanQueuedCommandBuffer_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRenderThreadVulkan::VulkanQueuedCommandBuffer_t, unsigned short>, unsigned short> >::AllocInternal(bool) [T = CRenderThreadVulkan::VulkanQueuedCommandBuffer_t, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CRenderThreadVulkan::VulkanQueuedCommandBuffer_t, unsigned short>, unsigned short>]
I CUtlLinkedList<CShaderVulkanBase, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<CShaderVulkanBase, long long> > >::AllocInternal(bool) [T = CShaderVulkanBase, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<CShaderVulkanBase, long long> >]
I CUtlLinkedList<CSwapChainBase *, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> > >::AllocInternal(bool) [T = CSwapChainBase *, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> >]
I CUtlLinkedList<CUtlKeyValuePair<unsigned long long, CShaderTableVulkan::RefCountedShaderFile_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<unsigned long long, CShaderTableVulkan::RefCountedShaderFile_t>, unsigned short>, unsigned short> >::AllocInternal(bool) [T = CUtlKeyValuePair<unsigned long long, CShaderTableVulkan::RefCountedShaderFile_t>, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<unsigned long long, CShaderTableVulkan::RefCountedShaderFile_t>, unsigned short>, unsigned short>]
I CUtlLinkedList<CUtlKeyValuePair<unsigned long long, CShaderTableVulkan::RefCountedShaderModule_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<unsigned long long, CShaderTableVulkan::RefCountedShaderModule_t>, unsigned short>, unsigned short> >::AllocInternal(bool) [T = CUtlKeyValuePair<unsigned long long, CShaderTableVulkan::RefCountedShaderModule_t>, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<unsigned long long, CShaderTableVulkan::RefCountedShaderModule_t>, unsigned short>, unsigned short>]
I CUtlLinkedList<CVertexShaderVulkan, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<CVertexShaderVulkan, long long> > >::AllocInternal(bool) [T = CVertexShaderVulkan, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<CVertexShaderVulkan, long long> >]
I CUtlLinkedList<CVfxByteCodeManager::DynamicComboInfo_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CVfxByteCodeManager::DynamicComboInfo_t, int>, int> >::AllocInternal(bool) [T = CVfxByteCodeManager::DynamicComboInfo_t, S = int, ML = false, I = int, M = CUtlMemory<UtlLinkedListElem_t<CVfxByteCodeManager::DynamicComboInfo_t, int>, int>]
I CUtlLinkedList<DepthStencilStateVulkan_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateVulkan_t, long long> > >::AllocInternal(bool) [T = DepthStencilStateVulkan_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateVulkan_t, long long> >]
I CUtlLinkedList<PipelineCreateInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<PipelineCreateInfo_t, unsigned short>, unsigned short> >::AllocInternal(bool) [T = PipelineCreateInfo_t, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<PipelineCreateInfo_t, unsigned short>, unsigned short>]
I CUtlLinkedList<PipelineObjectVulkan_t *, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<PipelineObjectVulkan_t *, unsigned short>, unsigned short> >::AllocInternal(bool) [T = PipelineObjectVulkan_t *, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<PipelineObjectVulkan_t *, unsigned short>, unsigned short>]
I CUtlLinkedList<QueryObjectInternalVulkan_t *, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<QueryObjectInternalVulkan_t *, unsigned short>, unsigned short> >::AllocInternal(bool) [T = QueryObjectInternalVulkan_t *, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<QueryObjectInternalVulkan_t *, unsigned short>, unsigned short>]
I CUtlLinkedList<RasterizerStateVulkan_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateVulkan_t, long long> > >::AllocInternal(bool) [T = RasterizerStateVulkan_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateVulkan_t, long long> >]
I CUtlLinkedList<unsigned short, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::AllocInternal(bool) [T = unsigned short, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short>]
I CUtlLinkedList<VkDeviceMemory_T *, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VkDeviceMemory_T *, unsigned short>, unsigned short> >::AllocInternal(bool) [T = VkDeviceMemory_T *, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<VkDeviceMemory_T *, unsigned short>, unsigned short>]
I CUtlLinkedList<VkSampler_T *, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<VkSampler_T *, long long> > >::AllocInternal(bool) [T = VkSampler_T *, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<VkSampler_T *, long long> >]
I CUtlLinkedList<VulkanCommandBufferAndPool_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<VulkanCommandBufferAndPool_t, long long> > >::AllocInternal(bool) [T = VulkanCommandBufferAndPool_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<VulkanCommandBufferAndPool_t, long long> >]
I CUtlLinkedList<VulkanDescriptorSetPool_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<VulkanDescriptorSetPool_t, long long> > >::AllocInternal(bool) [T = VulkanDescriptorSetPool_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<VulkanDescriptorSetPool_t, long long> >]
I CUtlLinkedList<VulkanMemoryPoolAllocationInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VulkanMemoryPoolAllocationInfo_t, unsigned short>, unsigned short> >::AllocInternal(bool) [T = VulkanMemoryPoolAllocationInfo_t, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<VulkanMemoryPoolAllocationInfo_t, unsigned short>, unsigned short>]
I CUtlLinkedList<VulkanMemoryPool_t *, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<VulkanMemoryPool_t *, long long> > >::AllocInternal(bool) [T = VulkanMemoryPool_t *, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<VulkanMemoryPool_t *, long long> >]
I CUtlLinkedList<VulkanMemoryPool_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VulkanMemoryPool_t, unsigned short>, unsigned short> >::AllocInternal(bool) [T = VulkanMemoryPool_t, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<VulkanMemoryPool_t, unsigned short>, unsigned short>]
I CUtlLinkedList<VulkanQueryPool_t *, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VulkanQueryPool_t *, unsigned short>, unsigned short> >::AllocInternal(bool) [T = VulkanQueryPool_t *, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<VulkanQueryPool_t *, unsigned short>, unsigned short>]
I CUtlLinkedList<VulkanQuery_t *, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VulkanQuery_t *, unsigned short>, unsigned short> >::AllocInternal(bool) [T = VulkanQuery_t *, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<VulkanQuery_t *, unsigned short>, unsigned short>]
I CUtlLinkedList<VulkanSemaphore_t *, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VulkanSemaphore_t *, unsigned short>, unsigned short> >::AllocInternal(bool) [T = VulkanSemaphore_t *, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<VulkanSemaphore_t *, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<CRenderPassDesc, CRenderPassVulkan *, unsigned short, bool (*)(const CRenderPassDesc &, const CRenderPassDesc &)>::Node_t, unsigned short, CUtlMap<CRenderPassDesc, CRenderPassVulkan *, unsigned short, bool (*)(const CRenderPassDesc &, const CRenderPassDesc &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CRenderPassDesc, CRenderPassVulkan *, unsigned short, bool (*)(const CRenderPassDesc &, const CRenderPassDesc &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<CRenderPassDesc, CRenderPassVulkan *, unsigned short, bool (*)(const CRenderPassDesc &, const CRenderPassDesc &)>::Node_t, I = unsigned short, L = CUtlMap<CRenderPassDesc, CRenderPassVulkan *, unsigned short, bool (*)(const CRenderPassDesc &, const CRenderPassDesc &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CRenderPassDesc, CRenderPassVulkan *, unsigned short, bool (*)(const CRenderPassDesc &, const CRenderPassDesc &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<CVfxHashValue, int, int, bool (*)(const CVfxHashValue &, const CVfxHashValue &)>::Node_t, int, CUtlMap<CVfxHashValue, int, int, bool (*)(const CVfxHashValue &, const CVfxHashValue &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CVfxHashValue, int, int, bool (*)(const CVfxHashValue &, const CVfxHashValue &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<CVfxHashValue, int, int, bool (*)(const CVfxHashValue &, const CVfxHashValue &)>::Node_t, I = int, L = CUtlMap<CVfxHashValue, int, int, bool (*)(const CVfxHashValue &, const CVfxHashValue &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CVfxHashValue, int, int, bool (*)(const CVfxHashValue &, const CVfxHashValue &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<CWeakHandle<InfoForResourceTypeCTextureBase>, CUtlHashtable<CDescriptorSetVulkan *, empty_t, DefaultHashFunctor<CDescriptorSetVulkan *>, DefaultEqualFunctor<CDescriptorSetVulkan *>, undefined_t, CUtlMemory<CUtlHashtableEntry<CDescriptorSetVulkan *, empty_t>, int> > *, unsigned short, bool (*)(const CWeakHandle<InfoForResourceTypeCTextureBase> &, const CWeakHandle<InfoForResourceTypeCTextureBase> &)>::Node_t, unsigned short, CUtlMap<CWeakHandle<InfoForResourceTypeCTextureBase>, CUtlHashtable<CDescriptorSetVulkan *, empty_t, DefaultHashFunctor<CDescriptorSetVulkan *>, DefaultEqualFunctor<CDescriptorSetVulkan *>, undefined_t, CUtlMemory<CUtlHashtableEntry<CDescriptorSetVulkan *, empty_t>, int> > *, unsigned short, bool (*)(const CWeakHandle<InfoForResourceTypeCTextureBase> &, const CWeakHandle<InfoForResourceTypeCTextureBase> &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CWeakHandle<InfoForResourceTypeCTextureBase>, CUtlHashtable<CDescriptorSetVulkan *, empty_t, DefaultHashFunctor<CDescriptorSetVulkan *>, DefaultEqualFunctor<CDescriptorSetVulkan *>, undefined_t, CUtlMemory<CUtlHashtableEntry<CDescriptorSetVulkan *, empty_t>, int> > *, unsigned short, bool (*)(const CWeakHandle<InfoForResourceTypeCTextureBase> &, const CWeakHandle<InfoForResourceTypeCTextureBase> &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<CWeakHandle<InfoForResourceTypeCTextureBase>, CUtlHashtable<CDescriptorSetVulkan *, empty_t, DefaultHashFunctor<CDescriptorSetVulkan *>, DefaultEqualFunctor<CDescriptorSetVulkan *>, undefined_t, CUtlMemory<CUtlHashtableEntry<CDescriptorSetVulkan *, empty_t>, int> > *, unsigned short, bool (*)(const CWeakHandle<InfoForResourceTypeCTextureBase> &, const CWeakHandle<InfoForResourceTypeCTextureBase> &)>::Node_t, I = unsigned short, L = CUtlMap<CWeakHandle<InfoForResourceTypeCTextureBase>, CUtlHashtable<CDescriptorSetVulkan *, empty_t, DefaultHashFunctor<CDescriptorSetVulkan *>, DefaultEqualFunctor<CDescriptorSetVulkan *>, undefined_t, CUtlMemory<CUtlHashtableEntry<CDescriptorSetVulkan *, empty_t>, int> > *, unsigned short, bool (*)(const CWeakHandle<InfoForResourceTypeCTextureBase> &, const CWeakHandle<InfoForResourceTypeCTextureBase> &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CWeakHandle<InfoForResourceTypeCTextureBase>, CUtlHashtable<CDescriptorSetVulkan *, empty_t, DefaultHashFunctor<CDescriptorSetVulkan *>, DefaultEqualFunctor<CDescriptorSetVulkan *>, undefined_t, CUtlMemory<CUtlHashtableEntry<CDescriptorSetVulkan *, empty_t>, int> > *, unsigned short, bool (*)(const CWeakHandle<InfoForResourceTypeCTextureBase> &, const CWeakHandle<InfoForResourceTypeCTextureBase> &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<CWeakHandle<InfoForResourceTypeCTextureBase>, VulkanDeviceSpecificTexture_t, unsigned short, bool (*)(const CWeakHandle<InfoForResourceTypeCTextureBase> &, const CWeakHandle<InfoForResourceTypeCTextureBase> &)>::Node_t, unsigned short, CUtlMap<CWeakHandle<InfoForResourceTypeCTextureBase>, VulkanDeviceSpecificTexture_t, unsigned short, bool (*)(const CWeakHandle<InfoForResourceTypeCTextureBase> &, const CWeakHandle<InfoForResourceTypeCTextureBase> &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CWeakHandle<InfoForResourceTypeCTextureBase>, VulkanDeviceSpecificTexture_t, unsigned short, bool (*)(const CWeakHandle<InfoForResourceTypeCTextureBase> &, const CWeakHandle<InfoForResourceTypeCTextureBase> &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<CWeakHandle<InfoForResourceTypeCTextureBase>, VulkanDeviceSpecificTexture_t, unsigned short, bool (*)(const CWeakHandle<InfoForResourceTypeCTextureBase> &, const CWeakHandle<InfoForResourceTypeCTextureBase> &)>::Node_t, I = unsigned short, L = CUtlMap<CWeakHandle<InfoForResourceTypeCTextureBase>, VulkanDeviceSpecificTexture_t, unsigned short, bool (*)(const CWeakHandle<InfoForResourceTypeCTextureBase> &, const CWeakHandle<InfoForResourceTypeCTextureBase> &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CWeakHandle<InfoForResourceTypeCTextureBase>, VulkanDeviceSpecificTexture_t, unsigned short, bool (*)(const CWeakHandle<InfoForResourceTypeCTextureBase> &, const CWeakHandle<InfoForResourceTypeCTextureBase> &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned int, BindInfo_t, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int, CUtlMap<unsigned int, BindInfo_t, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, BindInfo_t, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<unsigned int, BindInfo_t, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = int, L = CUtlMap<unsigned int, BindInfo_t, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, BindInfo_t, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<unsigned int, int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int, CUtlMap<unsigned int, int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<unsigned int, int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = int, L = CUtlMap<unsigned int, int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int, CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = int, L = CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<unsigned int, unsigned int, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, unsigned int, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<unsigned int, unsigned int, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, unsigned int, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned long long, bool, unsigned int, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned int, CUtlMap<unsigned long long, bool, unsigned int, bool (*)(const unsigned long long &, const unsigned long long &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, bool, unsigned int, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned int>, unsigned int> >::NewNode(const T *) [T = CUtlMap<unsigned long long, bool, unsigned int, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, I = unsigned int, L = CUtlMap<unsigned long long, bool, unsigned int, bool (*)(const unsigned long long &, const unsigned long long &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, bool, unsigned int, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned int>, unsigned int>]
I CUtlRBTree<CUtlMap<unsigned long long, CommandBufferPool_t *, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned short, CUtlMap<unsigned long long, CommandBufferPool_t *, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CommandBufferPool_t *, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<unsigned long long, CommandBufferPool_t *, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned long long, CommandBufferPool_t *, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CommandBufferPool_t *, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned long long, CUtlLinkedList<VulkanMemoryPool_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VulkanMemoryPool_t, unsigned short>, unsigned short> > *, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned short, CUtlMap<unsigned long long, CUtlLinkedList<VulkanMemoryPool_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VulkanMemoryPool_t, unsigned short>, unsigned short> > *, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CUtlLinkedList<VulkanMemoryPool_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VulkanMemoryPool_t, unsigned short>, unsigned short> > *, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<unsigned long long, CUtlLinkedList<VulkanMemoryPool_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VulkanMemoryPool_t, unsigned short>, unsigned short> > *, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned long long, CUtlLinkedList<VulkanMemoryPool_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VulkanMemoryPool_t, unsigned short>, unsigned short> > *, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CUtlLinkedList<VulkanMemoryPool_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VulkanMemoryPool_t, unsigned short>, unsigned short> > *, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned long long, CVfxByteCodeManager::StaticComboInfo_t *, int, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, int, CUtlMap<unsigned long long, CVfxByteCodeManager::StaticComboInfo_t *, int, bool (*)(const unsigned long long &, const unsigned long long &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CVfxByteCodeManager::StaticComboInfo_t *, int, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<unsigned long long, CVfxByteCodeManager::StaticComboInfo_t *, int, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, I = int, L = CUtlMap<unsigned long long, CVfxByteCodeManager::StaticComboInfo_t *, int, bool (*)(const unsigned long long &, const unsigned long long &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, CVfxByteCodeManager::StaticComboInfo_t *, int, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<unsigned long long, VkCommandPool_T **, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned short, CUtlMap<unsigned long long, VkCommandPool_T **, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, VkCommandPool_T **, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<unsigned long long, VkCommandPool_T **, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned long long, VkCommandPool_T **, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, VkCommandPool_T **, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned long long, VulkanMemoryPool_t, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned short, CUtlMap<unsigned long long, VulkanMemoryPool_t, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, VulkanMemoryPool_t, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<unsigned long long, VulkanMemoryPool_t, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned long long, VulkanMemoryPool_t, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, VulkanMemoryPool_t, unsigned short, bool (*)(const unsigned long long &, const unsigned long long &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<void *, int, bool (*)(void *const &, void *const &), CUtlMemory<UtlRBTreeNode_t<void *, int>, int> >::NewNode(const T *) [T = void *, I = int, L = bool (*)(void *const &, void *const &), M = CUtlMemory<UtlRBTreeNode_t<void *, int>, int>]
)icx_
)icx?
 id: 
, id(
' id <
 Id <
, ID 
$Id8g
id8$h 8
identical
IDENTIFIER
identifier after ::
identifier_list
identifier not previously declared
identifiers containing consecutive underscores ("__") are reserved
identifiers containing consecutive underscores ("__") are reserved, and an error if version <= 300
identifiers starting with "gl_" are reserved
ID overflow. Try running compact-ids.
)idx?
)idx9
%ie8E
i"E)j.P)l>@
IEqual
!if8D
&if8F
if-conversion
#ifdef
#if/#ifdef/#ifndef
if it has storage class Uniform.
If OpTypeBool is stored in conjunction with OpVariable, it 
*ig8)
'ig8S
-ignoredxsupportcfg
ignoreIntersectionNV
IgnoreIntersectionNV
Ignoring attempt to set cHRM RGB triangle with zero area
Ignoring attempt to set negative chromaticity value
Ignoring cHRM chunk with negative chromaticities
Ignoring gAMA chunk with out of range gamma
Ignoring iCCP chunk with declared size = @1 and actual length = @2
Ignoring incorrect cHRM value when sRGB is also present
Ignoring incorrect cHRM white(@1,@2) r(@3,@4)g(@5,@6)b(@7,@8) when sRGB is also present
Ignoring incorrect gAMA value @1 when sRGB is also present
Ignoring invalid time value
Ignoring nonzero compression type in iCCP chunk
ignoring out of range rgb_to_gray coefficients
Ignoring PLTE chunk in grayscale PNG
ignoring shader_profile
ignoring unrecognized register type
(ih8h
,ih8k
,ih8l
)ihxAyi
	ii8(&
	ii8	
ii8	a
ii8Fhi8
ii8#hi8
Iii8?)
Iii8*
%i %i %i %i
IilxJimx
iimage1D
IIMAGE1D
iimage1DArray
IIMAGE1DARRAY
iimage2D
IIMAGE2D
iimage2DArray
IIMAGE2DARRAY
iimage2DMS
IIMAGE2DMS
iimage2DMSArray
IIMAGE2DMSARRAY
iimage2DRect
IIMAGE2DRECT
iimage3D
IIMAGE3D
iimageBuffer
IIMAGEBUFFER
iimageCube
IIMAGECUBE
iimageCubeArray
IIMAGECUBEARRAY
ii*x	
Ii+x!
	iix?!6k
	iix?!6k`
	iix?!7k
	iix?!8k
	iix?!8k 
	iix?!9k
	iixh
	iix?!<k
	iix?!;k
	iix?!:k
i"@)j
)ij8?
)ij8	
*ij(8,
ij8(	
<)ij8j&
*ij8j
-ij8J
ij8kI
)ijx?
*ijx_
ijx6yh
*+ijxk
*ijx_!(k
ijx(yh
ijxzyj
Ik68b
)ik8	
)ik8Jil8L
ik8KE*
IKChain
IKChainOld
ikdata
IKData
ikh8?
ikrig
IKRigBiped
IKRigBug
IKRigSimple
ikv8i
)ikxJilxL
ikxm5
ikxXyk
+I)L}
,il8H
Illegal number of components (
Illegal to have non-comment, non-whitespace tokens before #version
illegal use of escape character
illegal use of type 'void'
ilogb
*** IL "%s": Unable to create input layout; layout has %d fields, which is more than %d!
)ilxj%@
Image1D
imageAtomic
imageAtomicAdd
 imageAtomicAdd(volatile coherent 
imageAtomicAnd
 imageAtomicAnd(volatile coherent 
imageAtomicCompSwap
 imageAtomicCompSwap(volatile coherent 
imageAtomicExchange
imageAtomicLoad
 imageAtomicLoad(volatile coherent 
imageAtomicMax
 imageAtomicMax(volatile coherent 
imageAtomicMin
 imageAtomicMin(volatile coherent 
imageAtomicOr
 imageAtomicOr(volatile coherent 
imageAtomicStore
imageAtomicXor
 imageAtomicXor(volatile coherent 
ImageBasic
ImageBuffer
image channel data type
image channel order
ImageCubeArray
Image data size is zero or too large: width = 
Image 'Dim' cannot be SubpassData
Image 'Dim' must be 1D, 2D, 3D or Cube
Image 'Dim' must be 1D, Buffer, 2D, Cube, 3D or Rect
Image 'Dim' must be 2D
Image Dim SubpassData cannot be used with ImageSparseRead
Image Dim SubpassData cannot be used with OpImageTexelPointer
ImageFootprintNV
image formats must match
ImageGather
ImageGatherBiasLodAMD
ImageGatherExtended
Image height exceeds user limit in IHDR
Image height is zero in IHDR
Image Image 'arrayed' parameter to be 0
Image Image 'MS' parameter to be 0
Image is too high to process with png_read_png()
imageLoad
imageLoadLod
imageLoadLodAMD
image load store
image load-store format
ImageMipmap
ImageMSArray
Image 'MS' must be 0
Image 'MS' must be 1
Image must have either 'MS'=1 or 'Sampled'=0 or 'Sampled'=2
Image Operand Bias can only be used with ImplicitLod opcodes
Image Operand Bias requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand Bias requires 'MS' parameter to be 0
Image Operand bits Lod and Grad cannot be set at the same time
Image Operand ConstOffset cannot be used with Cube Image 'Dim'
Image Operand ConstOffsets cannot be used with Cube Image 'Dim'
Image Operand ConstOffsets can only be used with OpImageGather and OpImageDrefGather
Image Operand Grad can only be used with ExplicitLod opcodes
Image Operand Grad requires 'MS' parameter to be 0
Image Operand Lod can only be used with ExplicitLod opcodes 
Image Operand Lod requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand Lod requires 'MS' parameter to be 0
Image Operand MakeTexelAvailableKHR can only be used with Op
Image Operand MakeTexelAvailableKHR requires NonPrivateTexelKHR is also specified: Op
Image Operand MakeTexelVisibleKHR can only be used with Op
Image Operand MakeTexelVisibleKHR requires NonPrivateTexelKHR is also specified: Op
Image Operand MinLod can only be used with ImplicitLod 
Image Operand MinLod requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand MinLod requires 'MS' parameter to be 0
Image Operand Offset cannot be used with Cube Image 'Dim'
Image Operand Sample can only be used with OpImageFetch, 
Image Operand Sample requires non-zero 'MS' parameter
Image Operands Offset, ConstOffset, ConstOffsets cannot be used 
ImageQuery
ImageQueryFormat
ImageQueryLevels
ImageQueryLod
ImageQueryOrder
imageQuerySamples
ImageQuerySamples
imageQuerySize
ImageQuerySize
ImageQuerySizeLod
ImageRead
ImageReadWrite
ImageReadWriteLodAMD
ImageRect
ImageSampleDrefExplicitLod
ImageSampleDrefImplicitLod
ImageSampleExplicitLod
imageSampleFootprintClampNV
imageSampleFootprintGradNV
imageSampleFootprintLodNV
imageSampleFootprintNV
ImageSampleFootprintNV
ImageSampleImplicitLod
ImageSampleProjDrefExplicitLod
ImageSampleProjDrefImplicitLod
ImageSampleProjExplicitLod
ImageSampleProjImplicitLod
imageSamples(readonly writeonly volatile coherent 
imageSize
 imageSize(readonly writeonly volatile coherent 
ImageSparseDrefGather
ImageSparseFetch
ImageSparseGather
ImageSparseSampleDrefExplicitLod
ImageSparseSampleDrefImplicitLod
ImageSparseSampleExplicitLod
ImageSparseSampleImplicitLod
ImageSparseSampleProjDrefExplicitLod
ImageSparseSampleProjDrefImplicitLod
ImageSparseSampleProjExplicitLod
ImageSparseSampleProjImplicitLod
ImageSparseTexelsResident
imageStore
imageStoreLod
imageStoreLodAMD
Image too wide for this implementation
image variables not declared 'writeonly' and without a format layout qualifier
Image width exceeds user limit in IHDR
Image width is zero in IHDR
ImageWrite
Imagination
immediate
immediate sampler state
immutableSamplers
ImplicitLod instructions require DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model: 
ImplicitLod instructions require Fragment or GLCompute execution model: 
Import Id is being defined a second time
Improper call to JPEG library in state %d
IMul32x16INTEL
imulExtended
iMulExtended
imxMym
' in 
i*N)?
In8hIh8jIj8mIm8kIo8nU
in bool gl_FragFullyCoveredNV;
InBoundsAccessChain
InBoundsPtrAccessChain
#include
#include is NULL 
inclusive-or
inclusive_or_expression
IncomingCallableDataNV
IncomingRayPayloadNV
  [INCOMPLETE]
Incomplete compressed datastream
incomplete method syntax
inconsistent input primitive for array size of
inconsistent output array size of
inconsistent output number of vertices for array size of
Inconsistent progression sequence for component %d coefficient %d
INC_OP
Incorrect bKGD chunk index value
Incorrect bKGD chunk length
Incorrect cHRM chunk length
incorrect data check
incorrect directive, expected identifier
Incorrect gAMA chunk length
incorrect header check
Incorrect hIST chunk length
Incorrect IEND chunk length
incorrect length check
Incorrect oFFs chunk length
Incorrect pHYs chunk length
Incorrect primitive topology for bound shader. Shader expects RENDER_PRIM_%d_CONTROL_POINT_PATCHLIST. Rendering will be corrupt.
Incorrect sBIT chunk length
Incorrect sRGB chunk length
Incorrect tIME chunk length
Incorrect tRNS chunk length
Incorrect vpk path delimiter for shader %s
 index=
Index 
indexable
 indexes.
Indexes passed to 
' index is larger than Type <id> '
Index is out of bounds: 
Index is out of bounds, can not find index 
index layout qualifier on fragment output
indirect index
inductive-loop condition requires the form "loop-index <comparison-op> constant-expression"
inductive loop index modified
inductive-loop init-declaration requires the form "type-specifier loop-index = constant-expression"
inductive loop requires a scalar 'int' or 'float' loop index
inductive-loop termination requires the form "loop-index++, loop-index--, loop-index += constant-expression, or loop-index -= constant-expression"
in float gl_ClipDistance[];
in float gl_CullDistance[];bool gl_HelperInvocation;
in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor;
info: 
INFO : 
in for stage inputs
 in function <
in Function or Private storage classes or as function parameters
in gl_PerFragment {in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor;};
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;} gl_in[];
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;highp vec4 gl_SecondaryPositionNV;highp vec4 gl_PositionPerViewNV[];} gl_in[gl_MaxPatchVertices];
in gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
in highp int gl_DeviceIndex;
in highp int gl_DeviceIndex;in highp int gl_ViewIndex;
in highp int gl_DeviceIndex;in int gl_DrawIDARB;
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp int gl_InvocationID;out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp vec3 gl_TessCoord;patch in highp float gl_TessLevelOuter[4];patch in highp float gl_TessLevelInner[2];out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;
in highp int gl_PrimitiveIDIn;in highp int gl_InvocationID;
in highp int gl_VertexID;in highp int gl_InstanceID;
in highp int gl_VertexIndex;in highp int gl_InstanceIndex;
in highp   uint  gl_NumSubgroups;in highp   uint  gl_SubgroupID;
in    highp uvec3 gl_NumWorkGroups;const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;
in int gl_BaseVertexARB;in int gl_BaseInstanceARB;in int gl_DrawIDARB;
in int gl_BaseVertex;in int gl_BaseInstance;in int gl_DrawID;
in int gl_DrawID;
in int gl_InvocationID;
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in int gl_InvocationID;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in vec3 gl_TessCoord;patch in float gl_TessLevelOuter[4];patch in float gl_TessLevelInner[2];out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
in int gl_VertexIndex;in int gl_InstanceIndex;
.init_array
init_declarator_list
InitDevice: vkEnumerateDeviceExtensionProperties( ... , NULL ) failed.
initialized declaration
Initializer
initializer_list
initializer: Output, Private, or Function
initializer requires a variable, not a member
Initializers must match:
Initializer type must match the type pointed to by the Result Type
Initializing new streaming texture manager.
Initializing texture manager.
inline-entry-points-exhaustive
inline-entry-points-opaque
In Logical addressing, variables may not allocate a pointer 
In Logical addressing with variable pointers, variables 
in mediump uint  gl_SubgroupSize;in mediump uint  gl_SubgroupInvocationID;in highp   uvec4 gl_SubgroupEqMask;in highp   uvec4 gl_SubgroupGeMask;in highp   uvec4 gl_SubgroupGtMask;in highp   uvec4 gl_SubgroupLeMask;in highp   uvec4 gl_SubgroupLtMask;in highp   uint  gl_WarpsPerSMNV;in highp   uint  gl_SMCountNV;in highp   uint  gl_WarpIDNV;in highp   uint  gl_SMIDNV;
In OpPhi instruction 
INotEqual
inout
inout 
INOUT
in/out must appear before const
input attachment
InputAttachment
InputAttachmentArrayDynamicIndexing
InputAttachmentArrayDynamicIndexingEXT
InputAttachmentArrayNonUniformIndexing
InputAttachmentArrayNonUniformIndexingEXT
 input_attachment_index=
input_attachment_index
InputAttachmentIndex
input blocks cannot be used in a mesh shader
Input file read error
INPUT_LAYOUT_VARIATION_DEFAULT
INPUT_LAYOUT_VARIATION_MAX
INPUT_LAYOUT_VARIATION_STREAM1_INSTANCEID
INPUT_LAYOUT_VARIATION_STREAM1_INSTANCEID_LIGHTMAP_PARAMS
INPUT_LAYOUT_VARIATION_STREAM1_INSTANCEID_MORPH_VERT_ID
INPUT_LAYOUT_VARIATION_STREAM1_MAT3X4
InputLayoutVariation_t
InputLines
InputLinesAdjacency
InputPatch
InputPoints
input primitive = 
input primitive geometry redefinition
InputService_001
InputStackSystemVersion001
InputSystemVersion001
InputTrianglesAdjacency
InstallChangeCallback called with NULL callback, ignoring!!!
InstallChangeCallback ignoring duplicate change callback!!!
InstallSchemaBindings
instance
inst-bindless-check
inst-buff-addr-check
inst-desc-idx-check
<instruction>
Instruction #
Instruction cannot be used without a variable pointers capability
instruction in its block.
 instruction must be a pointer.
Instruction reserved for future use, use of this instruction 
 instructions require Geometry execution model
Instruction too long: 
Instruction too long: more than 
Insufficient data length.
Insufficient data size.
Insufficient data size for attributes.
Insufficient data size in offset table.
Insufficient header/data size.
Insufficient memory (case %d)
Insufficient memory for hIST chunk data
Insufficient memory for pCAL parameter
Insufficient memory for pCAL params
Insufficient memory for pCAL purpose
Insufficient memory for pCAL units
Insufficient memory to process iCCP chunk
Insufficient memory to process iCCP profile
Insufficient memory to process text chunk
Insufficient memory to store iTXt chunk
Insufficient memory to store text
Insufficient memory to store zTXt chunk
 int;
,int);
#int#
	int2 vSamplePos = ( i.vProjPos.xy + i.vTexCoordScaleOffset.zw );
int32 CVfxProgramData::FindOrAddVsInputSignatureToArray(const CVsInputSignatureVector &)
Int64Atomics
int64_t abs(int64_t);i64vec2 abs(i64vec2);i64vec3 abs(i64vec3);i64vec4 abs(i64vec4);int64_t sign(int64_t);i64vec2 sign(i64vec2);i64vec3 sign(i64vec3);i64vec4 sign(i64vec4);int64_t  min(int64_t,  int64_t);i64vec2  min(i64vec2,  int64_t);i64vec3  min(i64vec3,  int64_t);i64vec4  min(i64vec4,  int64_t);i64vec2  min(i64vec2,  i64vec2);i64vec3  min(i64vec3,  i64vec3);i64vec4  min(i64vec4,  i64vec4);uint64_t min(uint64_t, uint64_t);u64vec2  min(u64vec2,  uint64_t);u64vec3  min(u64vec3,  uint64_t);u64vec4  min(u64vec4,  uint64_t);u64vec2  min(u64vec2,  u64vec2);u64vec3  min(u64vec3,  u64vec3);u64vec4  min(u64vec4,  u64vec4);int64_t  max(int64_t,  int64_t);i64vec2  max(i64vec2,  int64_t);i64vec3  max(i64vec3,  int64_t);i64vec4  max(i64vec4,  int64_t);i64vec2  max(i64vec2,  i64vec2);i64vec3  max(i64vec3,  i64vec3);i64vec4  max(i64vec4,  i64vec4);uint64_t max(uint64_t, uint64_t);u64vec2  max(u64vec2,  uint64_t);u64vec3  max(u64vec3,  uint64_t);u64vec4  max(u64vec4,  uint64_t);u64vec2  max(u64vec2,  u64vec2);u64vec3  max(u64vec3,  u64vec3);u64vec4  max(u64vec4,  u64vec4);int64_t  clamp(int64_t,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  int64_t,  int64_t);i64vec3  clamp(i64vec3,  int64_t,  int64_t);i64vec4  clamp(i64vec4,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  i64vec2,  i64vec2);i64vec3  clamp(i64vec3,  i64vec3,  i64vec3);i64vec4  clamp(i64vec4,  i64vec4,  i64vec4);uint64_t clamp(uint64_t, uint64_t, uint64_t);u64vec2  clamp(u64vec2,  uint64_t, uint64_t);u64vec3  clamp(u64vec3,  uint64_t, uint64_t);u64vec4  clamp(u64vec4,  uint64_t, uint64_t);u64vec2  clamp(u64vec2,  u64vec2,  u64vec2);u64vec3  clamp(u64vec3,  u64vec3,  u64vec3);u64vec4  clamp(u64vec4,  u64vec4,  u64vec4);int64_t  mix(int64_t,  int64_t,  bool);i64vec2  mix(i64vec2,  i64vec2,  bvec2);i64vec3  mix(i64vec3,  i64vec3,  bvec3);i64vec4  mix(i64vec4,  i64vec4,  bvec4);uint64_t mix(uint64_t, uint64_t, bool);u64vec2  mix(u64vec2,  u64vec2,  bvec2);u64vec3  mix(u64vec3,  u64vec3,  bvec3);u64vec4  mix(u64vec4,  u64vec4,  bvec4);int64_t doubleBitsToInt64(double);i64vec2 doubleBitsToInt64(dvec2);i64vec3 doubleBitsToInt64(dvec3);i64vec4 doubleBitsToInt64(dvec4);uint64_t doubleBitsToUint64(double);u64vec2  doubleBitsToUint64(dvec2);u64vec3  doubleBitsToUint64(dvec3);u64vec4  doubleBitsToUint64(dvec4);double int64BitsToDouble(int64_t);dvec2  int64BitsToDouble(i64vec2);dvec3  int64BitsToDouble(i64vec3);dvec4  int64BitsToDouble(i64vec4);double uint64BitsToDouble(uint64_t);dvec2  uint64BitsToDouble(u64vec2);dvec3  uint64BitsToDouble(u64vec3);dvec4  uint64BitsToDouble(u64vec4);int64_t  packInt2x32(ivec2);uint64_t packUint2x32(uvec2);ivec2    unpackInt2x32(int64_t);uvec2    unpackUint2x32(uint64_t);bvec2 lessThan(i64vec2, i64vec2);bvec3 lessThan(i64vec3, i64vec3);bvec4 lessThan(i64vec4, i64vec4);bvec2 lessThan(u64vec2, u64vec2);bvec3 lessThan(u64vec3, u64vec3);bvec4 lessThan(u64vec4, u64vec4);bvec2 lessThanEqual(i64vec2, i64vec2);bvec3 lessThanEqual(i64vec3, i64vec3);bvec4 lessThanEqual(i64vec4, i64vec4);bvec2 lessThanEqual(u64vec2, u64vec2);bvec3 lessThanEqual(u64vec3, u64vec3);bvec4 lessThanEqual(u64vec4, u64vec4);bvec2 greaterThan(i64vec2, i64vec2);bvec3 greaterThan(i64vec3, i64vec3);bvec4 greaterThan(i64vec4, i64vec4);bvec2 greaterThan(u64vec2, u64vec2);bvec3 greaterThan(u64vec3, u64vec3);bvec4 greaterThan(u64vec4, u64vec4);bvec2 greaterThanEqual(i64vec2, i64vec2);bvec3 greaterThanEqual(i64vec3, i64vec3);bvec4 greaterThanEqual(i64vec4, i64vec4);bvec2 greaterThanEqual(u64vec2, u64vec2);bvec3 greaterThanEqual(u64vec3, u64vec3);bvec4 greaterThanEqual(u64vec4, u64vec4);bvec2 equal(i64vec2, i64vec2);bvec3 equal(i64vec3, i64vec3);bvec4 equal(i64vec4, i64vec4);bvec2 equal(u64vec2, u64vec2);bvec3 equal(u64vec3, u64vec3);bvec4 equal(u64vec4, u64vec4);bvec2 notEqual(i64vec2, i64vec2);bvec3 notEqual(i64vec3, i64vec3);bvec4 notEqual(i64vec4, i64vec4);bvec2 notEqual(u64vec2, u64vec2);bvec3 notEqual(u64vec3, u64vec3);bvec4 notEqual(u64vec4, u64vec4);int64_t findLSB(int64_t);i64vec2 findLSB(i64vec2);i64vec3 findLSB(i64vec3);i64vec4 findLSB(i64vec4);int64_t findLSB(uint64_t);i64vec2 findLSB(u64vec2);i64vec3 findLSB(u64vec3);i64vec4 findLSB(u64vec4);int64_t findMSB(int64_t);i64vec2 findMSB(i64vec2);i64vec3 findMSB(i64vec3);i64vec4 findMSB(i64vec4);int64_t findMSB(uint64_t);i64vec2 findMSB(u64vec2);i64vec3 findMSB(u64vec3);i64vec4 findMSB(u64vec4);
int8_t abs(int8_t);i8vec2 abs(i8vec2);i8vec3 abs(i8vec3);i8vec4 abs(i8vec4);int8_t sign(int8_t);i8vec2 sign(i8vec2);i8vec3 sign(i8vec3);i8vec4 sign(i8vec4);int8_t min(int8_t x, int8_t y);i8vec2 min(i8vec2 x, int8_t y);i8vec3 min(i8vec3 x, int8_t y);i8vec4 min(i8vec4 x, int8_t y);i8vec2 min(i8vec2 x, i8vec2 y);i8vec3 min(i8vec3 x, i8vec3 y);i8vec4 min(i8vec4 x, i8vec4 y);uint8_t min(uint8_t x, uint8_t y);u8vec2 min(u8vec2 x, uint8_t y);u8vec3 min(u8vec3 x, uint8_t y);u8vec4 min(u8vec4 x, uint8_t y);u8vec2 min(u8vec2 x, u8vec2 y);u8vec3 min(u8vec3 x, u8vec3 y);u8vec4 min(u8vec4 x, u8vec4 y);int8_t max(int8_t x, int8_t y);i8vec2 max(i8vec2 x, int8_t y);i8vec3 max(i8vec3 x, int8_t y);i8vec4 max(i8vec4 x, int8_t y);i8vec2 max(i8vec2 x, i8vec2 y);i8vec3 max(i8vec3 x, i8vec3 y);i8vec4 max(i8vec4 x, i8vec4 y);uint8_t max(uint8_t x, uint8_t y);u8vec2 max(u8vec2 x, uint8_t y);u8vec3 max(u8vec3 x, uint8_t y);u8vec4 max(u8vec4 x, uint8_t y);u8vec2 max(u8vec2 x, u8vec2 y);u8vec3 max(u8vec3 x, u8vec3 y);u8vec4 max(u8vec4 x, u8vec4 y);int8_t    clamp(int8_t x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, int8_t minVal, int8_t maxVal);i8vec3  clamp(i8vec3  x, int8_t minVal, int8_t maxVal);i8vec4  clamp(i8vec4  x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, i8vec2  minVal, i8vec2  maxVal);i8vec3  clamp(i8vec3  x, i8vec3  minVal, i8vec3  maxVal);i8vec4  clamp(i8vec4  x, i8vec4  minVal, i8vec4  maxVal);uint8_t   clamp(uint8_t x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, uint8_t minVal, uint8_t maxVal);u8vec3  clamp(u8vec3  x, uint8_t minVal, uint8_t maxVal);u8vec4  clamp(u8vec4  x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, u8vec2  minVal, u8vec2  maxVal);u8vec3  clamp(u8vec3  x, u8vec3  minVal, u8vec3  maxVal);u8vec4  clamp(u8vec4  x, u8vec4  minVal, u8vec4  maxVal);int8_t  mix(int8_t,  int8_t,  bool);i8vec2  mix(i8vec2,  i8vec2,  bvec2);i8vec3  mix(i8vec3,  i8vec3,  bvec3);i8vec4  mix(i8vec4,  i8vec4,  bvec4);uint8_t mix(uint8_t, uint8_t, bool);u8vec2  mix(u8vec2,  u8vec2,  bvec2);u8vec3  mix(u8vec3,  u8vec3,  bvec3);u8vec4  mix(u8vec4,  u8vec4,  bvec4);bvec2 lessThan(i8vec2, i8vec2);bvec3 lessThan(i8vec3, i8vec3);bvec4 lessThan(i8vec4, i8vec4);bvec2 lessThan(u8vec2, u8vec2);bvec3 lessThan(u8vec3, u8vec3);bvec4 lessThan(u8vec4, u8vec4);bvec2 lessThanEqual(i8vec2, i8vec2);bvec3 lessThanEqual(i8vec3, i8vec3);bvec4 lessThanEqual(i8vec4, i8vec4);bvec2 lessThanEqual(u8vec2, u8vec2);bvec3 lessThanEqual(u8vec3, u8vec3);bvec4 lessThanEqual(u8vec4, u8vec4);bvec2 greaterThan(i8vec2, i8vec2);bvec3 greaterThan(i8vec3, i8vec3);bvec4 greaterThan(i8vec4, i8vec4);bvec2 greaterThan(u8vec2, u8vec2);bvec3 greaterThan(u8vec3, u8vec3);bvec4 greaterThan(u8vec4, u8vec4);bvec2 greaterThanEqual(i8vec2, i8vec2);bvec3 greaterThanEqual(i8vec3, i8vec3);bvec4 greaterThanEqual(i8vec4, i8vec4);bvec2 greaterThanEqual(u8vec2, u8vec2);bvec3 greaterThanEqual(u8vec3, u8vec3);bvec4 greaterThanEqual(u8vec4, u8vec4);bvec2 equal(i8vec2, i8vec2);bvec3 equal(i8vec3, i8vec3);bvec4 equal(i8vec4, i8vec4);bvec2 equal(u8vec2, u8vec2);bvec3 equal(u8vec3, u8vec3);bvec4 equal(u8vec4, u8vec4);bvec2 notEqual(i8vec2, i8vec2);bvec3 notEqual(i8vec3, i8vec3);bvec4 notEqual(i8vec4, i8vec4);bvec2 notEqual(u8vec2, u8vec2);bvec3 notEqual(u8vec3, u8vec3);bvec4 notEqual(u8vec4, u8vec4);  int8_t bitfieldExtract(  int8_t, int8_t, int8_t);i8vec2 bitfieldExtract(i8vec2, int8_t, int8_t);i8vec3 bitfieldExtract(i8vec3, int8_t, int8_t);i8vec4 bitfieldExtract(i8vec4, int8_t, int8_t); uint8_t bitfieldExtract( uint8_t, int8_t, int8_t);u8vec2 bitfieldExtract(u8vec2, int8_t, int8_t);u8vec3 bitfieldExtract(u8vec3, int8_t, int8_t);u8vec4 bitfieldExtract(u8vec4, int8_t, int8_t);  int8_t bitfieldInsert(  int8_t base,   int8_t, int8_t, int8_t);i8vec2 bitfieldInsert(i8vec2 base, i8vec2, int8_t, int8_t);i8vec3 bitfieldInsert(i8vec3 base, i8vec3, int8_t, int8_t);i8vec4 bitfieldInsert(i8vec4 base, i8vec4, int8_t, int8_t); uint8_t bitfieldInsert( uint8_t base,  uint8_t, int8_t, int8_t);u8vec2 bitfieldInsert(u8vec2 base, u8vec2, int8_t, int8_t);u8vec3 bitfieldInsert(u8vec3 base, u8vec3, int8_t, int8_t);u8vec4 bitfieldInsert(u8vec4 base, u8vec4, int8_t, int8_t);  int8_t bitCount(  int8_t);i8vec2 bitCount(i8vec2);i8vec3 bitCount(i8vec3);i8vec4 bitCount(i8vec4);  int8_t bitCount( uint8_t);i8vec2 bitCount(u8vec2);i8vec3 bitCount(u8vec3);i8vec4 bitCount(u8vec4);  int8_t findLSB(  int8_t);i8vec2 findLSB(i8vec2);i8vec3 findLSB(i8vec3);i8vec4 findLSB(i8vec4);  int8_t findLSB( uint8_t);i8vec2 findLSB(u8vec2);i8vec3 findLSB(u8vec3);i8vec4 findLSB(u8vec4);  int8_t findMSB(  int8_t);i8vec2 findMSB(i8vec2);i8vec3 findMSB(i8vec3);i8vec4 findMSB(i8vec4);  int8_t findMSB( uint8_t);i8vec2 findMSB(u8vec2);i8vec3 findMSB(u8vec3);i8vec4 findMSB(u8vec4);int16_t abs(int16_t);i16vec2 abs(i16vec2);i16vec3 abs(i16vec3);i16vec4 abs(i16vec4);int16_t sign(int16_t);i16vec2 sign(i16vec2);i16vec3 sign(i16vec3);i16vec4 sign(i16vec4);int16_t min(int16_t x, int16_t y);i16vec2 min(i16vec2 x, int16_t y);i16vec3 min(i16vec3 x, int16_t y);i16vec4 min(i16vec4 x, int16_t y);i16vec2 min(i16vec2 x, i16vec2 y);i16vec3 min(i16vec3 x, i16vec3 y);i16vec4 min(i16vec4 x, i16vec4 y);uint16_t min(uint16_t x, uint16_t y);u16vec2 min(u16vec2 x, uint16_t y);u16vec3 min(u16vec3 x, uint16_t y);u16vec4 min(u16vec4 x, uint16_t y);u16vec2 min(u16vec2 x, u16vec2 y);u16vec3 min(u16vec3 x, u16vec3 y);u16vec4 min(u16vec4 x, u16vec4 y);int16_t max(int16_t x, int16_t y);i16vec2 max(i16vec2 x, int16_t y);i16vec3 max(i16vec3 x, int16_t y);i16vec4 max(i16vec4 x, int16_t y);i16vec2 max(i16vec2 x, i16vec2 y);i16vec3 max(i16vec3 x, i16vec3 y);i16vec4 max(i16vec4 x, i16vec4 y);uint16_t max(uint16_t x, uint16_t y);u16vec2 max(u16vec2 x, uint16_t y);u16vec3 max(u16vec3 x, uint16_t y);u16vec4 max(u16vec4 x, uint16_t y);u16vec2 max(u16vec2 x, u16vec2 y);u16vec3 max(u16vec3 x, u16vec3 y);u16vec4 max(u16vec4 x, u16vec4 y);int16_t    clamp(int16_t x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, int16_t minVal, int16_t maxVal);i16vec3  clamp(i16vec3  x, int16_t minVal, int16_t maxVal);i16vec4  clamp(i16vec4  x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, i16vec2  minVal, i16vec2  maxVal);i16vec3  clamp(i16vec3  x, i16vec3  minVal, i16vec3  maxVal);i16vec4  clamp(i16vec4  x, i16vec4  minVal, i16vec4  maxVal);uint16_t   clamp(uint16_t x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, uint16_t minVal, uint16_t maxVal);u16vec3  clamp(u16vec3  x, uint16_t minVal, uint16_t maxVal);u16vec4  clamp(u16vec4  x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, u16vec2  minVal, u16vec2  maxVal);u16vec3  clamp(u16vec3  x, u16vec3  minVal, u16vec3  maxVal);u16vec4  clamp(u16vec4  x, u16vec4  minVal, u16vec4  maxVal);int16_t  mix(int16_t,  int16_t,  bool);i16vec2  mix(i16vec2,  i16vec2,  bvec2);i16vec3  mix(i16vec3,  i16vec3,  bvec3);i16vec4  mix(i16vec4,  i16vec4,  bvec4);uint16_t mix(uint16_t, uint16_t, bool);u16vec2  mix(u16vec2,  u16vec2,  bvec2);u16vec3  mix(u16vec3,  u16vec3,  bvec3);u16vec4  mix(u16vec4,  u16vec4,  bvec4);float16_t frexp(float16_t, out int16_t);f16vec2   frexp(f16vec2,   out i16vec2);f16vec3   frexp(f16vec3,   out i16vec3);f16vec4   frexp(f16vec4,   out i16vec4);float16_t ldexp(float16_t, int16_t);f16vec2   ldexp(f16vec2,   i16vec2);f16vec3   ldexp(f16vec3,   i16vec3);f16vec4   ldexp(f16vec4,   i16vec4);int16_t halfBitsToInt16(float16_t);i16vec2 halfBitsToInt16(f16vec2);i16vec3 halhBitsToInt16(f16vec3);i16vec4 halfBitsToInt16(f16vec4);uint16_t halfBitsToUint16(float16_t);u16vec2  halfBitsToUint16(f16vec2);u16vec3  halfBitsToUint16(f16vec3);u16vec4  halfBitsToUint16(f16vec4);int16_t float16BitsToInt16(float16_t);i16vec2 float16BitsToInt16(f16vec2);i16vec3 float16BitsToInt16(f16vec3);i16vec4 float16BitsToInt16(f16vec4);uint16_t float16BitsToUint16(float16_t);u16vec2  float16BitsToUint16(f16vec2);u16vec3  float16BitsToUint16(f16vec3);u16vec4  float16BitsToUint16(f16vec4);float16_t int16BitsToFloat16(int16_t);f16vec2   int16BitsToFloat16(i16vec2);f16vec3   int16BitsToFloat16(i16vec3);f16vec4   int16BitsToFloat16(i16vec4);float16_t uint16BitsToFloat16(uint16_t);f16vec2   uint16BitsToFloat16(u16vec2);f16vec3   uint16BitsToFloat16(u16vec3);f16vec4   uint16BitsToFloat16(u16vec4);float16_t int16BitsToHalf(int16_t);f16vec2   int16BitsToHalf(i16vec2);f16vec3   int16BitsToHalf(i16vec3);f16vec4   int16BitsToHalf(i16vec4);float16_t uint16BitsToHalf(uint16_t);f16vec2   uint16BitsToHalf(u16vec2);f16vec3   uint16BitsToHalf(u16vec3);f16vec4   uint16BitsToHalf(u16vec4);int      packInt2x16(i16vec2);uint     packUint2x16(u16vec2);int64_t  packInt4x16(i16vec4);uint64_t packUint4x16(u16vec4);i16vec2  unpackInt2x16(int);u16vec2  unpackUint2x16(uint);i16vec4  unpackInt4x16(int64_t);u16vec4  unpackUint4x16(uint64_t);bvec2 lessThan(i16vec2, i16vec2);bvec3 lessThan(i16vec3, i16vec3);bvec4 lessThan(i16vec4, i16vec4);bvec2 lessThan(u16vec2, u16vec2);bvec3 lessThan(u16vec3, u16vec3);bvec4 lessThan(u16vec4, u16vec4);bvec2 lessThanEqual(i16vec2, i16vec2);bvec3 lessThanEqual(i16vec3, i16vec3);bvec4 lessThanEqual(i16vec4, i16vec4);bvec2 lessThanEqual(u16vec2, u16vec2);bvec3 lessThanEqual(u16vec3, u16vec3);bvec4 lessThanEqual(u16vec4, u16vec4);bvec2 greaterThan(i16vec2, i16vec2);bvec3 greaterThan(i16vec3, i16vec3);bvec4 greaterThan(i16vec4, i16vec4);bvec2 greaterThan(u16vec2, u16vec2);bvec3 greaterThan(u16vec3, u16vec3);bvec4 greaterThan(u16vec4, u16vec4);bvec2 greaterThanEqual(i16vec2, i16vec2);bvec3 greaterThanEqual(i16vec3, i16vec3);bvec4 greaterThanEqual(i16vec4, i16vec4);bvec2 greaterThanEqual(u16vec2, u16vec2);bvec3 greaterThanEqual(u16vec3, u16vec3);bvec4 greaterThanEqual(u16vec4, u16vec4);bvec2 equal(i16vec2, i16vec2);bvec3 equal(i16vec3, i16vec3);bvec4 equal(i16vec4, i16vec4);bvec2 equal(u16vec2, u16vec2);bvec3 equal(u16vec3, u16vec3);bvec4 equal(u16vec4, u16vec4);bvec2 notEqual(i16vec2, i16vec2);bvec3 notEqual(i16vec3, i16vec3);bvec4 notEqual(i16vec4, i16vec4);bvec2 notEqual(u16vec2, u16vec2);bvec3 notEqual(u16vec3, u16vec3);bvec4 notEqual(u16vec4, u16vec4);  int16_t bitfieldExtract(  int16_t, int16_t, int16_t);i16vec2 bitfieldExtract(i16vec2, int16_t, int16_t);i16vec3 bitfieldExtract(i16vec3, int16_t, int16_t);i16vec4 bitfieldExtract(i16vec4, int16_t, int16_t); uint16_t bitfieldExtract( uint16_t, int16_t, int16_t);u16vec2 bitfieldExtract(u16vec2, int16_t, int16_t);u16vec3 bitfieldExtract(u16vec3, int16_t, int16_t);u16vec4 bitfieldExtract(u16vec4, int16_t, int16_t);  int16_t bitfieldInsert(  int16_t base,   int16_t, int16_t, int16_t);i16vec2 bitfieldInsert(i16vec2 base, i16vec2, int16_t, int16_t);i16vec3 bitfieldInsert(i16vec3 base, i16vec3, int16_t, int16_t);i16vec4 bitfieldInsert(i16vec4 base, i16vec4, int16_t, int16_t); uint16_t bitfieldInsert( uint16_t base,  uint16_t, int16_t, int16_t);u16vec2 bitfieldInsert(u16vec2 base, u16vec2, int16_t, int16_t);u16vec3 bitfieldInsert(u16vec3 base, u16vec3, int16_t, int16_t);u16vec4 bitfieldInsert(u16vec4 base, u16vec4, int16_t, int16_t);  int16_t bitCount(  int16_t);i16vec2 bitCount(i16vec2);i16vec3 bitCount(i16vec3);i16vec4 bitCount(i16vec4);  int16_t bitCount( uint16_t);i16vec2 bitCount(u16vec2);i16vec3 bitCount(u16vec3);i16vec4 bitCount(u16vec4);  int16_t findLSB(  int16_t);i16vec2 findLSB(i16vec2);i16vec3 findLSB(i16vec3);i16vec4 findLSB(i16vec4);  int16_t findLSB( uint16_t);i16vec2 findLSB(u16vec2);i16vec3 findLSB(u16vec3);i16vec4 findLSB(u16vec4);  int16_t findMSB(  int16_t);i16vec2 findMSB(i16vec2);i16vec3 findMSB(i16vec3);i16vec4 findMSB(i16vec4);  int16_t findMSB( uint16_t);i16vec2 findMSB(u16vec2);i16vec3 findMSB(u16vec3);i16vec4 findMSB(u16vec4);int16_t  pack16(i8vec2);uint16_t pack16(u8vec2);int32_t  pack32(i8vec4);uint32_t pack32(u8vec4);int32_t  pack32(i16vec2);uint32_t pack32(u16vec2);int64_t  pack64(i16vec4);uint64_t pack64(u16vec4);int64_t  pack64(i32vec2);uint64_t pack64(u32vec2);i8vec2   unpack8(int16_t);u8vec2   unpack8(uint16_t);i8vec4   unpack8(int32_t);u8vec4   unpack8(uint32_t);i16vec2  unpack16(int32_t);u16vec2  unpack16(uint32_t);i16vec4  unpack16(int64_t);u16vec4  unpack16(uint64_t);i32vec2  unpack32(int64_t);u32vec2  unpack32(uint64_t);float64_t radians(float64_t);f64vec2   radians(f64vec2);f64vec3   radians(f64vec3);f64vec4   radians(f64vec4);float64_t degrees(float64_t);f64vec2   degrees(f64vec2);f64vec3   degrees(f64vec3);f64vec4   degrees(f64vec4);float64_t sin(float64_t);f64vec2   sin(f64vec2);f64vec3   sin(f64vec3);f64vec4   sin(f64vec4);float64_t cos(float64_t);f64vec2   cos(f64vec2);f64vec3   cos(f64vec3);f64vec4   cos(f64vec4);float64_t tan(float64_t);f64vec2   tan(f64vec2);f64vec3   tan(f64vec3);f64vec4   tan(f64vec4);float64_t asin(float64_t);f64vec2   asin(f64vec2);f64vec3   asin(f64vec3);f64vec4   asin(f64vec4);float64_t acos(float64_t);f64vec2   acos(f64vec2);f64vec3   acos(f64vec3);f64vec4   acos(f64vec4);float64_t atan(float64_t, float64_t);f64vec2   atan(f64vec2,   f64vec2);f64vec3   atan(f64vec3,   f64vec3);f64vec4   atan(f64vec4,   f64vec4);float64_t atan(float64_t);f64vec2   atan(f64vec2);f64vec3   atan(f64vec3);f64vec4   atan(f64vec4);float64_t sinh(float64_t);f64vec2   sinh(f64vec2);f64vec3   sinh(f64vec3);f64vec4   sinh(f64vec4);float64_t cosh(float64_t);f64vec2   cosh(f64vec2);f64vec3   cosh(f64vec3);f64vec4   cosh(f64vec4);float64_t tanh(float64_t);f64vec2   tanh(f64vec2);f64vec3   tanh(f64vec3);f64vec4   tanh(f64vec4);float64_t asinh(float64_t);f64vec2   asinh(f64vec2);f64vec3   asinh(f64vec3);f64vec4   asinh(f64vec4);float64_t acosh(float64_t);f64vec2   acosh(f64vec2);f64vec3   acosh(f64vec3);f64vec4   acosh(f64vec4);float64_t atanh(float64_t);f64vec2   atanh(f64vec2);f64vec3   atanh(f64vec3);f64vec4   atanh(f64vec4);float64_t pow(float64_t, float64_t);f64vec2   pow(f64vec2,   f64vec2);f64vec3   pow(f64vec3,   f64vec3);f64vec4   pow(f64vec4,   f64vec4);float64_t exp(float64_t);f64vec2   exp(f64vec2);f64vec3   exp(f64vec3);f64vec4   exp(f64vec4);float64_t log(float64_t);f64vec2   log(f64vec2);f64vec3   log(f64vec3);f64vec4   log(f64vec4);float64_t exp2(float64_t);f64vec2   exp2(f64vec2);f64vec3   exp2(f64vec3);f64vec4   exp2(f64vec4);float64_t log2(float64_t);f64vec2   log2(f64vec2);f64vec3   log2(f64vec3);f64vec4   log2(f64vec4);
  int bitCount(  int);ivec2 bitCount(ivec2);ivec3 bitCount(ivec3);ivec4 bitCount(ivec4);  int bitCount( uint);ivec2 bitCount(uvec2);ivec3 bitCount(uvec3);ivec4 bitCount(uvec4);  int findMSB(highp   int);ivec2 findMSB(highp ivec2);ivec3 findMSB(highp ivec3);ivec4 findMSB(highp ivec4);  int findMSB(highp  uint);ivec2 findMSB(highp uvec2);ivec3 findMSB(highp uvec3);ivec4 findMSB(highp uvec4);
  int bitfieldExtract(  int, int, int);ivec2 bitfieldExtract(ivec2, int, int);ivec3 bitfieldExtract(ivec3, int, int);ivec4 bitfieldExtract(ivec4, int, int); uint bitfieldExtract( uint, int, int);uvec2 bitfieldExtract(uvec2, int, int);uvec3 bitfieldExtract(uvec3, int, int);uvec4 bitfieldExtract(uvec4, int, int);  int bitfieldInsert(  int base,   int, int, int);ivec2 bitfieldInsert(ivec2 base, ivec2, int, int);ivec3 bitfieldInsert(ivec3 base, ivec3, int, int);ivec4 bitfieldInsert(ivec4 base, ivec4, int, int); uint bitfieldInsert( uint base,  uint, int, int);uvec2 bitfieldInsert(uvec2 base, uvec2, int, int);uvec3 bitfieldInsert(uvec3 base, uvec3, int, int);uvec4 bitfieldInsert(uvec4 base, uvec4, int, int);
int CUtlString::FormatV(const char *, va_list)
int( %d = 0x%X )
integer_expression
IntegerFunctions2INTEL
integer scalar or vector: 
Intel
Intensity
Intentionally vague touch behavior for %p
interfaces.cpp
Interfaces passed to OpEntryPoint must be of type OpTypeVariable. Found Op
Interface variable id <
Interlace handling should be turned on when using png_read_image
interlock ordering = 
intermVec
Internal Error
INTERNAL ERROR: 
Internal error: empty execution models for function id 
internal error handling cHRM coefficients
internal error handling cHRM->XYZ
internal error in png_XYZ_from_xy
Internal error: missing function id 
Internal error: unhandled header parse failure
Internal error: Unhandled operand type: 
internal max is %d
internal row logic error
internal row size calculation error
internal row width error
internal sequential row size calculation error
interpolant
interpolateAtCentroid
InterpolateAtCentroid
interpolateAtOffset
InterpolateAtOffset
interpolateAtSample
InterpolateAtSample
interpolateAtVertex
interpolateAtVertexAMD
InterpolateAtVertexAMD
Interpolation and auxiliary storage qualifiers must match:
interpolation_qualifier
interpolation qualifiers must appear before storage and precision qualifiers
intersection
  int findLSB(  int);ivec2 findLSB(ivec2);ivec3 findLSB(ivec3);ivec4 findLSB(ivec4);  int findLSB( uint);ivec2 findLSB(uvec2);ivec3 findLSB(uvec3);ivec4 findLSB(uvec4);
int   floatBitsToInt(highp float value);ivec2 floatBitsToInt(highp vec2  value);ivec3 floatBitsToInt(highp vec3  value);ivec4 floatBitsToInt(highp vec4  value);uint  floatBitsToUint(highp float value);uvec2 floatBitsToUint(highp vec2  value);uvec3 floatBitsToUint(highp vec3  value);uvec4 floatBitsToUint(highp vec4  value);float intBitsToFloat(highp int   value);vec2  intBitsToFloat(highp ivec2 value);vec3  intBitsToFloat(highp ivec3 value);vec4  intBitsToFloat(highp ivec4 value);float uintBitsToFloat(highp uint  value);vec2  uintBitsToFloat(highp uvec2 value);vec3  uintBitsToFloat(highp uvec3 value);vec4  uintBitsToFloat(highp uvec4 value);
int gl_VertexID;
In the OpenCL environment, Arrayed may only be set to 1 
In the OpenCL environment, the optional Access Qualifier
 in the structure <id> '
In the Vulkan environment, cannot store to Uniform Blocks
In the Vulkan environment, GLCompute execution model entry points require either the LocalSize execution mode or an object decorated with WorkgroupSize must be specified.
In the Vulkan environment, the OriginLowerLeft execution mode must not be used.
In the Vulkan environment, the PixelCenterInteger execution mode must not be used.
, int, int, int, int, int
 into the structure <id> '
int scalar or vector with the same number of 
int sparseImageLoadARB(readonly volatile coherent 
int sparseImageLoadLodAMD(readonly volatile coherent 
int textureQueryLevels(
int VfxFindOrBuildFeatureComboData(CVfx *, uint64, IRuntimeShaderCreateCallbacks *, IVfx *, bool)
int VfxFindOrBuildFeatureComboVertexShaderInputSignatureStep1(CVfx *, uint64, bool, CUtlLeanVector<VfxStaticComboLoadRequest_t> *, CUtlVector<int32> *)
	InUse Count ( %d ) ( %llu MB ) 
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchSizeNV;
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchSizeNV;in     int   gl_PrimitiveID;in     int   gl_InstanceID;in     int   gl_InstanceCustomIndexNV;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayDirectionNV;in    float  gl_RayTminNV;in    float  gl_RayTmaxNV;in    float  gl_HitTNV;in    uint   gl_HitKindNV;in    mat4x3 gl_ObjectToWorldNV;in    mat4x3 gl_WorldToObjectNV;in    uint   gl_IncomingRayFlagsNV;
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchSizeNV;in     int   gl_PrimitiveID;in     int   gl_InstanceID;in     int   gl_InstanceCustomIndexNV;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayDirectionNV;in    float  gl_RayTminNV;in    float  gl_RayTmaxNV;in    mat4x3 gl_ObjectToWorldNV;in    mat4x3 gl_WorldToObjectNV;in    uint   gl_IncomingRayFlagsNV;
in    uvec3  gl_LaunchIDNV;in    uvec3  gl_LaunchSizeNV;in    vec3   gl_WorldRayOriginNV;in    vec3   gl_WorldRayDirectionNV;in    vec3   gl_ObjectRayOriginNV;in    vec3   gl_ObjectRayDirectionNV;in    float  gl_RayTminNV;in    float  gl_RayTmaxNV;in    uint   gl_IncomingRayFlagsNV;
<invalid>
Invalid 
invalid alpha mode
Invalid argument for DecodeEXRImage().
Invalid argument for LoadDeepEXR
Invalid argument for LoadEXR()
Invalid argument for LoadEXRFromMemory
Invalid argument for LoadEXRImageFromFile
Invalid argument for LoadEXRImageFromMemory
Invalid argument for LoadEXRMultipartImageFromFile
Invalid argument for LoadEXRMultipartImageFromMemory()
Invalid argument for ParseEXRHeaderFromFile
Invalid argument for ParseEXRMultipartHeaderFromFile()
Invalid argument for ParseEXRMultipartHeaderFromMemory
Invalid argument for SaveEXRImageToFile
Invalid argument for SaveEXRImageToMemory
Invalid argument for --set-spec-const-default-value: %s
Invalid argument. `memory` or `exr_header` argument is null in ParseEXRHeaderFromMemory()
Invalid Arrayed 
Invalid attempt to read row data
invalid background gamma type
Invalid binding: 
Invalid bit depth in IHDR
invalid bit length repeat
Invalid bKGD after IDAT
invalid block type
Invalid channels format
Invalid cHRM after IDAT
Invalid cHRM blue point
Invalid cHRM green point
Invalid cHRM red point
Invalid cHRM white point
invalid chunklength
invalid chunk type
invalid clip semantic
invalid code lengths set
invalid code -- missing end-of-block
Invalid color quantization mode change
Invalid color type/bit depth combination in IHDR
Invalid color type in IHDR
Invalid component ID %d in SOS
Invalid compressed buffer size
Invalid crop request
invalid cull semantic
<invalid %d>
Invalid data.
Invalid data for member '%s'
Invalid data found when decoding pixels.
Invalid data height value
Invalid data width or data height: 
Invalid data width value
invalid default parameter value
Invalid Depth 
invalid directive
invalid directive:
invalid distance code
invalid distances set
invalid distance too far back
invalid domain
invalid error action to rgb_to_gray
Invalid EXR header.
Invalid extended instruction import '
Invalid extended instruction import Id 
Invalid extended instruction name '
Invalid extended instruction number: 
Invalid filter method in IHDR
Invalid format for pCAL parameter
Invalid gAMA after IDAT
invalid handle
Invalid header
Invalid hIST after IDAT
Invalid iCCP after IDAT
Invalid ID 
Invalid IHDR chunk
Invalid IHDR data
Invalid image height in IHDR
Invalid image width in IHDR
Invalid immediate integer: !
Invalid In/Out variable type : 
Invalid instruction Op
Invalid instruction word count: 
Invalid JPEG file structure: missing SOS marker
Invalid JPEG file structure: SOS before SOF
Invalid JPEG file structure: two SOF markers
Invalid JPEG file structure: two SOI markers
invalid literal/length code
invalid literal/lengths set
Invalid literal string '
Invalid location: 
Invalid magic number
invalid maxvertexcount
Invalid member count in texture template structure
Invalid member name '%s'
Invalid memory pool code %d
Invalid MS 
Invalid number of bits (
Invalid oFFs after IDAT
Invalid offset size in EXR header chunks.
Invalid offset value in DecodeEXRImage.
Invalid opcode: 
Invalid Opcode name '
Invalid Opcode name 'Op
Invalid Opcode prefix '
Invalid OpSwitch: selector id 
Invalid OpTypeFloat instruction
Invalid OpTypeInt instruction
invalid outputcontrolpoints
invalid outputtopology
Invalid palette chunk
Invalid palette length
Invalid palette size, hIST allocation skipped
invalid parameter after default value parameters
Invalid parameters to AllocateForObject( ... ).
invalid partitioning
Invalid `part number' in EXR header chunks.
invalid patch constant function
Invalid Path
Invalid pCAL after IDAT
Invalid pCAL data
Invalid pCAL equation type
Invalid pCAL parameters for equation type
Invalid pHYs after IDAT
Invalid PLTE after IDAT
Invalid pointer storage class
invalid preprocessor command
Invalid progressive parameters at scan script entry %d
Invalid progressive parameters Ss=%d Se=%d Ah=%d Al=%d
Invalid rendersystem %d
Invalid Sampled 
Invalid sBIT after IDAT
Invalid sCAL after IDAT
Invalid sCAL chunk ignored: bad height format
Invalid sCAL chunk ignored: bad width format
Invalid sCAL chunk ignored: non-positive height
Invalid sCAL chunk ignored: non-positive width
Invalid sCAL height
Invalid sCAL height ignored
Invalid sCAL ignored: invalid unit
Invalid sCAL unit
Invalid sCAL width
Invalid sCAL width ignored
Invalid scan script at entry %d
Invalid scope value:
Invalid semantics value
Invalid sequence number %d!!!
Invalid shader In/Out variable: 
Invalid shader In/Out variable semantic: 
Invalid SOS parameters for sequential JPEG
Invalid spec constant value string '%s'. Expected a string of <spec id>:<default value> pairs.
Invalid SPIR-V binary version 
Invalid SPIR-V header.
Invalid SPIR-V magic number '
Invalid SPIR-V magic number.
Invalid SPIR-V.  The id bound is larger than the max id bound 
Invalid sPLT after IDAT
Invalid sRGB after IDAT
Invalid storage class for pointer operand 
Invalid storage class for target environment
Invalid storage class semantics value
invalid stored block lengths
Invalid texture template struct member type
Invalid texture template type
Invalid thread index (%d) given
Invalid tile size x : 
Invalid tile size y : 
Invalid tRNS after IDAT
Invalid Uniform variable type : 
Invalid use of 8- or 16-bit result
Invalid use of function result id 
Invalid use of function type result id 
invalid user transform pixel depth
Invalid variable index to flattened array
invalid window size
Invalid word count: Op
Invalid word following !<integer>: 
 invariant
Invariant
INVARIANT
invariant_qualifier
invariant qualifier must appear before interpolation, storage, and precision qualifiers 
in vec2 gl_BaryCoordNoPerspAMD;in vec2 gl_BaryCoordNoPerspCentroidAMD;in vec2 gl_BaryCoordNoPerspSampleAMD;in vec2 gl_BaryCoordSmoothAMD;in vec2 gl_BaryCoordSmoothCentroidAMD;in vec2 gl_BaryCoordSmoothSampleAMD;in vec3 gl_BaryCoordPullModelAMD;
in vec4  gl_Color;in vec4  gl_SecondaryColor;in vec3  gl_Normal;in vec4  gl_Vertex;in vec4  gl_MultiTexCoord0;in vec4  gl_MultiTexCoord1;in vec4  gl_MultiTexCoord2;in vec4  gl_MultiTexCoord3;in vec4  gl_MultiTexCoord4;in vec4  gl_MultiTexCoord5;in vec4  gl_MultiTexCoord6;in vec4  gl_MultiTexCoord7;in float gl_FogCoord;
inverse
inversesqrt
inverse sqrt
InverseSqrt
 in Vertex or Tessellation execution model requires the ShaderViewportIndexLayerEXT capability.
invert_orientation
invert-y
invocation operation
invocations
invocations = 
InvTextureDim
: in Vulkan 1.0 environment Memory Scope is limited to 
: in Vulkan 1.1 environment Memory Scope is limited to 
 In Vulkan, BufferBlock is disallowed on variables in the StorageBuffer storage class
: in Vulkan environment Execution scope is limited to 
: in Vulkan environment Execution Scope is limited to 
: in Vulkan environment, Memory Scope cannot be CrossDevice
in Vulkan evironment, OpControlBarrier execution scope must be Subgroup for Fragment, Vertex, Geometry and TessellationEvaluation execution models
InvViewportSize
: in WebGPU environment Execution Scope is limited to 
: in WebGPU environment Memory Scope is limited to 
in xfb mode
i*O)?
io81ko8
io8k9
io8N	
i!O)j
iOS SM 4.0 (VULKAN)
IOS_VULKAN
IOS_VULKAN_4_0
ip8Rkp8
IQuickTime001
iR_8jB_8b
ir8nhr8?
; IR after last pass
; IR before pass 
irCy`
IS_8JC_8B
isalpha
 is already a merge block for another header
is a matrix with stride 
isampler1D
ISAMPLER1D
isampler1DArray
ISAMPLER1DARRAY
isampler2D
ISAMPLER2D
isampler2DArray
ISAMPLER2DARRAY
isampler2DMS
ISAMPLER2DMS
isampler2DMSArray
ISAMPLER2DMSARRAY
isampler2DRect
ISAMPLER2DRECT
isampler3D
ISAMPLER3D
isamplerBuffer
ISAMPLERBUFFER
isamplerCube
ISAMPLERCUBE
isamplerCubeArray
ISAMPLERCUBEARRAY
is an improperly straddling vector at offset 
' is a pointer, which is invalid in the Logical addressing model.
', is attempting to create memory for an illegal type, 
 is a type, not a value
' is a void type.
 is banned when using the Vulkan memory model.
 is being used for 
is_debris
 is decorated with BuiltIn. BuiltIn decoration should only be applied to struct types, variables and constants.
 is defined more than once
 is dominated by: 
isfinite
IsFinite
IsHelperInvocation
IsHelperInvocationEXT
isinf
IsInf
> is later referenced by 
is missing an Offset decoration
' is missing Binding decoration.
' is missing Block decoration.
' is missing Block or BufferBlock decoration.
' is missing DescriptorSet decoration.
' is missing or void.
isnan
IsNan
IsNormal
' is not a boolean type.
 is not a bool scalar.
' is not a composite type.
 is not a constant.
' is not a constant instruction with scalar integer type.
' is not a constant integer type.
' is not a constant or module-scope variable.
' is not a constant or undef.
' is not a cooperative matrix type.
' is not a decoration group.
 is not a float scalar.
 is not a float vector.
' is not a function.
' is not a function type.
 is not aligned to 
 is not aligned to scalar element size 
 is not allowed by OpenCL 1.2 
 is not allowed by OpenCL 2.0/2.1 
 is not allowed by OpenCL 2.2 
 is not allowed by Vulkan 1.0 specification
 is not allowed by Vulkan 1.1 specification
 is not allowed by WebGPU specification
' is not a logical pointer.
 is not an array.
 is not an int scalar.
 is not an int vector.
' is not an object.
 is not an OpLabel.
' is not an OpString.
' is not a pointer.
' is not a pointer type.
 is not a predecessor of <id> 
' is not a sampler type.
' is not a scalar constant type.
 is not a scalar integer
' is not a scalar numerical type.
 is not a scalar numeric type
' is not a scalar specialization constant.
' is not a scalar type.
' is not a struct type.
 is not a type
' is not a type.
 is not a type id
' is not defined.
' is not pointer type
is not post dominated by
' is not the Entry Point operand of an OpEntryPoint.
" is not unique, which is not allow in WebGPU env.
' is not valid for the WebGPU execution environment.
' is not valid in 
' is not Workgroup or StorageBuffer.
isoline
isolines
Isolines
 is out of bounds for 
 is out of bounds. The structure has 
 is referencing 
 is reserved for future use.
IS_SM_
 is targeted by 
 is targeted by block 
ISubBorrow
isubpassInput
ISUBPASSINPUT
isubpassInputMS
ISUBPASSINPUTMS
ISubSatINTEL
> is used by entry point '
 is used outside of it's defining function 
IsValidEvent
IsValidReserveId
iteration_multiple
IterationMultiple
IterationMultiple loop control operand must be greater than zero
iteration_statement
iteration_statement_nonattributed
itexture1D
ITEXTURE1D
itexture1DArray
ITEXTURE1DARRAY
itexture2D
ITEXTURE2D
itexture2DArray
ITEXTURE2DARRAY
itexture2DMS
ITEXTURE2DMS
itexture2DMSArray
ITEXTURE2DMSARRAY
itexture2DRect
ITEXTURE2DRECT
itexture3D
ITEXTURE3D
itextureBuffer
ITEXTUREBUFFER
itextureCube
ITEXTURECUBE
itextureCubeArray
ITEXTURECUBEARRAY
Its Storage Class operand must be the same as the Storage Class 
)iu8?
iu8*	
iux*	
)iux?!@q
Iu@y?
)Iv8(
,ivec
, ivec
,ivec2
IVEC2
IVEC3
IVEC4
	*iW@
*'i$x
*i,xi>@yj:
*i.xi>@yj:
i#xjj-
i+xjZ
I!@y?
iy8J	
i>@yh
Iyj:B
Iy_! k
Iyk:B
Iy?! kC
Iy*wB
)*J=@
**J=@
+*J=@
j1By_! k
',)j2G
',)j3@
j48lQ
j58-A
j58@c
j58G?
j58h%
j58hf@9(
j68HC@9h
j68i"S
@j!8!
j*8*%
j(87e
j(8a6@
j(8h*@
j)8HA
j/8hj)
j(8HK
j`8!i 8
j-8nj)
 J9?@
J@98!
J9e:A
J)@9j
j"@9)Y@
ja8? 
ja8 i!8!
J,A)(yh
jb8_ 
jB_8?
jbA9)
JC@9L
JEIJJ}
JFIF APP0 marker: version %d.%02d, density %dx%d  %d
JFIF extension marker: JPEG-compressed thumbnail image, length %u
JFIF extension marker: palette thumbnail image, length %u
JFIF extension marker: RGB thumbnail image, length %u
JFIF extension marker: type 0x%02x, length %u
ji8J}
Jii8_
JIIJJ}
Jik8)
Jikx_
Jil8J%
Jim8_5
jix?! k
*jj(8
jj(8(
jj(8(!
jj86}
	J)}	Kh
jn87kn8
JNI_OnLoad
JNI_OnUnload
jo8Jio8
JPEG datastream contains no image
JPEGMEM
JPEG parameter struct mismatch: library thinks size is %u, caller expects %u
jr82"
jr822
jr8air8R
jrx!zp
JSON error, unterminated element: 
/JU7OB
jump_statement
Ju@y_
j(x	k(x)k(x
j*xrP
J%@y_
Jy?! kC
J!@y-!@ylyj
	*jz-
*:JZjz
*?".k
	k	}@
	K)}@
K[ .)
*k2@y
_k58(
k68+c
k68wZ@
?k78h
?k78H
|k(8('@
_k;8(
*?k(8
?k<8h
k(8hF@
?k(8J
?k(8V
k(8vV@
(k:8Z
K	@9)
kA@9J
kAKJa
kA@yJ!@yJ}
	kAyk
_!(kc
#kc8Ein8
KDDEy%
KD$@xc
KEdEy
keep-uncalled
	K)eP
kernel enqeue flags
kernel profiling info
KeyValueCache001
KeyValues Error: %s in file %s
KeyValues::ParseIncludedKeys: Couldn't load included keyvalue file %s
KeyValues::RecursiveSaveToFile: TODO, missing code for TYPE_COLOR.
KeyValues::SaveToFile: couldn't open file "%s" in path "%s".
KeyValuesSystem
KFif8
*	kh8?
	kh8?u
K(hi8
Khronos
Khronos Glslang Reference Front End
Khronos LLVM/SPIR-V Translator
Khronos SPIR-V Tools Assembler
Khronos SPIR-V Tools Linker
KHXEy
_|`ki
K"i 8
K@i`8~K
*Kii8)
kiu8j	
kiu8Jiu8)iu8
kiuxj	
	Ki{,x
K)@)j
+;K[k{
Kkh(xL
	klA*
KMdEy
KMeansQuantization
Km@x+
kn1V?OK
KOio8
KPip8
K?@@qk
KRir8\K
k}	Sj
/kU?O
<!-- kv3 encoding:%s:version{%s} format:%s:version{%s} -->
kv3format_manager.cpp
KV Conditional Evaluation Error
K%@xl}
k	@y)
k!@yJ
l5<)_
+-)l6G
l6H))
l!@9)
l	@9,
l	@9J
L!@9L
la@9L	
 [label="
		Label[%d] - %s { %f, %f, %f, %f}
Label instructions must be in a function body
last case/default label not followed by statements
last_sniff
LaunchIdNV
layout(
layoutBindings
layout(binding=X) is required
	Layout Count( %d ) 
Layout qualification must match:
layout_qualifier
layout_qualifier_id
layout_qualifier_id_list
 layout rules: member 
 layoutSecondaryViewportRelativeOffset=
layout, semantic, packoffset, or register
 layoutViewportRelative
%ld%c
ldexp
Ldexp
LE_BGRA8888
LE_BGRX8888
LEFT_ANGLE
left angle bracket
LEFT_ASSIGN
LEFT_BRACE
LEFT_BRACKET
 left of '[' is not of type array, matrix, or vector 
LEFT_OP
LEFT_PAREN
left-shift
left shift second child into first child
legalize-hlsl
legalize-vector-shuffle
.length
Length is not defined.
.length() on vectors and matrices
LE_OP
LessOrGreater
lessThan
Less than 1GB of texture memory detected, force streaming texture manager.
lessThanEqual
LEVEL 
Lexer encountered %i errors parsing compile targets expression "%s"
lgamma
lgamma_r
li-8(ih8i
libandroid.so
libc++_shared.so
libc.so
libdl.so
liblog.so
libm.so
libpng does not support gamma+background+rgb_to_gray
libpng error: %s
 libpng version 1.5.13 - September 27, 2012
libpng version 1.5.13 - September 27, 2012
libpng warning: %s
librendersystemvulkan.so
librendersystemvulkan.so.dbg
libtier0.so
libvstdlib.so
libvulkan.so
LifetimeStart
LifetimeStop
Lii8)
Lik8m
Lil82
limitation
limitations
#line 
__LINE__
#line 1
lineadj
Linear
LINEAR_ABGR8888
LINEAR_ARGB8888
LINEAR_BGR888
LINEAR_BGRA8888
LINEAR_BGRX5551
LINEAR_BGRX8888
LINEAR_D24S8
LINEAR_I8
LINEAR_RGB888
LINEAR_RGBA16161616
LINEAR_RGBA8888
lineartogamma
Line %d at "%s": %s
Line %d: Invalid literal value "%s"
Line %d: Invalid value "%s"
Line %d: %s
lineOrder
"lineOrder" attribute not found in the header.
lines_adjacency
LineStream
line_strip
Linkage
LinkageAttributes
linkage type
Linked 
Linker Objects
Link failed; no code produced.  Log string from glslang %s
Linking 
LINUX
LiteralSampler
literal string
Literal string is longer than 
,<L\l|
%lld (%s)
%llu (%s)
Lm@x,
Load cooperative matrix
Loaded video settings config from '%s'
LoadEXRImageFromMemory failed! Error message: %s
LoadEXRImageFromMemory() failed! Error message: %s
LoadFromBuffer: expected '{', found '%s'
LoadFromInMemoryEXR( %s ) failed.
Loading multipart or DeepImage is not supported  in LoadEXR() API
Load replacement table
local function declaration
localize
Localize_001
local-redundancy-elimination
local_size
local_size = (
local_size_
LocalSize
LocalSizeHint
LocalSizeHintId
local_size id
LocalSizeId
local_size ids = (
Local size %s: %d
local_size_x
local_size_x_id
local_size_y
local_size_y_id
local_size_z
local_size_z_id
 location=
Location
location/component/index
location is too large
location on block member
location qualifier on in/out block
location qualifier on input
location qualifier on output
location qualifier on uniform or buffer
LockDynamicTexture not currently implemented in rendersystemvulkan
lockRotationAlpha
lod bias
log1p
LOG_GENERAL
LoggingSystem_IsChannelEnabled
LoggingSystem_Log
LoggingSystem_RegisterLoggingChannel
Logical addressing not supported: 
logical-and
logical_and_expression
LogicalEqual
LogicalNot
LogicalNotEqual
logical-or
logical_or_expression
logical-xor
logical_xor_expression
Logic Error in CExpressionEvaluator
longjmp
Loop Body
loop_break_on_damage
loop_break_on_flashlight
Loop Condition
loop control
loop-fission
--loop-fission must have a positive integer argument
loop-fusion
--loop-fusion must have a positive integer argument
loop header
Loop header 
loop_in_action
looping
loop-invariant-code-motion
LoopMerge
loop or switch
loop-peeling
loop-peeling-threshold
--loop-peeling-threshold must have a positive integer argument
Loop Terminal Expression
loop-unroll
loop-unroll-partial
--loop-unroll-partial must have a positive integer argument
loop-unswitch
Loop with condition 
Low GPU memory detected (%d MB of %d MB used). Reducing texture pool size %d MB -> %d MB
lowp   int bitCount(  int);lowp ivec2 bitCount(ivec2);lowp ivec3 bitCount(ivec3);lowp ivec4 bitCount(ivec4);lowp   int bitCount( uint);lowp ivec2 bitCount(uvec2);lowp ivec3 bitCount(uvec3);lowp ivec4 bitCount(uvec4);lowp   int findMSB(highp   int);lowp ivec2 findMSB(highp ivec2);lowp ivec3 findMSB(highp ivec3);lowp ivec4 findMSB(highp ivec4);lowp   int findMSB(highp  uint);lowp ivec2 findMSB(highp uvec2);lowp ivec3 findMSB(highp uvec3);lowp ivec4 findMSB(highp uvec4);
lowp   int findLSB(  int);lowp ivec2 findLSB(ivec2);lowp ivec3 findLSB(ivec3);lowp ivec4 findLSB(ivec4);lowp   int findLSB( uint);lowp ivec2 findLSB(uvec2);lowp ivec3 findLSB(uvec3);lowp ivec4 findLSB(uvec4);
lowp precision qualifier
LOW_PRECISION
LOWVIOLENCE
LrwcE
%ls [wstring, len = %d]
Luminance
LunarG
-lunarg_no_present_fence
 l-value of swizzle cannot have duplicate components
 l-value required
LZMA compression of static combo data failed
@`M9`
macro expansion
Macro redefined; different argument names:
Macro redefined; different number of arguments:
Macro redefined; different substitutions:
Macro redefined; function-like versus object-like:
mageSampleFootprintGradClampNV
main(
MainCs
MainDs
MainGs
MainHs
MainPs
MainVs
MakeAvailableKHR
: MakeAvailableKHR Memory Semantics also requires either Release or AcquireRelease Memory Semantics
makemelast
MakePointerAvailable
MakePointerAvailableKHR cannot be used with OpLoad.
MakePointerVisible
MakePointerVisibleKHR cannot be used with OpStore.
MakePointerVisibleKHR is specified.
MakeTexelAvailable
MakeTexelAvailableKHR
MakeTexelVisible
MakeTexelVisibleKHR
MakeVisibleKHR
: MakeVisibleKHR Memory Semantics also requires either Acquire or AcquireRelease Memory Semantics
Malformed iCCP chunk
Malformed iTXt chunk
malformed sPLT chunk
malloc
-mantle
Mantle
MapListService_001
mapped binding out of range: 
mapped set out of range: 
master_morph_weight
mat2 matrixCompMult(mat2 x, mat2 y);mat3 matrixCompMult(mat3 x, mat3 y);mat4 matrixCompMult(mat4 x, mat4 y);
mat2   outerProduct(vec2 c, vec2 r);mat3   outerProduct(vec3 c, vec3 r);mat4   outerProduct(vec4 c, vec4 r);mat2x3 outerProduct(vec3 c, vec2 r);mat3x2 outerProduct(vec2 c, vec3 r);mat2x4 outerProduct(vec4 c, vec2 r);mat4x2 outerProduct(vec2 c, vec4 r);mat3x4 outerProduct(vec4 c, vec3 r);mat4x3 outerProduct(vec3 c, vec4 r);mat2   transpose(mat2   m);mat3   transpose(mat3   m);mat4   transpose(mat4   m);mat2x3 transpose(mat3x2 m);mat3x2 transpose(mat2x3 m);mat2x4 transpose(mat4x2 m);mat4x2 transpose(mat2x4 m);mat3x4 transpose(mat4x3 m);mat4x3 transpose(mat3x4 m);mat2x3 matrixCompMult(mat2x3, mat2x3);mat2x4 matrixCompMult(mat2x4, mat2x4);mat3x2 matrixCompMult(mat3x2, mat3x2);mat3x4 matrixCompMult(mat3x4, mat3x4);mat4x2 matrixCompMult(mat4x2, mat4x2);mat4x3 matrixCompMult(mat4x3, mat4x3);
MATCHFRAMEWORK_001
material
MaterialUtils_001
matrix3x4a_t
matrix3x4_t
Matrix access is out of bounds, matrix has 
matrix column component out of range
matrixCompMult
matrix component swizzle has too many components
matrix component swizzle missing
matrix constructed from matrix can only have one argument
matrix index out of range '%d'
MatrixInverse
matrix-multiply
matrix mult second child into first child
 matrix of
matrix or packing qualifiers can only be used on a uniform or buffer
matrix row component out of range
matrix-scale
matrix scale second child into first child
MatrixStride
matrix swizzle
MatrixTimesMatrix
MatrixTimesScalar
matrix-times-vector
MatrixTimesVector
matrix type in buffer
Matrix types can only be parameterized as having only 2, 3, or 4 columns.
Matrix types can only be parameterized with floating-point types.
m_attributeDescriptions[ %d ].m_nBinding = %d
m_attributeDescriptions[ %d ].m_nFormat = %d
m_attributeDescriptions[ %d ].m_nLocation = %d
m_attributeDescriptions[ %d ].m_nOffsetInBytes = %d
MAX_ALLOC_CHUNK is wrong, please fix
max_angle
maxanisotropy
MaxByteOffset
MaxByteOffsetId
    Max committed memory: %u KB out of %d KB
MaxDeviceID
-maxdxlevel
 max. %f
maxHullVertices
Maximum Control Flow nesting depth exceeded.
Maximum device access threads: %u
maximum nesting depth exceeded
Maximum supported image dimension is %u pixels
maxInvocations
maxInvocationsAMD
maxInvocationsExclusiveScan
maxInvocationsExclusiveScanAMD
maxInvocationsExclusiveScanNonUniform
maxInvocationsExclusiveScanNonUniformAMD
maxInvocationsInclusiveScan
maxInvocationsInclusiveScanAMD
maxInvocationsInclusiveScanNonUniform
maxInvocationsInclusiveScanNonUniformAMD
maxInvocationsNonUniform
maxInvocationsNonUniformAMD
max_iterations
MaxIterations
maxlod
maxmag
max megabytes
max megahertz
max megatexels
max_primitives
max_primitives = 
max_primitives*
max_processor_count
maxtessfactor
-maxtextureres
max_vertices
max_vertices = 
maxVerticesPerHull
; may be removed in future release
) may not be decorated with Import Linkage type.
) may not be targeted by both an OpEntryPoint instruction and an OpFunctionCall instruction.
 may not exceed 
m_bAlphaCrop
m_bAlphaToCoverageEnable: %d
m_bApplyMinForce
m_bClamp
mbcnt
mbcntAMD
MbcntAMD
m_bDepthClipEnable: %d
m_bDepthTestEnable: %d
m_bDepthWriteEnable: %d
m_bDisableChild
m_bDisableOperator
m_bDoBonesOrientAlongPositiveX
m_bFitCycleToLifetime
m_bForceLoopingAnimation
m.B)h
m_bindingDescriptions[ %d ].m_nBinding = %d
m_bindingDescriptions[ %d ].m_nInputRate = %d
m_bindingDescriptions[ %d ].m_nStrideInBytes = %d
m_bInitFromKilledParentParticles
m_bIsComputeShaderDispatch: %d
m_bLocalSpace
m_bNoAlpha
m_bNoColor
m_bOffsetExistingPos
m_Bone
m_bParticleFeathering
m_bRemapPullForceToLife
m_bRunForParentApplyKillList
m_bScaleCurrent
m_bScaleInitialRange
m_bScaleInitialValue
m_bScalePerParticle
m_bStencilTestEnable: %d
m_bTrailBias
m_bUseHighestEndCP
m_cbAttachmentState[ %d ].m_bBlendEnable = %d
m_cbAttachmentState[ %d ].m_nBlendOpAlpha = %d
m_cbAttachmentState[ %d ].m_nBlendOpColor = %d
m_cbAttachmentState[ %d ].m_nChannelWriteMask = %d
m_cbAttachmentState[ %d ].m_nDestBlendAlpha = %d
m_cbAttachmentState[ %d ].m_nDestBlendColor = %d
m_cbAttachmentState[ %d ].m_nSrcBlendAlpha = %d
m_cbAttachmentState[ %d ].m_nSrcBlendColor = %d
m_ChainData
m_Children
m_Color
m_ColorScale
m_ControlRigData
MD5 match on %s, loading from vcs
MD5 mismatch on %s, will load from vfx instead.
m_DefaultSolverSettings
m_DefaultTargetSettings
m-Dx_
m_dynamicComboArray
m_dynamicComboRuleArray
mediump
mediump precision qualifier
MEDIUM_PRECISION
mediump vec2 unpackHalf2x16(highp uint);
mediump vec4 gl_FragCoord;        bool gl_FrontFacing;mediump vec4 gl_FragColor;mediump vec2 gl_PointCoord;
mediump vec4 unpackSnorm4x8(highp uint);mediump vec4 unpackUnorm4x8(highp uint);
m_elems
', member '
Member #
member cannot contradict block
member cannot contradict block (or what block inherited from global)
MemberDecorateString
MemberDecorateStringGOOGLE
member-function definition
 (member index 
member name
MemberName
member of block cannot be or contain a cooperative matrix type
member of block cannot be or contain a sampler, image, or atomic_uint type
member of block cannot have a packing layout qualifier
member of nameless block was not redeclared
member of uniform or buffer block cannot have an auxiliary or interpolation qualifier
 members. Largest valid index is 
member storage qualifier cannot contradict block storage qualifier
memchr
memcmp
memcpy
m_Emitters
memmove
memory access
Memory accesses with PhysicalStorageBufferEXT must use Aligned.
Memory allocation failed while processing sCAL
memoryBarrier
memoryBarrierAtomicCounter
MemoryBarrierAtomicCounter
memoryBarrierBuffer
memoryBarrierImage
memoryBarrierShared
memory exhausted
memory model
Memory model must be OpenCL in the OpenCL environment.
Memory model must be VulkanKHR for WebGPU environment.
MemoryNamedBarrier
memory qualifiers cannot be used on this type
Memory qualifiers must match:
: Memory Scope QueueFamilyKHR requires capability 
Memory Semantics Acquire and AcquireRelease cannot be used with 
: Memory Semantics can have at most one of the following bits set: Acquire, Release, AcquireRelease or SequentiallyConsistent
memory semantics ID
Memory Semantics ids must be OpConstant when Shader capability is present
: Memory Semantics MakeAvailableKHR requires capability 
: Memory Semantics MakeVisibleKHR requires capability 
Memory Semantics must be a constant instruction when CooperativeMatrixNV capability is present
: Memory Semantics OutputMemoryKHR requires capability 
: Memory Semantics Release and AcquireRelease cannot be used for operand Unequal
: Memory Semantics UniformMemory requires capability Shader
Memory Semantics Volatile can only be used with atomic instructions
: Memory Semantics Volatile requires capability VulkanMemoryModelKHR
mempool.cpp
memset
m_EndEffectorBone
m_EndEffectorTargetBone
merge block
Merge Block 
Merge Block and Continue Target must be different ids
Merge Block may not be the block containing the OpLoopMerge
merge-blocks
merge-return
meshes
MeshNV
mesh shaders
MeshShadingNV
MeshSystem001
MeshUtils001
mesh view output array size must be gl_MaxMeshViewCountNV or implicitly sized
method does not accept any arguments
m_extConstantBufferDescriptionArray
m_fForceAmount
m_fForceAmountMin
m_flBiasParameter
m_flClusterCooldown
m_flClusterCooldownMax
m_flClusterCooldownMin
m_flClusterRefireTime
m_flClusterRefireTimeMax
m_flClusterRefireTimeMin
m_flClusterSize
m_flDisplayTime
m_flDuration
m_flEmissionDuration
m_flEmissionScale
m_flEmitRate
m_fLifespanScaleExp
m_flInitFromKilledParentParticles
m_flInput0
m_flInput1
m_flLiteralValue
m_flMultFactor
m_floatParams
m_flOpStrength
m_flOpStrengthMaxScale
m_flOpStrengthMinScale
m_flOutput0
m_flOutput1
m_flRadiusScale
m_flRadiusTaper
m_flRandomMax
m_flRandomMin
m_flScalePerParentParticle
m_flStartTime
m_flStartTimeMax
m_flTailAlphaScale
m_flTotalTime
m_ForceGenerators
m_Format
m_Frames
m_hSnapshot
m_IkChain
m_IkChains
m_IKChains
m_Images
min10float
min10float1
min10float2
min10float3
min10float4
min12int
min12int1
min12int2
min12int3
min12int4
min16float
min16float1
min16float2
min16float3
min16float4
min16int
min16int1
min16int2
min16int3
min16int4
min16uint
min16uint1
min16uint2
min16uint3
min16uint4
min_angle
MinDeviceID
 min. %f
, minimum stride needed: 
minInvocations
minInvocationsAMD
minInvocationsExclusiveScan
minInvocationsExclusiveScanAMD
minInvocationsExclusiveScanNonUniform
minInvocationsExclusiveScanNonUniformAMD
minInvocationsInclusiveScan
minInvocationsInclusiveScanAMD
minInvocationsInclusiveScanNonUniform
minInvocationsInclusiveScanNonUniformAMD
minInvocationsNonUniform
minInvocationsNonUniformAMD
min_iterations
MinIterations
m_Initializers
minlod
MinLod
minmag
min megabytes
min megahertz
min megatexels
min_processor_count
Minus
miplodbias
Miscellaneous marker 0x%02x, length %u
mismatched statements
: missing 
':' missing after extension name
Missing argument 
Missing assembly text.
missing #endif
Missing entry point: Each stage requires one entry point
Missing entrypoints for instance extension '%s', disabling.
Missing file '%s'
Missing function type definition.
Missing Huffman code table entry
Missing IHDR before bKGD
Missing IHDR before cHRM
Missing IHDR before gAMA
Missing IHDR before hIST
Missing IHDR before iCCP
Missing IHDR before IDAT
Missing IHDR before iTXt
Missing IHDR before oFFs
Missing IHDR before pCAL
Missing IHDR before pHYs
Missing IHDR before PLTE
Missing IHDR before sBIT
Missing IHDR before sCAL
Missing IHDR before sPLT
Missing IHDR before sRGB
Missing IHDR before tEXt
Missing IHDR before tRNS
Missing IHDR before zTXt
Missing module.
Missing OpFunctionEnd at end of module.
missing parenthesis
missing perprimitiveNV qualifier to redeclared block member
missing perviewNV qualifier to redeclared block member
Missing PLTE before bKGD
Missing PLTE before hIST
Missing PLTE before IDAT
Missing PLTE before tRNS
Missing required OpMemoryModel instruction.
missing space after macro name
missing user function; linker needs to catch that
MissNV
Mi,xH
)MJJ }
MJj(I
m_JointConstraintPairs
m_JointName
m_Joints
mjq8jjn
m_LiteralColor
-=M]m}
mM@x_
m_Name
m_nAnimationType
m_nAttachmentCount: %d
m_nAttributeToWrite
m_nBackStencilCompareOp: %d
m_nBackStencilDepthFailOp: %d
m_nBackStencilFailOp: %d
m_nBackStencilPassOp: %d
m_nBehaviorVersion
m_nBiasType
m_nClusterSizeMax
m_nClusterSizeMin
m_nColorRendertargetFormat[ %d ] = %d
m_nControlPoint
m_nControlPointNumber
m_nCP
m_nCPField
m_nCullMode: %d
m_nD3DSemanticIndex
m_nDepthCompareOp: %d
m_nDepthStencilFormat: %d
MNetworkBitCount
MNetworkChangeCallback
MNetworkEncoder
MNetworkOverride_Invalid
MNetworkPriority
MNetworkRemoveAll
MNetworkSerializer
MNetworkUserGroup
m_nFeatheringMode
m_nFillMode: %d
m_nFirstMultipleOverride_BackwardCompat
m_nFrontFace: %d
m_nFrontStencilCompareOp: %d
m_nFrontStencilDepthFailOp: %d
m_nFrontStencilFailOp: %d
m_nFrontStencilPassOp: %d
MNG features are not allowed in a PNG datastream
m_nId
m_nIncrement
m_nInstanceStepRate
m_nMapType
m_nMinParticlesToEmit
m_nOffset
m_nOpScaleCP
m_nOpStrengthScaleSeed
m_nParticlesToEmit
m_nPatchControlPoints: %d
m_nPrimitiveTopology: %d
m_nRandomMode
m_nRasterSamples: %d
m_nRenderPassSubPassCount: %d
m_nRenderPassSubPass: %d
m_nSampleMask: %d
m_nScaleControlPoint
m_nScaleControlPointField
m_nScaleCP
m_nScaleCPComponent
m_nScaleCPField
m_nSemanticIndex
m_nSetMethod
m_nShaderHash[ %d ] = %llu
m_nSlot
m_nSlotType
m_nStaticDescriptorSetHashes[ %d ] = %llu
m_nType
m_nVariableSourceMax
m_nVectorComponent
m_nVertexAttributeCount: %d
m_nVertexBindingCount: %d
m_nViewportAndScissorCount: %d
|)m;@)o
MOBILE_GLES
MOBILE_GLES_3_0
MOBILE_GLES_3_1
Mobile SM 3.0 (GLES 3.0)
Mobile SM 3.0 (GLES 3.1)
MOD_ASSIGN
modeldoc0
modeldoc1
modeldoc10
modeldoc11
modeldoc12
modeldoc13
modeldoc14
modeldoc15
modeldoc16
modeldoc17
modeldoc18
modeldoc19
modeldoc2
modeldoc20
modeldoc21
modeldoc22
modeldoc23
modeldoc24
modeldoc25
modeldoc26
modeldoc27
modeldoc3
modeldoc4
modeldoc5
modeldoc6
modeldoc7
modeldoc8
modeldoc9
ModelDocUtils001
model_name
MODEL_PROCESSING_SCRIPT_INTERFACE_001
MODEL_PROCESSING_SERVICES_INTERFACE_001
modes
Modes
MODES
*** Mode "%s" in %s is missing an option!
*** Mode "%s" in %s references static combo %s that doesn't exist in any program!
ModfStruct
mod second child into first child
Module contains unreachable blocks during merge return.  Run dead branch elimination before merge return.
Module has incomplete header: only 
ModuleProcessed
m_Operators
move second child to first child
m_pBody
m_pD3DSemanticName
m_pName
m_pParent
m_PreEmissionOperators
m_pSemantic
m_pSemanticName
m_pszSnapshotName
m_Renderers
msad4
m_Sequences
MS must be 0 in the OpenCL environement.
m_snapshotName
m_SolverSettingSource
m_SolverType
m_staticComboArray
m_staticComboRuleArray
m_TargetSettingSource
m_TargetSource
m_textureChannelProcessorArray
MulAdd cooperative matrices
MUL_ASSIGN
mul() matrix size mismatch
-multigpu
multiplayer_break
Multiple case constructs have branches to the case construct that targets 
Multiple function bodies in multiple compilation units for the same signature in the same stage:
multiple prototypes for same function
 multiple times is not allowed.
multiplicative_expression
Multiply defined variable "%s"
multiply second child into first child
multisample count
MultiView
MultiViewport
 must appear in a block
must be 0, 1, 2, or 3:
 (must be 0, 1 or 2)
 must be 0 for a floating-point type, 
 (must be 0 or 1)
' must be a boolean constant instruction.
must be a compile-time constant:
 must be a memory object declaration
must be a multiple of size of first component
must be a multiple of the member's alignment
 must be an OpLabel
' must be an OpTypeRuntimeArray.
' must be an the last member of the struct.
' must be a pointer to an OpTypeStruct.
 must be a scalar floating point or integer type
' must be a scalar integer type.
 must be explicitly laid out with ArrayStride decorations.
 must be explicitly laid out with MatrixStride decorations.
 must be explicitly laid out with Offset decorations.
must be followed by a header name
must be followed by macro name
must be followed by version number
must be greater than 0
must be greater than or equal to 1
must be in the range [0, 2]
must be less than or equal to
' must be less than the ID bound '
 must be of type integer.
' must be OpTypeCooperativeMatrixNV.
' must be OpTypeInt with width 32 and signedness 0.
' must be OpTypePointer. Found Op
must be positive
 must be present.
must be qualified as flat
must by followed by an integral literal
) must have a LinkageAttributes decoration with the Import Linkage type.
', must have an initializer.
 must not use GLSLPacked decoration.
 must not use GLSLShared decoration.
must occur first in shader
must specify 'location' to use 'component'
mutable
.M;UU
m_value
m_variableDescriptionArray
m_vecColorScale
m_vecTailColorScale
m_vEndTrailTintFactor
m_VkEXTDebugUtilsExtension.vkCreateDebugUtilsMessengerEXT( m_InstanceVulkan, &debugUtilsMessengerCreateInfo, nullptr, &m_pDebugUtilsMessengerVulkan )
m_vLiteralValue
m_vsInputSignatureArray
m!@yMym
@(!N 
N}[ .=
%N1V8Ot
n1Z nRZ n
N24CFieldPathHuffmanEncoder12InternalNodeE
N24CFieldPathHuffmanEncoder5INodeE
N24CFieldPathHuffmanEncoder8LeafNodeE
 N2V(OP
N2Z .
"N$4$n
N7glslang7TShader8IncluderE
!n9[ .
[ n9+a
N@9IK
,.n*a
name already defined
named_barrier
NamedBarrierInitialize
nameless block contains a member that already has a name at global scope
names beginning with "GL_" can't be (un)defined:
names containing consecutive underscores are reserved:
names containing consecutive underscores are reserved, and an error if version <= 300:
namespace
namespace name
namespace or attribute identifier
n:+aN
N(aN!T
native_cos
native_divide
native_exp
native_exp10
native_exp2
native_log
native_log10
native_log2
native_powr
native_recip
native_rsqrt
native_sin
native_sqrt
native_tan
$NA)Tp
nav_attribute_avoid
nav_data
`nbT?O1
nBX n
NBX n
nC(aNb?
NClamp
nCombos
NcX n
Nearest
need dictionary
needs a literal integer
Negate conditional
Negate value
Neither a front-end constant nor a spec constant.
NE_OP
NetworkClientService_001
NETWORK_FIELD_CHANGED_ARRAY_WITH_VALUE
NETWORK_FIELD_CHANGED_NO_VALUE
NETWORK_FIELD_CHANGED_NO_VALUE_NO_CONTEXT
NETWORK_FIELD_CHANGED_TYPE_NONE
NETWORK_FIELD_CHANGED_WITH_VALUE
NETWORK_FIELD_CHANGES_OFTEN_PRIORITY
NETWORK_FIELD_CHANGES_OFTEN_PRIORITY_TOPOOGICAL
NETWORK_FIELD_CHANGES_OFTEN_PRIORITY_TOPOOGICAL_SORTLOWER
NETWORK_FIELD_DEFAULT_PRIORITY
NETWORK_FIELD_HIGHEST_PRIORITY
NETWORK_FIELD_LOWEST_PRIORITY
NetworkMessagesVersion001
NetworkP2PService_001
NetworkServerService_001
NetworkService_001
NetworkSystemUtilsVersion001
NetworkSystemVersion001
Newline in string literal
-newtexturestreaming
nextafter
Next token is
nf@9/
Nh[ .
NhFD9t
nh~xO
Nin8/
Nin8M
niqx?
NJ[ .
Nj1xkj-
;nkU7O
/N,@L!
[ n{[ n
n{[ n
nn&*!
.>N^n~
!Nn5?)l
NoAlias
No Buffer
NoCapture
 noContraction
NoContraction
no declaration found for redeclaration
node is still EOpNull!
No displayable format found for swapchain that supports the requested display mode.
No errors.  No code generation or linking was requested.
<no failure reason set>
No function definition (body) found: 
-nogammaramp
No image in file
noinline
nointerpolation
noise
noise1
noise2
noise3
noise4
NoLine
no longer supported in
No loop body
No loop condition
no matching overloaded function found
No memory for pCAL params
No memory for pCAL purpose
No memory for sPLT palettes
No memory to process iTXt chunk
No memory to process text chunk
No memory type supports the requested properties. 
no message
-nomultigpu
non-built-in variables within a single structure). Structure id 
non-constant global initializer (needs GL_EXT_shader_non_constant_global_initializers)
Non-constant-index-expression
non-constant initializer
non-constant offset argument
<none>
   None
non-literal layout-id value
Non-L-value cannot be passed for 'out' or 'inout' parameters.
non-matching or non-convertible constant type for const initializer
non-opaque uniforms outside a block
non-opaque uniform variables need a layout(location=L)
Non-OpFunctionParameter (opcode: %d) found inside function but outside basic block
non-OpPhi instructions 
nonportable when expanded from macros for preprocessor expression
 nonprivate
NONPRIVATE
NonPrivatePointer
NonPrivatePointerKHR
NonPrivatePointerKHR must be specified if 
NonPrivatePointerKHR must be specified if MakePointerAvailableKHR is specified.
NonPrivatePointerKHR requires a pointer in Uniform, 
NonPrivateTexel
NonPrivateTexelKHR
NonReadable
non-structure type in ConstantBuffer
Nontemporal
 nonuniform
NONUNIFORM
nonuniformEXT
non_uniform_qualifier
non-uniform struct contains an accelerationStructureNV:
non-uniform struct contains an atomic_uint:
non-uniform struct contains a sampler or image:
Non-unique OpEntryPoint interface 
non-void function must return a value
Non-windows platforms don't support loading of JPG images
Non-windows platforms don't support loading of PNG images
Non-windows platforms don't support loading of TIFF images
NonWritable
No OpEntryPoint instruction was found. This is only allowed if the Linkage capability is being used.
no operation '%s' exists that takes a left-hand operand of type '%s' and a right operand of type '%s' (or there is no acceptable conversion)
no operation '%s' exists that takes an operand of type %s (or there is no acceptable conversion)
 noperspective
NoPerspective
NOPERSPECTIVE
no qualifiers allowed for function return
NoReadWrite
-no_render_thread_affinity
Normalize
Normalize3ComponentVectorInAttributes
Normalized3x3SobelEdgeFilterFrom
: no shortcircuit
NoSignedWrap
No space in chunk cache for iTXt
No space in chunk cache for sPLT
No space in chunk cache for tEXt
No space in chunk cache for unknown chunk
No space in chunk cache for zTXt
no-storage-format
no such field in structure
Not a JPEG file: starts with 0x%02x 0x%02x
 not allowed before =.
not allowed in nested scope
not allowed in this version
not allowed on block or structure members
not allowed when generating SPIR-V
not allowed when using GLSL for Vulkan
Not all shaders have valid object code.
 (not another case construct, corresponding merge, outer loop merge or outer loop continue)
Not a PNG file
notconnected
NOTE: 
.note.gnu.build-id
not enough data provided for construction
Not enough image data
Not enough memory to decompress chunk
Not enough memory to process iTXt chunk
Not enough memory to process text chunk
Not enough memory to process zTXt chunk
notEqual
notify
Not implemented yet
NotInf
NotNaN
 not satisfying alignment to 
not supported for these tokens
not supported for this version or the enabled extensions
not supported in this stage:
not supported with this profile:
NoUnsignedWrap
No valid format conversion from '%s' to '%s'
No valid vcs file found for shader %s
No Vulkan heaps support system memory allocation for this resource.
NoWait
Now at end of input.
NoWrite
nQ(aN
nr(aN
nRZ n
NRZ nsZ nR*a
NSt6__ndk113basic_istreamIcNS_11char_traitsIcEEEE
NSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEEE
NSt6__ndk114basic_iostreamIcNS_11char_traitsIcEEEE
NSt6__ndk115basic_streambufIcNS_11char_traitsIcEEEE
NSt6__ndk115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt6__ndk117bad_function_callE
NSt6__ndk118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt6__ndk119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt6__ndk19basic_iosIcNS_11char_traitsIcEEEE
nsZ nn*!
nterm
}n!T?OR
nTries < 10000000
<null>
(null)
<< NULL >>
<NULL>
NULL row buffer
number as Result Type
Number of constructor parameters does not match the number of structure fields
Number of Global Variables (Storage Class other than 'Function') exceeded the valid limit (
Number of image operand ids doesn't correspond to the bit mask
number of invocations must match between compilation units
Number of (literal, label) pairs in OpSwitch (
Number of local variables ('Function' Storage Class) exceeded the valid limit (
Number of OpTypeStruct members (
NumEnqueuedSubgroups
 numerical scalar type
numeric literal too big
numeric literal too long
numImmutableSamplers
numLayoutBindings
, numMembers %d
numPushConstantRanges
numsegments
numthreads
num_views
NumWorkgroups
NV_DST16
NV_DST24
NVIDIA
NV_INTZ
NV_NULL
NV_RAWZ
nX(aNB?
[ n!X n
[ n)Y n
nY nk)a
!O1*a
o1V?OS
)o))a
		Object[%d] - %s, Handle %p
		Object[%d] - %s, Handle %p, Name "%s"
ObjectRayTmaxNV
ObjectRayTminNV
	Objects - %d
Obtained EMS handle %u
Obtained XMS handle %u
o$ c.! cn
octal and hex sequences not supported
octal literal digit too large
octal literal too big
# of channels is zero.
 offset=
offset/align
offset/align can only be used on a uniform or buffer
offset %d in buffer %d
offset is too large:
offset on block member
offsets argument
 of function 
of right matrix to be equal: 
 of struct ID <
of the left operand: 
Oio8,
Oio8s
O*/i*x
__oldschema_object_name
-oldtexturestreaming
one of the following storage classes: Output, Private, or 
one or more arguments
only allowed when generating SPIR-V
only allowed when using GLSL for Vulkan
only applies to block members, not blocks
only apply to images
Only DXT1/DXT5 online texture compression supported.
Only immediately load textures which have a fullmipchain.
only one coherent/devicecoherent/queuefamilycoherent/workgroupcoherent/subgroupcoherent qualifier allowed
only one precision qualifier allowed
Only one push_constant block is allowed per stage
Only one shaderRecordNV buffer block is allowed per stage
Only one taskNV interface block is allowed per shader
only outermost dimension of an array of arrays can be a specialization constant
only outermost dimension of an array of arrays can be implicitly sized
only simple assignment to non-simple matrix swizzle is supported
only supported on image with format r32f
only supported on image with format r32i or r32ui
only supported on integer images
only uniform, buffer, in, or out blocks are supported
OnMultiGpuTransferTexture: No texture specification for destination texture, skipping transfer.
"on" or "off" expected after '(' for 'debug' pragma
"on" or "off" expected after '(' for 'optimize' pragma
(On the line reading %s):
/?O_o
)oO*a
O!OJ)
opaque('
Opaque_
OpBeginInvocationInterlockEXT/OpEndInvocationInterlockEXT require a fragment shader interlock execution mode.
OpBeginInvocationInterlockEXT/OpEndInvocationInterlockEXT require Fragment execution model
OpBranchConditional or OpSwitch instruction. 
OpBranchConditional requires either 3 or 5 parameters
OpBranch or OpBranchConditional instruction. 
Opcode 
opcodes or together with Image Operand Grad
OpConstantNull Result Type <id> '
OpConstantSampler Result Type <id> '
OpControlBarrier requires one of the following Execution Models: TessellationControl, GLCompute or Kernel
OpDecorate decoration '
OpDecorate, OpDecorateId, and OpGroupMemberDecorate
OpDecorate SpecId decoration target <id> '
OpDecorationGroup is not allowed in the WebGPU execution 
OpDemoteToHelperInvocationEXT requires Fragment execution model
OpenCL
opencl1.2
opencl1.2embedded
opencl2.0
opencl2.0embedded
opencl2.1
opencl2.1embedded
opencl2.2
opencl2.2embedded
OpenCL_C
OpenCL_CPP
OpenCL.std
Opened temporary file %s
OpenGL
opengl4.0
opengl4.1
opengl4.2
opengl4.3
opengl4.5
OpenGL ES GLSL 3.20 glslang Khronos. 13.3381
OpEntryPoint Entry Point <id> '
OpEntryPoint interfaces must be OpVariables with Storage Class of Input(1) or Output(3). Found Storage Class 
OpEntryPoint interfaces should only list global variables
 operand '
: operand 
Operand 
 operand at word offset 
 operand index 
 operand of 
operand of the result type.
Operand type must be a pointer
, operation at 
operator[] on a non-RW texture must be an r-value
OpExecutionMode Entry Point <id> '
OpExecutionModeId is only valid when the Mode operand is an execution mode that takes Extra Operands that are id operands.
OpExecutionMode is only valid when the Mode operand is an execution mode that takes no Extra Operands, or takes Extra Operands that are not id operands.
OpExtInst set Id 
OpFunctionCall Argument <id> '
OpFunctionCall Function <id> '
OpFunctionCall Function <id>'s parameter count does not match the argument count.
OpFunctionCall Result Type <id> '
OpFunctionEnd inside basic block
OpFunctionEnd without corresponding OpFunction
OpFunction Function Type <id> '
OpFunctionParameter 
OpFunctionParameter Result Type <id> '
OpFunction Result Type <id> '
OpGroupDecorate Decoration group <id> '
OpGroupDecorate is not allowed in the WebGPU execution 
OpGroupDecorate may not target OpDecorationGroup <id> '
OpGroupMemberDecorate Decoration group <id> '
OpGroupMemberDecorate is not allowed in the WebGPU execution 
OpGroupMemberDecorate Structure type <id> '
OpImageQueryLod requires DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model
OpImageQueryLod requires Fragment or GLCompute execution model
OpImageRead, OpImageWrite, OpImageSparseFetch and 
OpImageSparseRead
OpIsHelperInvocationEXT requires Fragment execution model
OpKill requires Fragment execution model
OpLabel inside basic block
OpLabel outside function
OpLine Target <id> '
OpLoad Pointer <id> '
OpLoad Result Type <id> '
OpLoad type for pointer <id> '
OpLoopMerge must be the second-to-last instruction in 
OpLoopMerge must immediately precede either an 
OpMemberDecorate decoration  '
OpMemberDecorate Structure type <id> '
OpMemberName Member <id> '
OpMemberName Type <id> '
OpMemoryModel should only be provided once.
// OpModuleProcessed 
OpPhi does not have an equal number of incoming values and basic blocks.
OpPhi must appear within a non-entry block before all 
OpPhi's incoming basic block <id> 
OpPhi's number of incoming blocks (
OpPhi's result type <id> 
OpReturn can only be called from a function with void 
OpReturnValue Value <id> '
OpReturnValue value's type <id> '
OpSelectionMerge must be the second-to-last 
OpSelectionMerge must immediately precede either an 
OpSpecConstant opcode table out of sync
OpSpecConstantOp opcode
OpStore Object <id> '
OpStore Pointer <id> '
OpStore type for pointer <id> '
optimize
optimize pragma syntax is incorrect
Optional Image Operands are not allowed in the OpenCL 
OpTypeArray Element Type <id> '
OpTypeArray Length <id> '
OpTypeCooperativeMatrixNV Cols <id> '
OpTypeCooperativeMatrixNV Component Type <id> '
OpTypeCooperativeMatrixNV Rows <id> '
OpTypeCooperativeMatrixNV Scope <id> '
OpTypeFunction may not take more than 
OpTypeFunction Parameter Type <id> '
OpTypeFunction Return Type <id> '
OpTypeInt has invalid signedness:
OpTypePointer Type <id> '
OpTypeRuntimeArray.
OpTypeRuntimeArray Element Type <id> '
OpTypeRuntimeArray must be decorated with Block if it 
OpTypeRuntimeArray must be decorated with BufferBlock 
, OpTypeRuntimeArray must only be used for the last member of an OpTypeStruct
OpTypeSampledImage, OpTypeAccelerationStructureNV, 
OpTypeStruct Member Type <id> '
, OpTypeStruct must not contain an opaque type.
OpTypeVector Component Type <id> '
 OpTypeVector. Found Op
OpUndef is disallowed
OpVariable 
OpVariable, <id> '
OpVariable Initializer <id> '
OpVariable Result Type <id> '
OpVariable storage class cannot be Generic
OpVectorShuffle component literals count does not match Result Type <id> '
, or }
or 0 for an integer type with Signedness of 0, 
or@9P}@
or an array of one of these types.
Ordered
Ordered constructor wrapped type has no default constructor.
 or earlier
OriginLowerLeft
origin_max_delta
origin_relative
origin_upper_left
OriginUpperLeft
 or Op
 (or requires extension)
 (or requires extension or capability)
or scalar: 
or scalar type: 
or sign extended when Signedness is 1
or storage buffer
orV?O
oRV?Ok
oS,@Lc
Other warnings have been suppressed.
o!T?OB
, out 
,out 
outer product
outerProduct
OuterProduct
out float gl_ClipDistance[];
out for stage outputs
out gl_MeshPerVertexNV {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];float gl_CullDistance[];perviewNV vec4 gl_PositionPerViewNV[];perviewNV float gl_ClipDistancePerViewNV[][];perviewNV float gl_CullDistancePerViewNV[][];} gl_MeshVerticesNV[];
out gl_PerVertex {highp vec4  gl_Position;highp float gl_PointSize;};
out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;};
out highp int gl_PrimitiveID;out highp int gl_Layer;
out int gl_FragStencilRefARB;
};out int gl_PrimitiveID;out int gl_Layer;
out int gl_ViewportIndex;
out int gl_ViewportIndex;out int gl_Layer;
out int gl_ViewportMask[];out int gl_SecondaryViewportMaskNV[];out vec4 gl_SecondaryPositionNV;out vec4 gl_PositionPerViewNV[];out int  gl_ViewportMaskPerViewNV[];
out int  gl_ViewportMask[];out vec4 gl_SecondaryPositionNV;out int  gl_SecondaryViewportMaskNV[];out vec4 gl_PositionPerViewNV[];out int  gl_ViewportMaskPerViewNV[];
out of memory
Out of Memory
Out of memory processing zTXt chunk
Out of memory while processing sCAL chunk
Out of memory while processing sPLT chunk
Out of memory while processing unknown chunk
Out of place cHRM chunk
Out of place gAMA chunk
Out of place iCCP chunk
Out of place IHDR
Out of place sBIT chunk
Out of place sRGB chunk
Out of place tIME chunk
Out of range gamma value ignored
output blocks cannot be used in a task shader
Output file write error --- out of disk space?
output gamma out of expected range
OutputLinesNV
OutputLineStrip
OutputMemory
OutputMemoryKHR
Output memory size is zero
OutputPatch
OutputPoints
output primitive = 
output primitive geometry redefinition
OutputTrianglesNV
OutputTriangleStrip
OUTSTANDING_HOOKUP_REQUEST 
out uint gl_PrimitiveCountNV;out uint gl_PrimitiveIndicesNV[];in uint gl_MeshViewCountNV;in uint gl_MeshViewIndicesNV[4];const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;
out uint gl_TaskCountNV;const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;in uint gl_MeshViewCountNV;in uint gl_MeshViewIndicesNV[4];
out vec4 gl_ClipVertex;
	o.vColor = v.vColor;							
Overflow of the sheet cache texture. Releasing and starting over. This is ok in asset browser, not so ok if the game is triggering this!
Overflow of the sheet cache texture: Try increasing SheetCacheTextureRows in gameinfo.gi (current value %d)!
overlapping offsets at
overlapping use of location
 overlaps previous member ending at offset 
overloaded functions must have the same parameter precision qualifiers for argument
overloaded functions must have the same parameter storage qualifiers for argument
overloaded functions must have the same return type
Override default %s Vulkan GPU memory pool size: %d MB (default: %d MB)
	o.vProjPos.w = 1.0;								
	o.vProjPos.xyz = v.vProjPos;					
	o.vTexCoordScaleOffset = v.vTexCoordScaleOffset;
	o.vTexCoord = v.vTexCoord;						
!OZW?O
p6aVA
P6hW@
p6%pD9
	p@9(p@9
"pA3QuW
pack64
PackDouble2x32
packed
PACKED
PackHalf2x16
pack_matrix
packoffset
PackSnorm2x16
PackSnorm4x8
PackUnorm2x16
PackUnorm4x8
PanoramaTextServices001
PanoramaUIClient001
PanoramaUIEngine001
PARALLEL_PROCESS tinyexr_impl.cpp:163
PARALLEL_PROCESS utlsoacontainer.cpp:2533
param
parameter_declaration
parameter_declarator
parameter error
parameter_type_specifier
parenthesized array constructor not allowed
ParseEXRHeaderFromMemory failed! Error message: %s
ParseEXRHeaderFromMemory() failed! Error message: %s
Parser encountered %i errors parsing compile targets expression "%s"
partial_count
PartialCount
PartialCount and DontUnroll loop controls must not both be specified
PARTICLE_DEPTH_FEATHERING_OFF
PARTICLE_DEPTH_FEATHERING_ON_OPTIONAL
particles/
PARTICLE_SET_REPLACE_VALUE
PARTICLE_SET_SCALE_CURRENT_VALUE
PARTICLE_SET_SCALE_INITIAL_VALUE
ParticleSystemMgr003
partition
PartitionedExclusiveScanNV
PartitionedInclusiveScanNV
PartitionedReduceNV
>PASS name
PATCH
patchconstantfunc
patch constant function not found
@patchConstantOutput
@patchConstantResult
patch out highp vec4 gl_BoundingBox[2];
Path Overflow, must be less than 260 characters.
PAYLOADINNV
payload number
PAYLOADNV
PC SM 3.0
PC_SM_3_0
PC_SM_3_0_GL
PC SM 3.0 (GLSL)
PC_SM_4_0
PC SM 4.0 (D3D10)
PC_SM_4_0_GL
PC SM 4.0 (GLSL)
PC SM 4.0 (VULKAN)
PC_SM_4_0_VULKAN
PC_SM_4_1
PC SM 4.1 (D3D10.1)
PC_SM_4_1_GL
PC SM 4.1 (GLSL)
PC SM 4.1 (VULKAN)
PC_SM_4_1_VULKAN
PC_SM_5_0
PC SM 5.0 (D3D11)
PC_SM_5_0_GL
PC SM 5.0 (GLSL)
PC SM 5.0 (VULKAN)
PC_SM_5_0_VULKAN
 pD9@
peel_count
PeelCount
PeelCount and DontUnroll loop controls must not both be specified
PERCENT
Percentage of heap budget used when we are in a critical state.
PERFORMANCE
Perf Warning End Convert image 2 format %dX%d %d mipCount
Perf Warning Start Convert image 2 format %s=>%s %dX%d %d mipCount
PERF WARNING: Texture pool size set to more than 80%% of total GPU memory.
 perprimitiveNV
PERPRIMITIVENV
perprimitiveNV out gl_MeshPerPrimitiveNV {int gl_PrimitiveID;int gl_Layer;int gl_ViewportIndex;int gl_ViewportMask[];perviewNV int gl_LayerPerViewNV[];perviewNV int gl_ViewportMaskPerViewNV[][];} gl_MeshPrimitivesNV[];
PerTaskNV
PERTASKNV
PERVERTEXNV
PerViewAttributesNV
 perviewNV
PERVIEWNV
pExt->vkCreateDescriptorUpdateTemplateKHR( m_pDeviceVulkan, &descriptorUpdateTemplateCreateInfo, NULL, &pPipelineOut->m_pDescriptorUpdateTemplate )
@PEy 
PF_BIAS_TYPE_EXPONENTIAL
PF_MAP_TYPE_MULT
PF_MAP_TYPE_REMAP
PF_MAP_TYPE_REMAP_BIASED
PF_RANDOM_MODE_VARYING
PF_TYPE_CONTROL_POINT_COMPONENT
PF_TYPE_LITERAL
PF_TYPE_PARTICLE_AGE_NORMALIZED
PF_TYPE_RANDOM_UNIFORM
PGFault delta
 = Phi[%
Phi candidates:
physgun_interactions
Physical32
Physical64
PhysicalStorageBuffer
PhysicalStorageBuffer64
PhysicalStorageBuffer64EXT
PhysicalStorageBufferAddresses
PhysicalStorageBufferAddressesEXT
PhysicalStorageBufferEXT
PhysicalStorageBufferEXT must not be used with OpVariable.
Physics2 Interface Old v0.5
PhysicsBodyMarkup
PhysicsBoneMarkup
PhysicsBuilderMgr001
PhysicsFile
PhysicsFileReference
PhysicsHullFile
PhysicsHullFromRender
PhysicsMeshFile
physicsmode
PhysicsShapeCapsule
PhysicsShapeHull
PhysicsShapeMesh
PhysicsShapeSphere
Pi+8k
Pip8 ~
Pip8cH
Pip8H
pipe(
Pipeline cache data not found.  Deleting %s.
Pipeline Dump
pipelineLayoutTable
Pipes
pipe_storage
pixelAspectRatio
"pixelAspectRatio" attribute not found in the header.
pixel_center_integer
PixelCenterInteger
pixel_interlock_ordered
PixelInterlockOrderedEXT
pixel_interlock_unordered
PixelInterlockUnorderedEXT
Pixel Shader
Pixel Shader Render State
P,@L 
placement_attach
placement_bone
placement_mode
Plat_DebugPrint
Plat_ExitProcess
Plat_FloatTime
Plat_GetClockStart
Plat_GetCPUFrequency
Plat_GetEnv
Plat_GetMonitorResolution
Plat_GetOSType
Plat_GetThreadIndex
Plat_GetWindowClientSize
Plat_GetWindowContentsScale
Plat_GlobalMemoryStatus
Plat_IsHighDPI
Plat_IsInDebugSession
Plat_IsWindowMinimized
Plat_MessageBox
Plat_NeedsLowFragmentation
Plat_OsSpecificHandleToPlatWindow
Plat_ReconfigureWindow
Plat_RelativeTicks
Plat_RequireSDL
Plat_ShouldCollectMiniDumpsForFatalErrors
Plat_TicksAfterSecsF
Plat_UUIDFromString
Plat_UUIDToString
Plat_WindowToOsSpecificHandle
play_endcap
PlusUconst
	PMB Type ( %s ): Count ( %d ) ( %llu MB ) 
png_do_encode_alpha: unexpected call
png_do_quantize returned rowbytes=0
png_do_rgb_to_gray found nongray pixel
PNG file corrupted by ASCII conversion
png_inflate logic error
png/jpg
PNG load error %s
png_set_background
png_set_gAMA
PNG unsigned integer out of range
point0
point1
Pointer can only be converted to another pointer, int scalar or 32-bit int vector: 
Pointer can only be converted to another pointer or int scalar: 
pointer definition.
Pointer operand 
Pointer storage class must be PhysicalStorageBufferEXT: 
Pointer type in OpTypeForwardPointer is not a pointer type.
point_mode
PointMode
PointStream
Pool: %s (Free: %0.2f MB)
Pool Type ( %s ): 
popcount
position
@position
positiont
POSIX
Possible extensions include:
possibly multi-word literal integer
possibly multi-word literal number
post_coverage_coverage
Post-Decrement
post depth coverage
post_depth_coverage requires early_fragment_tests
postfix_expression
Post-Increment
PostProcessingSystem_001
Potential overflow in png_zalloc()
P*Pi+x
<p:!.Q
#pragma
#pragma 
	 #pragma once
#pragma use_variable_pointers
precise
PRECISE
precise_qualifier
precise qualifier must appear first
precision
         "precision mediump int; precision highp float;"
precision_qualifier
precision qualifier must appear as last qualifier
Precision qualifiers must match:
precision statement
Predecessors for 
Pre-Decrement
predefined names can't be (un)defined:
preferred_carryangles
Prefer shader loop unrolling.
prefetch
Pre-Increment
-preloadtextures
Premature end of input file
Premature end of JPEG file
preprocessor directive cannot be preceded by another token
preprocessor evaluation
Presence of invariant qualifier must match:
Presence of precise qualifier must match:
Present
PreviewAttachmentModel
PreviewBoneAttachedModel
PreviewBoneMergedModel
PreviewPreset
PreviewPresetList
Previous allocation with memoryRequirements.memoryTypeBits=0x%x was from heap %d (propertyFlags: 0x%x) with requested propertyFlags 0x%x, trying in heap %d (propertyFlags: 0x%x) with requested propertyFlags 0x%x.
p?RGB565
primary_expression
PrimitiveId
printf
Prints out detailed memory fragmentation stats for the Vulkan memory manager
Prints out stats for the Vulkan Framebuffer manager
Prints out stats for the Vulkan memory manager
Prints out stats for the Vulkan Pipeline manager
Prints out stats for the Vulkan shader table
Prior to SPIR-V 1.4, specialization constant operation UConvert requires Kernel capability or extension SPV_AMD_gpu_shader_int16
private-to-local
*** Problem remapping texture reference!
Process2DQuadTessFactorsAvg
Process2DQuadTessFactorsMax
Process2DQuadTessFactorsMin
ProcessIsolineTessFactors
ProcessQuadTessFactorsAvg
ProcessQuadTessFactorsMax
ProcessQuadTessFactorsMin
ProcessTriTessFactorsAvg
ProcessTriTessFactorsMax
ProcessTriTessFactorsMin
Profile size field missing from iCCP chunk
 Profile specification
Program MD5 is out of date with features! If you recompiled shaders in the background, reload shaders now! %s
Program MD5 is out of date with features! %s
Programmer Error! Static combo not loaded!
propagate-line-info
propagate-lines
prop_data
PropertyEditorSystem_001
protected
 provided in OpGroupMemberDecorate for struct <id> 
 provided in OpMemberDecorate for struct <id> 
ps_3_0
ps_4_0
ps_4_1
ps_5_0
psize
	PSO Count ( %d ) 
PS_RENDER_STATE
_psrs
pthread_create
pthread_getspecific
pthread_key_create
pthread_mutexattr_init
pthread_mutexattr_settype
pthread_mutex_destroy
pthread_mutex_init
pthread_mutex_lock
pthread_mutex_unlock
pthread_once
pthread_setspecific
_ptr_
ptr( 0x%p )
PtrCastToGeneric
PtrDiff
PtrEqual
PtrNotEqual
public
../public/ordered_constructor.h
../public/tier0/tslist.h
../public/tier1/utlblockmemory.h
../public/tier1/utlfixedmemory.h
../public/tier1/utlleanvector.h
../public/tier1/utllinkedlist.h
../public/tier1/utlrbtree.h
PushConstant
PushConstant id '
PushConstant OpVariable <id> '
pushConstantRanges
PVEC_TYPE_LITERAL
PVEC_TYPE_LITERAL_COLOR
Pvfx_shader_file.cpp
_!@q	
&@)@Q
Q0&	S
Q1iq8Rir8`i`8
_	Q?9
qaI	T
Q(aNf(!
QAngle
q`bJ9
qb"J9a.J9
QC-nhj
qcRFy
QE9H!
q	h(8
qi"?)
qI#?)
q i181
Q(i*8
Qi"A)`
*QI@)A
q@I	T
Qj$xij0
Qj/xnj0
q?k58
q?k(8,
Qkj*x+
Q/!OJ
QuadReadAcrossDiagonal
QuadReadAcrossX
QuadReadAcrossY
QuadReadLaneAt
quads
Quads
Qualcomm
qualifier has no effect on non-output parameters
Quantization table 0x%02x was not defined
QuantizeToF16
Quantizing to %d colors
Quantizing to %d = %d*%d*%d colors
QuarterSizeAttrWithBoxFilter
Quaternion
QUESTION
queued
QueuedLoaderVersion001
QueueFamily
 queuefamilycoherent
QUEUEFAMILYCOHERENT
QueueFamilyKHR for OpAtomic* operations
q$;@z
R11_EAC
r11f_g11f_b10f
R11fG11fB10f
R16F_EXPAND
r16_snorm
R16Snorm
r16ui
R16ui
R32ui
R32_UINT
R8G8B8A8_ETC2_EAC
R8G8B8_ETC2
r8_snorm
R8Snorm
r@9hs
R	!A9)
RadianEuler
radians
Radians
radius0
radius1
r)AIJ)
raise
Ran out of occlusion query slots.
r(aN#V
Rasterizer state is VK_POLYGON_MODE_LINE but VkPhysicalDeviceFeatures.fillModeNonSolid is not supported.  Forcing to VK_POLYGON_MODE_FILL.  May result in incorrect rendering.
ray-generation
RayGenerationNV
rayPayloadInNV
rayPayloadInNV block
rayPayloadNV
rayPayloadNV block
RayTracingNV
R channel not found
Rcic8Z
 reached non-composite type while indexes still remain to be traversed.
Reached non-composite type while indexes still remain to be traversed.
ReadClockKHR
Read Error
Read failed on temporary file
readFirstInvocation
readFirstInvocationARB
Read from EMS failed
Read from XMS failed
Reading a token: 
readInvocation
readInvocationARB
 readonly
ReadOnly
READONLY
Read palette index exceeding num_palette
readpixels_staging_mem
read storage image
 ReadToken overflow
Real:
Rebalancing command buffer pools. Largest has %d command buffers, rebalancing to size %d command buffers
recenter_on_parent_bone
Recorded:
RecurrentAddExpr
Recursion detected:
RecursiveLoadFromBuffer:  got conditional between key and value
RecursiveLoadFromBuffer:  got empty keyname
RecursiveLoadFromBuffer:  got EOF instead of keyname
RecursiveLoadFromBuffer:  got } in key
RecursiveLoadFromBuffer:  got NULL key
RecursiveLoadFromBuffer:  recursion overflow
redeclaration of array with a different array dimensions or sizes
redeclaration of array with a different element type
redeclaration of array with size
redeclaration only allowed for override_coverage layout
redeclaration only allowed for viewport_relative or secondary_view_offset layout
redeclaring non-array as array
redefinition of built-in function
reduce-load-size
Reduce texture memory pool size when this percentage of the budget is full.
Reducing stack by rule %d (line %lu):
reference conversion to uvec2
Reflect
refract
Refract
RegisterConfigValue: Unknown error constructing config value "%s"!
__register_frame
__register_frame_info
__register_frame_info_bases
__register_frame_info_table
__register_frame_info_table_bases
__register_frame_table
RegisterHibernationListener
register number description
RegisterStringToken
reinterpret_cast
Reject swapchain blit request to swapchain that is no longer valid.
.rela.dyn
.rela.plt
relational_expression
relative_angles
relative_origin
relaxed 
relaxed-errors
RelaxedPrecision
relax-float-ops
ReleaseEvent
ReleaseThreadHandle
remainder
RemoveBoneAndChildren
remove-duplicates
remquo
RENDER_BUFFER_APPEND_CONSUME_BUFFER
RENDER_BUFFER_BYTEADDRESS_BUFFER
RenderBufferFlags_t
RENDER_BUFFER_STRUCTURED_BUFFER
RENDER_BUFFER_UAV_COUNTER
RENDER_BUFFER_USAGE_INDEX_BUFFER
RENDER_BUFFER_USAGE_SHADER_RESOURCE
RENDER_BUFFER_USAGE_UNORDERED_ACCESS
RENDER_BUFFER_USAGE_VERTEX_BUFFER
rendercontextbase.cpp
RenderDevice003
renderdevicebase.cpp(1487): 
renderdevicebase.cpp(1648): 
renderdevicebase.cpp(3112): 
renderdevicebase.cpp(644): 
renderdevicebase.cpp(918): 
renderdevicebase.cpp(935): 
Render Device Empty
RenderDeviceMgr001
renderdevicemgrbase.cpp
RenderHardwareConfig002
RenderInputLayoutField_t
RenderMeshFile
RENDER_MULTISAMPLE_16X
RENDER_MULTISAMPLE_2X
RENDER_MULTISAMPLE_4X
RENDER_MULTISAMPLE_6X
RENDER_MULTISAMPLE_8X
RENDER_MULTISAMPLE_INVALID
RENDER_MULTISAMPLE_NONE
RENDER_MULTISAMPLE_TYPE_COUNT
RenderMultisampleType_t
	Renderpass Count Count ( %d ): 
RENDER_PRIM_10_CONTROL_POINT_PATCHLIST
RENDER_PRIM_11_CONTROL_POINT_PATCHLIST
RENDER_PRIM_12_CONTROL_POINT_PATCHLIST
RENDER_PRIM_13_CONTROL_POINT_PATCHLIST
RENDER_PRIM_14_CONTROL_POINT_PATCHLIST
RENDER_PRIM_15_CONTROL_POINT_PATCHLIST
RENDER_PRIM_16_CONTROL_POINT_PATCHLIST
RENDER_PRIM_17_CONTROL_POINT_PATCHLIST
RENDER_PRIM_18_CONTROL_POINT_PATCHLIST
RENDER_PRIM_19_CONTROL_POINT_PATCHLIST
RENDER_PRIM_1_CONTROL_POINT_PATCHLIST
RENDER_PRIM_20_CONTROL_POINT_PATCHLIST
RENDER_PRIM_21_CONTROL_POINT_PATCHLIST
RENDER_PRIM_22_CONTROL_POINT_PATCHLIST
RENDER_PRIM_23_CONTROL_POINT_PATCHLIST
RENDER_PRIM_24_CONTROL_POINT_PATCHLIST
RENDER_PRIM_25_CONTROL_POINT_PATCHLIST
RENDER_PRIM_26_CONTROL_POINT_PATCHLIST
RENDER_PRIM_27_CONTROL_POINT_PATCHLIST
RENDER_PRIM_28_CONTROL_POINT_PATCHLIST
RENDER_PRIM_29_CONTROL_POINT_PATCHLIST
RENDER_PRIM_2_CONTROL_POINT_PATCHLIST
RENDER_PRIM_30_CONTROL_POINT_PATCHLIST
RENDER_PRIM_31_CONTROL_POINT_PATCHLIST
RENDER_PRIM_32_CONTROL_POINT_PATCHLIST
RENDER_PRIM_3_CONTROL_POINT_PATCHLIST
RENDER_PRIM_4_CONTROL_POINT_PATCHLIST
RENDER_PRIM_5_CONTROL_POINT_PATCHLIST
RENDER_PRIM_6_CONTROL_POINT_PATCHLIST
RENDER_PRIM_7_CONTROL_POINT_PATCHLIST
RENDER_PRIM_8_CONTROL_POINT_PATCHLIST
RENDER_PRIM_9_CONTROL_POINT_PATCHLIST
RENDER_PRIM_COMPUTE_SHADER
RENDER_PRIM_HETEROGENOUS
RENDER_PRIM_INSTANCED_QUADS
RenderPrimitiveType_t
RENDER_PRIM_LINES
RENDER_PRIM_LINE_STRIP
RENDER_PRIM_LINE_STRIP_WITH_ADJACENCY
RENDER_PRIM_LINES_WITH_ADJACENCY
RENDER_PRIM_POINTS
RENDER_PRIM_TRIANGLES
RENDER_PRIM_TRIANGLE_STRIP
RENDER_PRIM_TRIANGLE_STRIP_WITH_ADJACENCY
RENDER_PRIM_TRIANGLES_WITH_ADJACENCY
RENDER_PRIM_TYPE_COUNT
RenderService_001
RENDER_SLOT_INVALID
RENDER_SLOT_PER_INSTANCE
RENDER_SLOT_PER_VERTEX
RenderSlotType_t
__RenderStateLiteral__
RenderSystem
RenderSystem/AllowSampleableDepthInVr
RenderSystem/AlwaysPreloadTexturesInGame
#RenderSystem_CannotCreateDevice
Rendersystem/SheetCacheTextureCols
RenderSystemSurface001
RenderSystem/SwapChainSampleableDepth
-rendersystem_thread_mode
#RenderSystem_UnableToStartGame
rendersystemvulkan
RenderSystem/VulkanLazilyAllocateRenderTargets
RenderSystem/VulkanMutableSwapchain
RenderSystem/VulkanOnly
RenderSystem/VulkanPoolSize%s
RenderSystem/VulkanSceneSystemJobCost
RenderSystem/VulkanUseExternalSubpassDependency
RenderSystem/VulkanUseSecondaryCommandBuffers
RenderSystem/VulkanUseStreamingTextureManager
RenderSystem/VulkanUseTransformConstantBuffer
RenderTarget
RenderUtils_001
Repeat
RepeatMirrored
replace-invalid-opcode
replicated
replicated qualifiers
reportIntersectionNV
ReportIntersectionNV
Requested 
Requested feature was omitted at compile time
Requested memory properties that are not supported for this allocation. Requested (%x).
require
required extension not requested:
Required Vulkan extension "%s" is not supported. Please update your Vulkan driver.
 requires 
Requires
requires an input_attachment_index layout qualifier
 requires a previous definition
requires a scalar
 requires a type
 requires a variable pointers capability
requires a view array dimension
requires block, or sampler/image, or atomic-counter type
 requires capability InterpolationFunction
Requires%d
Requires%d( 
 requires Kernel capability
requires local_size_x and local_size_y to be multiple of two
 requires one of the following extensions: 
 requires one of these capabilities: 
) requires one of these extensions: 
 requires Shader capability
requires SPIR-V 1.3
) requires SPIR-V version 
 requires the Vector16 capability
requires total group size to be multiple of four
requires uniform or buffer storage qualifier
ReservedReadPipe
Reserved word.
ReservedWritePipe
reserve_id
resolve
ResolveLayout
ResourceCompilerSystem001
ResourceHandleUtils001
ResourceManifestRegistry001
resource-set-binding
resourcesystem
ResourceSystem013
RESOURCE_TYPE_TEXTURE
 restrict
Restrict
RESTRICT
RestrictPointer
RestrictPointerEXT
RestrictType
ResType
result ID
Result <id> '
Result <id> from OpSampledImage instruction must not appear as operand for Op
Result <id> from OpSampledImage instruction must not appear as operands of Op
Result id of OpDecorationGroup can only 
Result Type does not logically match the Operand type
Result Type has 
Result type is not defined.
Result Type must be an integer scalar
Result Type must be OpTypeBool
Result Type must not equal the Operand type
 result type (Op
Result type (Op
Result Type's second member
Result Type vector size: 
RetainEvent
RETURN
	return g_tMSAASrctexture.Load( vSamplePos, 0 );					
	return g_tMSAASrctexture.Load( vSamplePos, 0 ).x;				
	return g_tSrctexture.Load( int3( vSamplePos, 0 ) );				
	return g_tSrctexture.SampleLevel( g_sSrcSampler, i.vTexCoord.xy, 0 );
returning error texture in CTextureManagerVulkan::GetTextureResource
	return i.vColor;                                
ReturnJobManualEventToPool
	return o;										
ReturnValue
reversebits
r_frame_sync_enable
r_fullscreen_gamma
RG11_EAC
RG1616
RG1616F
RG1616F_EXPAND
rg16f
Rg16f
rg16i
Rg16i
rg16_snorm
Rg16Snorm
rg16ui
Rg16ui
RG3232F
rg32f
Rg32f
rg32i
Rg32i
rg32ui
Rg32ui
rg8_snorm
Rg8Snorm
rg8ui
Rg8ui
rgb10_a2
Rgb10A2
rgb10_a2ui
Rgb10a2ui
RGB323232F
RGB888_BLUESCREEN
RGBA1010102
RGBA1010102F_EDRAM
rgba16
Rgba16
RGBA16161616_EDRAM
RGBA16161616_EDRAM_RGBA16161616
RGBA16161616F
RGBA16161616F_EDRAM_RGBA1010102F
RGBA16161616F_EXPAND
RGBA16161616F_EXPAND_EDRAM_RGBA1010102F
rgba16f
Rgba16f
rgba16i
Rgba16i
rgba16_snorm
Rgba16Snorm
rgba16ui
Rgba16ui
RGBA32323232F
rgba32f
Rgba32f
rgba32i
Rgba32i
rgba32ui
Rgba32ui
rgba8
Rgba8
RGBA8888_LINEAR
rgba8i
Rgba8i
rgba8_snorm
Rgba8Snorm
rgba8ui
Rgba8ui
rgb to gray green coefficient
rgb to gray red coefficient
RGBX555
RGBX8888
r_gpu_mem_stats
R_h48S
R#h&8
R	h(8	
~)rhi
r	hi8
R	hi8
rhj)8
rhj)8@
Rhj)8
rhj)8;I
Rhj)8t
rhjh8
Rhjh8
rhjh8h
Rhjh8h
Rhjh8v
rhjhx
Rhjhx
rhj)x
RHkh8
R	i5x
R	i6x
R	i7x
R(i*8
R	i88
RIGHT_ANGLE
right angle bracket
RIGHT_ASSIGN
RIGHT_BRACE
RIGHT_BRACKET
RIGHT_OP
RIGHT_PAREN
right-shift
right shift second child into first child
r(ih8
r	ii8
r	ii8)
R	ii8
r	ii8i	
r	ii8I
riihx
Rijh8
Rijhx
Riji8
r)ijx?
r+ik8
r+ikxk	
R)il8_
Rir8!
ri}	S
r?i*x
R{j(8
rJik8
rJik8_
RJik8
rJik8J	
RJik8J
Rjjhx
rjjixk
R?k88
RKik8
RKikxk	
rkjjxk
RkMKJ,
rljh8
Rljo8
-r_max_device_threads
r_max_texture_pool_size
r)MIJ
r_mipgen_compute_shader
rmjmx
r_multigpu_num_gpus_found
r_multigpu_num_gpus_used
rnd_down
rnd_up
.rodata
rOih8
rootn
rootNode
rotate
Round
roundEven
RoundEven
RoundingModeRTE
RoundingModeRTZ
Row has too many bytes to allocate in memory
row_major
RowMajor
RpE@)`	@
RPip8
r_pipeline_stats_command_flush
r_pipeline_stats_present_flush
r_prefer_loop_unrolling
RSS delta
rs_submit_twice
r_texture_budget_threshold
r_texture_budget_threshold_critical
r_texture_budget_update_period
r_texture_eager_eviction
r_texture_nonstreaming_load
r_texture_nonstreaming_only_fullmipchain
r_texture_pool_size
r_textures_evict_all
r_texture_stream_debug_spew
r_texture_streaming_timesliced
r_texture_stream_mip_bias
r_texture_stream_throttle_amount
r_texture_stream_throttle_count
RTit8
Rtj(8
Rtj(8(
R	t@y?
Ruj(8
rules: A Block or BufferBlock cannot be nested within another Block or BufferBlock. 
_runtimearr_
RuntimeDescriptorArray
RuntimeDescriptorArrayEXT
 runtime-sized array of
/RV7OR
r_validate_texture_streaming
RViv8` 
Rvj(8
=RV?O
/RV?O
=RV?O0
r_wait_on_present
rwbuffer
rwbyteaddressbuffer
RWByteAddressBuffer
rwstructuredbuffer
RWStructuredBuffer
rwstructuredbufferwithcounter
RWTexture
rwtexture1d
RWTexture1D
rwtexture1darray
RWTexture1DArray
rwtexture2d
RWTexture2D
rwtexture2darray
RWTexture2DArray
rwtexture3d
RWTexture3D
Rxjhx
ryjj8
rzj)x
   %s 
"%s" 
(*%s*), 
S,,>,>
   %s 0..0
%s.360%s
S3,	S48
S)5K*j
S6jh8)
S\8	C\8
s))A@9)
s_abs
s_abs_diff
s_add_sat
(%s): ADD %s = %s
SAh 8b>B
%s allocation count overflow
%s allocation count overflow( add %llu + current %llu > max %llu )
%s allocation count overflow( %llu >= %llu )
%s allocation count overflow( %llu > %llu )
 sample
SAMPLE
@sampleCount
Sampled1D
SampledBuffer
SampledCubeArray
sampled_image(
SampledImageArrayDynamicIndexing
SampledImageArrayNonUniformIndexing
SampledImageArrayNonUniformIndexingEXT
Sampled must be 0 in the OpenCL environment.
SampledRect
Sampled Type must be OpTypeVoid in the OpenCL environment.
SampleId
sample_interlock_ordered
SampleInterlockOrderedEXT
sample_interlock_unordered
SampleInterlockUnorderedEXT
sample mask override coverage
SampleMaskOverrideCoverageNV
SampleMaskPostDepthCoverage
sampler1DARRAY
sampler2DARRAY
sampler3DARRAY
sampler3DRect
sampler addressing mode
SampleRateShading
sampler binding not less than gl_MaxCombinedTextureImageUnits
sampler-constructor cannot make an array of samplers
sampler-constructor first argument must be a scalar textureXXX type
sampler-constructor first argument must match type and dimensionality of constructor type
sampler constructor must appear at point of use
sampler-constructor requires two arguments
sampler-constructor second argument must be a scalar type 'sampler'
samplerCUBE
samplerCUBEARRAY
@sampleResultShadow
__samplerExternal2DY2YEXT
SAMPLEREXTERNAL2DY2YEXT
samplerExternalOES
SAMPLEREXTERNALOES
sampler filter mode
sampler/image
sampler/image types can only be used in uniform variables or function parameters:
sampler name
samplers and atomic_uints cannot be output parameters
samplerShadow
SAMPLERSHADOW
sampler_state
SamplerState
SamplerState g_sSrcSampler : register( s0 );						
sampler/texture/image requires layout(binding=X)
@sampleStructTemp
Sampling factors too large for interleaved scan
sAmTb
SaREy
's array element type.
's array length.
SatConvertSToU
SatConvertUToS
saturate
SaturatedConversion
Saved video settings config to '%s'
 says it has 
sBGRA
S_BINDLESS_RUNTIME
scalar block layout
scalarCopy
scalar expected one element:
scalar integer expression required
scalar or vector float type members
scalar-replacement=
--scalar-replacement must have no arguments or a non-negative integer argument
scalar swizzle
scalar, vector, or struct type
sCAL chunk too short
%s called on an immutable constant buffer
's callgraph contains function <id> 
Scan script does not transmit all data
%s: Can't concatenate input layouts with more than %d fields total!
SceneSystem_002
SceneUtils_001
sched_yield
schema
<!-- schema 
; Schema: 
schemabindings.cpp
SchemaSystem_001
SchemaTestExternal_One_001
SchemaTestExternal_Two_001
s_clamp
SClamp
's component type.
SConvert
scope ID
Scope ids must be constant or specialization constant when 
Scope ids must be OpConstant when Shader capability is 
Screen Gamma (only in fullscreen modes)
screenWindowCenter
"screenWindowCenter" attribute not found in the header.
screenWindowWidth
"screenWindowWidth" attribute not found in the header.
SC.	SD:
SCXEyF
%s (%d)
SDDEy)
SDDFy
sdktools/bin/vproj.exe
sdktools/bin/vprojUI.exe
SDL failed to set window gamma ramp: %s
SDPFy
%	S(E
secondary
secondary_view_offset
SecondaryViewportRelativeNV
Seek failed on temporary file
Select
Selected %d colors for quantization
selecting output stream
selection control
selection header
Selection header 
SelectionMerge
selection_rest_statement
selection_statement
selection_statement_nonattributed
Semantics must include exactly one of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
Semantics must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
semEqual and semUnequal must either both include gl_SemanticsVolatile or neither
SEMICOLON
semUnequal must not be gl_SemanticsRelease or gl_SemanticsAcquireRelease
semUnequal must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
Sequence
SequenceFloatParam_t
SequenceMarkup
SequenceMarkupList
sequence_name
sequence_number
sequence number %d too low in sheet file!!!
Sequence of components starting with 
SequentiallyConsistent memory semantics cannot be used with the VulkanKHR memory model.
sequential row overflow
SerializedEntitiesVersion001
SerializeStaticComboWorker
SeriousWarning
server_can_execute
ServerUploadGameStats001
 set=
__SetByArtist__
__SetByArtistAndExpression__
__SET_BY_FEATURE__
set is too large
setjmp
set-spec-const-default-value
setting.
setting.CentroidHack
setting.coop_fullscreen
setting.defaultres
setting.defaultresheight
setting.DisableShaderOptimizations
setting.DXLevel
setting.fullscreen
setting.fullscreen_min_on_focus_loss
setting.HasBrokenPipelineStats
setting.high_dpi
setting.knowndevice
setting.mat_vsync
setting.maxdxlevel
setting.MaxDXLevel
setting.MinDXLevel
setting.nowindowborder
setting.PreferHardwareSync
setting.PreferTexturesInHWMemory
setting.PreferZPrepass
setting.recommendedheight
setting.recommendedwidth
setting.refreshrate_denominator
setting.refreshrate_numerator
setting.resettodefaults
setting.shaderquality
setting.SuppressPixelShaderCentroidHackFixup
setting.Unsupported
SetUserEventStatus
SFm1V
SfREyE
's function parameter count is not zero.
's function return type is not void.
SGIg8!|-
SGIg8A
-sgpu
SGreaterThan
SGreaterThanEqual
S-h,8
s_hadd
Shader attribute "%s" has inconsistent value or type across multiple shaders of a feature combo!
shadercache/vulkan
ShaderClockKHR
Shader file version mismatch.  Expected (%d), Got (%d).
ShaderIDColor
shader input/output
ShaderLayer
ShaderNonUniform
ShaderNonUniformEXT
ShaderRecordBufferNV
shaderrecordnv
shaders.cache
Shader %s doesn't support compile target %s
ShaderSMBuiltinsNV
SHADER_SOURCE
SHADER_SOURCE_ROOT
-shaderstats
ShaderStereoViewNV
shaders/vfx
shader thread state machine violation
Shader version: 
ShaderViewportIndex
ShaderViewportIndexLayerEXT
ShaderViewportIndexLayerNV
ShaderViewportMaskNV
ShadingComplexity
shading_rate_interlock_ordered
ShadingRateInterlockOrderedEXT
shading_rate_interlock_unordered
ShadingRateInterlockUnorderedEXT
ShadingRateNV
shadow1D
shadow1DGradARB
shadow1DLod
shadow1DProj
shadow1DProjGradARB
shadow1DProjLod
shadow2D
shadow2DEXT
shadow2DGradARB
shadow2DLod
shadow2DProj
shadow2DProjEXT
shadow2DProjGradARB
shadow2DProjLod
shadow2DRect
shadow2DRectGradARB
shadow2DRectProj
shadow2DRectProjGradARB
-shadowTargetSize
 -shadowTargetSize forcing nPoolSizeInMb size to %d from %d, bLarge %d, avail %lld
shapeType
SHARED
SHdEy
sheetcache.cpp
sheetcache.cpp(407): 
sheetcachetexture_.vtex
SheetFrameImage_t
SheetSequenceFrame_t
SheetSequence_t
Sheet_t
shift_expression
shift-image-binding
Shifting
ShiftLeftLogical
ShiftRightArithmetic
ShiftRightLogical
shift-sampler-binding
shift-ssbo-binding
shift-texture-binding
shift-uav-binding
shift-UBO-binding
.shstrtab
shuffle2
SI-	*{
S@I`8
SignBitSet
Signed
SignedChar
SignedInt16
SignedInt32
SignedInt8
SignedZeroInfNanPreserve
SignExtend
simple_statement
simplify-instructions
, since it is not specificed as taking an 
sincos
single
single_attribute
single_declaration
singleplayer
single_type_qualifier
%s: Input vector has incorrect length
%s is not a valid flag.  Flag passes should have the form '--pass_name[=pass_args]'. Special flag names also accepted: -O and -Os.
Size (in KBs) above which textures should be allocated in dedicated memory (NV-only).
sizeof
SizeOf
Size operand <id> '
sizeQueryTemp
Sj)	3)
S`JEy
S:ji8HJh
Skipped %d%% of all combos
Skipping vkDestroySurfaceKHR because it can't be called without first doing vkDestroySwapchainKHR.
Skipping vkDestroySwapchainKHR to avoid bug in Android vulkan loader with VK_GOOGLE_display_timing requiring a valid ANativeWindow.
SLASH
's layout.
's layout does not match Object <id> '
SLessThan
SLessThanEqual
Slider
s_mad24
s_mad_hi
s_mad_sat
's matrix column component type.
's matrix column count.
's matrix column type.
s_max
SMax3AMD
's member count.
's member type.
SMid3AMD
s_min
SMin3AMD
S_MOBILE
S_MOLTEN_VK
 smooth
SMOOTH
Smoothing not supported with nonstandard sampling ratios
smoothstep
SmoothStep
s_mul24
SMulExtended
s_mul_hi
SNegate
S`NEy
SnormInt16
SnormInt8
'%s' not supported, vkAllocateDescriptorSets validation errors may be reported.
%s: offset %d, type %x, size %d, index %d, binding %d, stages %d
SoundOpSystem001
SoundOpSystemEdit001
SoundService_001
SoundSystem001
Source2
Source2Client002
Source2ClientPrediction001
Source2ClientUI001
Source2EngineToClient001
Source2EngineToClientStringTable001
Source2EngineToServer001
Source2EngineToServerStringTable001
Source2GameClients001
Source2GameEntities001
Source2Host001
Source2Server001
Source2ServerSerializers002
SourceContinued
source-entrypoint
Source entry point must be "main"
SourceExtension
source_filename
Source memory access must not include MakePointerAvailableKHR
Source operand <id> '
space identifier
SpacingEqual
SpacingFractionalEven
SpacingFractionalOdd
's parameter type.
sparseImageLoad
sparseImageLoadARB
sparseImageLoadLod
sparseImageLoadLodAMD
SparseResidency
sparseTexel
sparseTexelFetch
sparseTexelFetchARB
sparseTexelFetchOffset
sparseTexelFetchOffsetARB
sparseTexelsResident
sparseTexelsResidentARB
sparseTexture
sparseTextureARB
sparseTextureClamp
sparseTextureClampARB
sparseTextureGather
sparseTextureGatherARB
sparseTextureGatherLod
sparseTextureGatherLodAMD
sparseTextureGatherLodOffset
sparseTextureGatherLodOffsetAMD
sparseTextureGatherLodOffsets
sparseTextureGatherLodOffsetsAMD
sparseTextureGatherOffset
sparseTextureGatherOffsetARB
sparseTextureGatherOffsets
sparseTextureGatherOffsetsARB
sparseTextureGrad
sparseTextureGradARB
sparseTextureGradClamp
sparseTextureGradClampARB
sparseTextureGradOffset
sparseTextureGradOffsetARB
sparseTextureGradOffsetClam
sparseTextureGradOffsetClampARB
sparseTextureLod
sparseTextureLodARB
sparseTextureLodOffset
sparseTextureLodOffsetARB
sparseTextureOffset
sparseTextureOffsetARB
sparseTextureOffsetClamp
sparseTextureOffsetClampARB
Spawning %d compile jobs
spawn_motion_disabled
 spec allows BuiltIn FragCoord to be only used for variables with Input storage class. 
 spec allows BuiltIn FragCoord to be used only with Fragment execution model. 
 spec allows BuiltIn FragDepth to be only used for variables with Output storage class. 
 spec allows BuiltIn FragDepth to be used only with Fragment execution model. 
 spec allows BuiltIn FrontFacing to be only used for variables with Input storage class. 
 spec allows BuiltIn FrontFacing to be used only with Fragment execution model. 
 spec allows BuiltIn InstanceIndex to be only used for variables with Input storage class. 
 spec allows BuiltIn InstanceIndex to be used only with Vertex execution model. 
 spec allows BuiltIn VertexIndex to be only used for variables with Input storage class. 
 spec allows BuiltIn VertexIndex to be used only with Vertex execution model. 
 spec BuiltIn FragCoord variable needs to be a 4-component 32-bit float vector. 
 spec BuiltIn FragDepth variable needs to be a 32-bit float scalar. 
 spec BuiltIn FrontFacing variable needs to be a bool scalar. 
 spec BuiltIn InstanceIndex variable needs to be a 32-bit int scalar. 
 spec BuiltIn VertexIndex variable needs to be a 32-bit int scalar. 
 spec BuiltIn WorkgroupSize variable needs to be a 3-component 32-bit int vector. 
SpecConstant
SpecConstantComposite
SpecConstantFalse
SpecConstantOp
SpecConstantTrue
 specialization-constant
specialization-constant id already used
specialization-constant id is too large
Specialization constant must be an integer or floating-point number.
Specialization constant operation 
SpecId
 spec requires DepthReplacing execution mode to be declared when using BuiltIn FragDepth. 
specular
speed
; SPIR-V
SPIR-V 1.0
SPIR-V 1.0 (under OpenCL 1.2 Embedded Profile semantics)
SPIR-V 1.0 (under OpenCL 1.2 Full Profile semantics)
SPIR-V 1.0 (under OpenCL 2.0 Embedded Profile semantics)
SPIR-V 1.0 (under OpenCL 2.0 Full Profile semantics)
SPIR-V 1.0 (under OpenCL 2.1 Embedded Profile semantics)
SPIR-V 1.0 (under OpenCL 2.1 Full Profile semantics)
SPIR-V 1.0 (under OpenGL 4.0 semantics)
SPIR-V 1.0 (under OpenGL 4.1 semantics)
SPIR-V 1.0 (under OpenGL 4.2 semantics)
SPIR-V 1.0 (under OpenGL 4.3 semantics)
SPIR-V 1.0 (under OpenGL 4.5 semantics)
SPIR-V 1.0 (under Vulkan 1.0 semantics)
SPIR-V 1.1
SPIR-V 1.2
SPIR-V 1.2 (under OpenCL 2.2 Embedded Profile semantics)
SPIR-V 1.2 (under OpenCL 2.2 Full Profile semantics)
SPIR-V 1.3 (under Vulkan 1.1 semantics)
SPIR-V 1.3 (under WIP WebGPU semantics)
SPIR-V 1.4
SPIR-V 1.4 (under Vulkan 1.1 semantics)
SPIR-V 1.5
SPIR-V requires location for user input/output
SPIRV-Tools Validation Errors
split-invalid-unreachable
sPLT chunk has bad length
sPLT chunk requires too much memory
sprintf
%s profile; removed in version %d
spv1.0
spv1.1
spv1.2
spv1.3
spv1.5
SPV_AMD_gcn_shader
SPV_AMD_gpu_shader_half_float
SPV_AMD_gpu_shader_half_float_fetch
SPV_AMD_shader_ballot
SPV_AMD_shader_explicit_vertex_parameter
SPV_AMD_shader_fragment_mask
SPV_AMD_shader_image_load_store_lod
SPV_AMD_shader_trinary_minmax
SPV_AMD_texture_gather_bias_lod
SPV_END_OF_STREAM
SPV_ERROR_INTERNAL
SPV_ERROR_INVALID_BINARY
SPV_ERROR_INVALID_CFG
SPV_ERROR_INVALID_DIAGNOSTIC
SPV_ERROR_INVALID_ID
SPV_ERROR_INVALID_LAYOUT
SPV_ERROR_INVALID_LOOKUP
SPV_ERROR_INVALID_POINTER
SPV_ERROR_INVALID_TABLE
SPV_ERROR_INVALID_TEXT
SPV_ERROR_INVALID_VALUE
SPV_ERROR_OUT_OF_MEMORY
SPV_EXT_demote_to_helper_invocation
SPV_EXT_descriptor_indexing
SPV_EXT_fragment_fully_covered
SPV_EXT_fragment_invocation_density
SPV_EXT_fragment_shader_interlock
SPV_EXT_physical_storage_buffer
SPV_EXT_shader_stencil_export
SPV_EXT_shader_viewport_index_layer
SPV_FAILED_MATCH
SPV_GOOGLE_decorate_string
SPV_GOOGLE_hlsl_functionality1
SPV_GOOGLE_user_type
SPV_INTEL_device_side_avc_motion_estimation
SPV_INTEL_media_block_io
SPV_INTEL_shader_integer_functions2
SPV_INTEL_subgroups
SPV_KHR_16bit_storage
SPV_KHR_8bit_storage
SPV_KHR_device_group
SPV_KHR_float_controls
SPV_KHR_multiview
SPV_KHR_no_integer_wrap_decoration
SPV_KHR_physical_storage_buffer
SPV_KHR_post_depth_coverage
SPV_KHR_shader_atomic_counter_ops
SPV_KHR_shader_ballot
SPV_KHR_shader_clock
SPV_KHR_shader_draw_parameters
SPV_KHR_storage_buffer_storage_class
SPV_KHR_subgroup_vote
SPV_KHR_variable_pointers
SPV_KHR_vulkan_memory_model
SPV_NV_compute_shader_derivatives
SPV_NV_cooperative_matrix
SPV_NV_fragment_shader_barycentric
SPV_NV_geometry_shader_passthrough
SPV_NV_mesh_shader
SPV_NV_ray_tracing
SPV_NV_sample_mask_override_coverage
SPV_NV_shader_image_footprint
SPV_NV_shader_sm_builtins
SPV_NV_shader_subgroup_partitioned
SPV_NV_shading_rate
SPV_NV_stereo_view_rendering
SPV_NV_viewport_array2
SPV_NVX_multiview_per_view_attributes
SpvOpCooperativeMatrixLoadNV
SpvOpCooperativeMatrixLoadNV Result Type <id> '
SpvOpCooperativeMatrixStoreNV
SpvOpCooperativeMatrixStoreNV Object type <id> '
SPV_REQUESTED_TERMINATION
SPV_SUCCESS
SPV_UNSUPPORTED
SPV_VALIDATOR_ignore_type_decl_unique
SPV_WARNING
S_%)q
src/public/tier0/platform.h
sRGBA
srgbgammatolinear
sRGBx
s_rhadd
"%s" = "%s"
"%s" (%s)
%s %s (
%s/%s
S.-	S/9
ss_added
ssa-rewrite
  Ss=%d, Se=%d, Ah=%d, Al=%d
(%s): Setting %s to %s
S_SHADER_QUALITY
SSign
*** %s "%s" in %s does not follow the 0..N format!
*** %s "%s" in %s has max(%d) > 254!
*** %s "%s" in %s has min(%d) < 0!
*** %s "%s" in %s has min(%d) > max(%d)!
%s: string format requested %d chars
's struct member count.
%s     subgroupAdd(%s);
%s     subgroupAnd(%s);
%s     subgroupBroadcastFirst(%s);
%s     subgroupBroadcast(%s, uint);
%s     subgroupClusteredAdd(%s, uint);
%s     subgroupClusteredAnd(%s, uint);
%s     subgroupClusteredMax(%s, uint);
%s     subgroupClusteredMin(%s, uint);
%s     subgroupClusteredMul(%s, uint);
%s     subgroupClusteredOr(%s, uint);
%s     subgroupClusteredXor(%s, uint);
%s     subgroupExclusiveAdd(%s);
%s     subgroupExclusiveAnd(%s);
%s     subgroupExclusiveMax(%s);
%s     subgroupExclusiveMin(%s);
%s     subgroupExclusiveMul(%s);
%s     subgroupExclusiveOr(%s);
%s     subgroupExclusiveXor(%s);
%s     subgroupInclusiveAdd(%s);
%s     subgroupInclusiveAnd(%s);
%s     subgroupInclusiveMax(%s);
%s     subgroupInclusiveMin(%s);
%s     subgroupInclusiveMul(%s);
%s     subgroupInclusiveOr(%s);
%s     subgroupInclusiveXor(%s);
%s     subgroupMax(%s);
%s     subgroupMin(%s);
%s     subgroupMul(%s);
%s     subgroupOr(%s);
%s     subgroupPartitionedAddNV(%s, uvec4 ballot);
%s     subgroupPartitionedAndNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveAddNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveAndNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveMaxNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveMinNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveMulNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveOrNV(%s, uvec4 ballot);
%s     subgroupPartitionedExclusiveXorNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveAddNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveAndNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveMaxNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveMinNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveMulNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveOrNV(%s, uvec4 ballot);
%s     subgroupPartitionedInclusiveXorNV(%s, uvec4 ballot);
%s     subgroupPartitionedMaxNV(%s, uvec4 ballot);
%s     subgroupPartitionedMinNV(%s, uvec4 ballot);
%s     subgroupPartitionedMulNV(%s, uvec4 ballot);
%s     subgroupPartitionedOrNV(%s, uvec4 ballot);
%s     subgroupPartitionedXorNV(%s, uvec4 ballot);
%s     subgroupQuadBroadcast(%s, uint);
%s     subgroupQuadSwapDiagonal(%s);
%s     subgroupQuadSwapHorizontal(%s);
%s     subgroupQuadSwapVertical(%s);
%s     subgroupShuffleDown(%s, uint delta);
%s     subgroupShuffle(%s, uint);
%s     subgroupShuffleUp(%s, uint delta);
%s     subgroupShuffleXor(%s, uint);
%s     subgroupXor(%s);
s_sub_sat
S_SUPPORTS_CLIP_DISTANCE
S,S,V1,
St11logic_error
St12length_error
St12out_of_range
St8bad_cast
St9exception
__stack_chk_fail
Stack now
Stack size increased to %lu
StackValue
 stage:
 stage: 
stages must match when linking into a single stage
standard 
 starting at word 
Starting parse
Start Of Frame 0x%02x: width=%u, height=%u, components=%d
Start of Image
Start Of Scan: %d components
statement_scoped
statically used per shader entry point.
static_cast
StaticCombo
StaticComboRule
   StaticComboRule( 
Static combos:
StaticPoolMemory_%s
StaticPool_%s
	Static Type ( %s ): Count ( %d ) ( %llu MB ) ( Free: %llu MB, Largest Free Block %llu MB )
static void CGlobalConfigValueRegistry::HookUpConfigValue(const char *, ConfigType_t, ConfigValueType_t, CConfigValueOptions &&, const void **)
static void CSchemaRegistration::RegisterAllModuleData(ISchemaSystem *)
static void CTextureManagerVulkanNew::RemoveMipLevelsForTextures(const CUtlVector<TextureStreamingPriorityInfo_t> &, uint64, int, uint64, int &, int &, uint64 &)
StatsService_001
St+B)U
std140
std430
std430 requires the buffer storage qualifier
SteamAudio001
StencilExportEXT
StencilRefReplacingEXT
stereo view rendering
S_TOOLS_ENABLED
stop_immediately
stop_instantly
stop_on_seq_change
Storage Buffer
StorageBufferArrayDynamicIndexing
StorageBufferArrayNonUniformIndexing
StorageBufferArrayNonUniformIndexingEXT
Storage buffer id '
StorageBuffer id '
StorageBuffer OpVariable <id> '
StorageBuffer or Uniform.
storage buffer, or variable in Private or Function storage class
StorageBuffer pointer operand 
StorageBuffer, Uniform, or UniformConstant.
StorageClass
Storage class cannot be Generic in OpenCL 1.2 environment
storage classes
storage classes.
: storage class forbidden by universal validation rules.
 storage class for pointer type <id> '
Storage class in OpTypeForwardPointer does not match the 
' storage class is read-only
: storage class must be Function, Workgroup, CrossWorkGroup or Generic in the OpenCL environment.
 storage class must follow 
 storage class requires an additional capability
Storage class semantics must not be zero
StorageImageArrayDynamicIndexing
StorageImageArrayNonUniformIndexing
StorageImageArrayNonUniformIndexingEXT
StorageImageExtendedFormats
StorageImageMultisample
StorageImageReadWithoutFormat
StorageImageWriteWithoutFormat
StorageInputOutput16
StoragePushConstant16
StoragePushConstant8
storage_qualifier
storage qualifier not allowed on function parameter
Storage qualifiers must match:
StorageTexelBufferArrayDynamicIndexing
StorageTexelBufferArrayDynamicIndexingEXT
StorageTexelBufferArrayNonUniformIndexing
StorageTexelBufferArrayNonUniformIndexingEXT
StorageUniform16
StorageUniformBufferBlock16
Store cooperative matrix
storeTemp
storeTempPost
storeTempPre
S_TRANSFORM_CONSTANT_BUFFER
strchr
strcmp
strcpy
strdup
 stream=
stream end
stream error
Streaming Validation: %s 
stream output type
strength-reduction
Stride operand <id> '
string literals not supported
strip-atomic-counter-memory
strip-debug
strip-reflect
strlen
strstr
strtoul
struct-
STRUCT
struct_declaration
struct_declaration_list
struct_declarator
struct_declarator_list
struct DS_INPUT
struct DS_PATCH_CONSTANT_INPUT
struct gl_DepthRangeParameters {
struct gl_TextureFootprint2DNV {uvec2 anchor;uvec2 offset;uvec2 mask;uint lod;uint granularity;};struct gl_TextureFootprint3DNV {uvec3 anchor;uvec3 offset;uvec2 mask;uint lod;uint granularity;};bool textureFootprintNV(sampler2D, vec2, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintNV(sampler3D, vec3, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintNV(sampler2D, vec2, int, bool, out gl_TextureFootprint2DNV, float);bool textureFootprintNV(sampler3D, vec3, int, bool, out gl_TextureFootprint3DNV, float);bool textureFootprintClampNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintClampNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintClampNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV, float);bool textureFootprintClampNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV, float);bool textureFootprintLodNV(sampler2D, vec2, float, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintLodNV(sampler3D, vec3, float, int, bool, out gl_TextureFootprint3DNV);bool textureFootprintGradNV(sampler2D, vec2, vec2, vec2, int, bool, out gl_TextureFootprint2DNV);bool textureFootprintGradClampNV(sampler2D, vec2, vec2, vec2, float, int, bool, out gl_TextureFootprint2DNV);
struct GS_INPUT
struct HS_INPUT
struct HS_OUTPUT
struct HS_PATCH_CONSTANTS
struct member declarations
struct-member initializers ignored
struct PS_INPUT
struct PS_INPUT									
struct PS_INPUT													
struct_specifier
structure 
Structure
structure may not be contained as a member of another 
Structure members may not be self references
Structure Nesting Depth may not be larger than 
Structures cannot contain a void type.
struct VS_INPUT
struct VS_INPUT									
struct VS_OUTPUT									
%s(): Trying to add an empty VS input signature
{ } style initializers
's type.
's type does not match Function <id> '
's type does not match Object <id> '
's type does not match OpFunction's return type.
's type does not match Result Type <id> '
's type does not match Source <id> '
's type is void.
's Type must be a scalar or vector type.
SUB_ASSIGN
sub%dx%d.tga
subgroupAdd
subgroupAll
subgroupAllEqual
SubgroupAllEqualKHR
SubgroupAllKHR
subgroupAnd
subgroupAny
SubgroupAnyKHR
SubgroupAvcBmeInitializeINTEL
SubgroupAvcFmeInitializeINTEL
SubgroupAvcImeAdjustRefOffsetINTEL
SubgroupAvcImeConvertToMcePayloadINTEL
SubgroupAvcImeConvertToMceResultINTEL
SubgroupAvcImeEvaluateWithDualReferenceINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL
SubgroupAvcImeEvaluateWithSingleReferenceINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL
SubgroupAvcImeGetBorderReachedINTEL
SubgroupAvcImeGetDualReferenceStreaminINTEL
SubgroupAvcImeGetSingleReferenceStreaminINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL
SubgroupAvcImeGetTruncatedSearchIndicationINTEL
SubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL
SubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL
SubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL
SubgroupAvcImeInitializeINTEL
SubgroupAvcImeRefWindowSizeINTEL
SubgroupAvcImeSetDualReferenceINTEL
SubgroupAvcImeSetEarlySearchTerminationThresholdINTEL
SubgroupAvcImeSetMaxMotionVectorCountINTEL
SubgroupAvcImeSetSingleReferenceINTEL
SubgroupAvcImeSetUnidirectionalMixDisableINTEL
SubgroupAvcImeSetWeightedSadINTEL
SubgroupAvcImeStripDualReferenceStreamoutINTEL
SubgroupAvcImeStripSingleReferenceStreamoutINTEL
SubgroupAvcMceConvertToImePayloadINTEL
SubgroupAvcMceConvertToImeResultINTEL
SubgroupAvcMceConvertToRefPayloadINTEL
SubgroupAvcMceConvertToRefResultINTEL
SubgroupAvcMceConvertToSicPayloadINTEL
SubgroupAvcMceConvertToSicResultINTEL
SubgroupAvcMceGetBestInterDistortionsINTEL
SubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL
SubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL
SubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL
SubgroupAvcMceGetDefaultInterShapePenaltyINTEL
SubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL
SubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL
SubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL
SubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL
SubgroupAvcMceGetInterDirectionsINTEL
SubgroupAvcMceGetInterDistortionsINTEL
SubgroupAvcMceGetInterMajorShapeINTEL
SubgroupAvcMceGetInterMinorShapeINTEL
SubgroupAvcMceGetInterMotionVectorCountINTEL
SubgroupAvcMceGetInterReferenceIdsINTEL
SubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL
SubgroupAvcMceGetMotionVectorsINTEL
SubgroupAvcMceSetAcOnlyHaarINTEL
SubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL
SubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL
SubgroupAvcMceSetInterDirectionPenaltyINTEL
SubgroupAvcMceSetInterShapePenaltyINTEL
SubgroupAvcMceSetMotionVectorCostFunctionINTEL
SubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL
SubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL
SubgroupAvcMotionEstimationChromaINTEL
SubgroupAvcMotionEstimationINTEL
SubgroupAvcMotionEstimationIntraINTEL
SubgroupAvcRefConvertToMcePayloadINTEL
SubgroupAvcRefConvertToMceResultINTEL
SubgroupAvcRefEvaluateWithDualReferenceINTEL
SubgroupAvcRefEvaluateWithMultiReferenceINTEL
SubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL
SubgroupAvcRefEvaluateWithSingleReferenceINTEL
SubgroupAvcRefSetBidirectionalMixDisableINTEL
SubgroupAvcRefSetBilinearFilterEnableINTEL
SubgroupAvcSicConfigureIpeLumaChromaINTEL
SubgroupAvcSicConfigureIpeLumaINTEL
SubgroupAvcSicConfigureSkcINTEL
SubgroupAvcSicConvertToMcePayloadINTEL
SubgroupAvcSicConvertToMceResultINTEL
SubgroupAvcSicEvaluateIpeINTEL
SubgroupAvcSicEvaluateWithDualReferenceINTEL
SubgroupAvcSicEvaluateWithMultiReferenceINTEL
SubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL
SubgroupAvcSicEvaluateWithSingleReferenceINTEL
SubgroupAvcSicGetBestIpeChromaDistortionINTEL
SubgroupAvcSicGetBestIpeLumaDistortionINTEL
SubgroupAvcSicGetInterRawSadsINTEL
SubgroupAvcSicGetIpeChromaModeINTEL
SubgroupAvcSicGetIpeLumaShapeINTEL
SubgroupAvcSicGetMotionVectorMaskINTEL
SubgroupAvcSicGetPackedIpeLumaModesINTEL
SubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL
SubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL
SubgroupAvcSicInitializeINTEL
SubgroupAvcSicSetBilinearFilterEnableINTEL
SubgroupAvcSicSetBlockBasedRawSkipSadINTEL
SubgroupAvcSicSetIntraChromaModeCostFunctionINTEL
SubgroupAvcSicSetIntraLumaModeCostFunctionINTEL
SubgroupAvcSicSetIntraLumaShapePenaltyINTEL
SubgroupAvcSicSetSkcForwardTransformEnableINTEL
subgroupBallot
subgroupBallotBitCount
subgroupBallotBitExtract
subgroupBallotExclusiveBitCount
subgroupBallotFindLSB
subgroupBallotFindMSB
subgroupBallotInclusiveBitCount
SubgroupBallotKHR
subgroupBarrier
SubgroupBlockReadINTEL
SubgroupBlockWriteINTEL
subgroupBroadcast
subgroupBroadcastFirst
SubgroupBufferBlockIOINTEL
subgroupClusteredAdd
subgroupClusteredAnd
subgroupClusteredMax
subgroupClusteredMin
subgroupClusteredMul
subgroupClusteredOr
subgroupClusteredXor
 subgroupcoherent
SUBGROUPCOHERENT
SubgroupDispatch
subgroupElect
SubGroupEqMask
SubgroupEqMaskKHR
subgroupExclusiveAdd
subgroupExclusiveAnd
subgroupExclusiveMax
subgroupExclusiveMin
subgroupExclusiveMul
subgroupExclusiveOr
subgroupExclusiveXor
SubgroupFirstInvocationKHR
SubGroupGeMask
SubgroupGeMaskKHR
SubGroupGtMask
SubgroupGtMaskKHR
SubgroupId
SubgroupImageBlockIOINTEL
SubgroupImageBlockReadINTEL
SubgroupImageBlockWriteINTEL
SubgroupImageMediaBlockIOINTEL
SubgroupImageMediaBlockReadINTEL
SubgroupImageMediaBlockWriteINTEL
subgroupInclusiveAdd
subgroupInclusiveAnd
subgroupInclusiveMax
subgroupInclusiveMin
subgroupInclusiveMul
subgroupInclusiveOr
subgroupInclusiveXor
subgroupInverseBallot
SubGroupInvocation
SubGroupLeMask
SubgroupLeMaskKHR
SubgroupLocalInvocationId
SubGroupLtMask
SubgroupLtMaskKHR
subgroupMax
SubgroupMaxSize
SubgroupMemory
subgroupMemoryBarrier
subgroupMemoryBarrierBuffer
subgroupMemoryBarrierImage
subgroupMemoryBarrierShared
subgroupMin
subgroupMul
subgroup op
subgroupOr
subgroupPartitionedAddNV
subgroupPartitionedAndNV
subgroupPartitionedExclusiveAddNV
subgroupPartitionedExclusiveAndNV
subgroupPartitionedExclusiveMaxNV
subgroupPartitionedExclusiveMinNV
subgroupPartitionedExclusiveMulNV
subgroupPartitionedExclusiveOrNV
subgroupPartitionedExclusiveXorNV
subgroupPartitionedInclusiveAddNV
subgroupPartitionedInclusiveAndNV
subgroupPartitionedInclusiveMaxNV
subgroupPartitionedInclusiveMinNV
subgroupPartitionedInclusiveMulNV
subgroupPartitionedInclusiveOrNV
subgroupPartitionedInclusiveXorNV
subgroupPartitionedMaxNV
subgroupPartitionedMinNV
subgroupPartitionedMulNV
subgroupPartitionedOrNV
subgroupPartitionedXorNV
subgroupPartitionNV
subgroupQuadBroadcast
subgroupQuadSwapDiagonal
subgroupQuadSwapHorizontal
subgroupQuadSwapVertical
SubgroupReadInvocationKHR
subgroupShuffle
subgroupShuffleDown
SubgroupShuffleDownINTEL
SubgroupShuffleINTEL
subgroupShuffleUp
SubgroupShuffleUpINTEL
subgroupShuffleXor
SubgroupShuffleXorINTEL
SubgroupsPerWorkgroup
SubgroupsPerWorkgroupId
SubgroupVoteKHR
subgroupXor
submrg%dx%d.tga
Subpass %d color attachment %d not found in renderpass attachment list.
Subpass %d input attachment %d not found in renderpass attachment list.
Subpass %d preserve attachment %d not found in renderpass attachment list.
SubpassInput
SubpassInputMS
subpassLoadMS
subroutine
SUBROUTINE
substituting 'mediump'
subtract
subtract second child into first child
Such variables must be identified with a Block decoration
Such variables must be identified with a Block or BufferBlock decoration
Such variables must be typed as OpTypeStruct, 
superp
SUPERP
suppress
suppress-warnings
s_upsample
surface_prop
Suspension not allowed here
%@,S,V
%@,S,V,
%@,S,V,,
%@,S,V,,,
%@,S,V,,,,
S,V2,V4
SV_CLIPDISTANCE
SV_COVERAGE
SV_CULLDISTANCE
SV_DEPTH
SV_DEPTHGREATEREQUAL
SV_DEPTHLESSEQUAL
SV_DISPATCHTHREADID
SV_DOMAINLOCATION
's vector component count.
's vector element type.
SV_GROUPID
SV_GROUPINDEX
SV_GROUPTHREADID
SV_GSINSTANCEID
SV_INSIDETESSFACTOR
SV_INSTANCEID
SV_ISFRONTFACE
SVM,>
SVM,>,>
SVM,,
SVM,,>
SVM,,,>
SVM,S
SVM,,S
SVM,V2
/sV?O
SV_OUTPUTCONTROLPOINTID
SV_POSITION
SV_PRIMITIVEID
SV_RENDERTARGETARRAYINDEX
%@,S,V,S
%@,S,V,,>S
%@,S,V,,,,,S
SV_SAMPLEINDEX
SV_STENCILREF
%@,S,V,S,V
%@,S,V,S,V,,,
%@,S,V,S,V,>S
%@,S,V,S,V,,,,S
%@,S,V,S,V,,V,S
SV_TARGET
SV_TESSFACTOR
%@,S,V,V
SV_VERTEXID
SV_VIEWPORTARRAYINDEX
Swapchain extent(s) are 0, skipping swapchain creation
SwapChainTexture.vtex
%s: Warning: No compile targets specified! Shader will not be compiled!
Switch
SWITCH
switch_statement
switch_statement_list
switch_statement_nonattributed
switch statements
swizzleInvocations
swizzleInvocationsAMD
SwizzleInvocationsAMD
swizzleInvocationsMasked
swizzleInvocationsMaskedAMD
SwizzleInvocationsMaskedAMD
swizzleInvocationsWithPatternAMD
swizzle or member
sx8xz
sY8	5
&*Syg
syntax error
syntax error, unexpected %s
syntax error, unexpected %s, expecting %s
syntax error, unexpected %s, expecting %s or %s
syntax error, unexpected %s, expecting %s or %s or %s
syntax error, unexpected %s, expecting %s or %s or %s or %s
system.fxc
SYS time
s@ysz
T`"07
T#0@9"0
T"0@9#4
T#0@9$4
T$0@9C
T#0@9D4
T0z	S
T#4@9"4
T"4@9#8
T#4@9$8
T#4@9B8
T	4@y?!"kC
T,5D)
T5k@)
T*5@y_
T	5@y?
T*5@y_!7k
T 8@9
T#8@9"8
T 8@9B
T$8@9C 
T"8@9E(
T" @9#$
T"(@9#,
T"$@9#(
T*	@9*
T# @9" 
T# @9$$
T#,@9",
T#(@9
T#(@9"(
T#$@9"$
T#$@9$(
T	!@9)"
T	!@9	<
T	!@9	&
T",@9#0
T#,@9$0
T$ @9C
T$(@9C
T$@@9C$
T$`@9C4
T# @9D$
T#(@9D,
T#$@9D(
T#,@9D0
T#@@9$D@9 H@9cx
T	!@9i
T`.@9s.
T	`A9
Ta[axc
TafEyab
tangents
tangentt
target-env opengl
target-env spirv1.1
target-env spirv1.2
target-env spirv1.3
target-env spirv1.4
target-env spirv1.5
target-env spirvUnknown
target-env vulkan1.0
target-env vulkan1.1
target-env vulkanUnknown
'Target Label' operands for OpBranch must be the ID of an OpLabel instruction
'Target Label' operands for OpSwitch must be IDs of an OpLabel instruction
Target memory access must not include MakePointerVisibleKHR
Target of Component decoration is invalid: must point to a Storage Class of Input(1) or Output(3). Found Storage Class 
Target of Component decoration must be a memory object declaration (a variable or a function parameter)
Target of NonWritable decoration is invalid: must point to a storage image, uniform block, 
Target of NonWritable decoration must be a memory object declaration (a variable or a function parameter)
Target operand <id> '
Target version for SPIRV-Tools validator
 taskNV
taskNV variables can be declared only as blocks
task shaders
T)a@y
T(A@y
T)A@y
TbFEyaJEy?
Tbhd8
tbuffer
Tc"A)`
TCDFy 
TCD@Q
Tcih8
Tc.J9
Tc"L9
T_C@q
T *CUtlLeanVectorImpl<CUtlLeanVectorBase<VfxStaticComboLoadRequest_t, short>, VfxStaticComboLoadRequest_t, short>::AddToTailGetPtr() [B = CUtlLeanVectorBase<VfxStaticComboLoadRequest_t, short>, T = VfxStaticComboLoadRequest_t, I = short]
T *CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<VfxVariableIndexData_t, 2, int>, VfxVariableIndexData_t, int>::AddToTailGetPtr() [B = CUtlLeanVectorFixedGrowableBase<VfxVariableIndexData_t, 2, int>, T = VfxVariableIndexData_t, I = int]
T *CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<VkImageMemoryBarrier, 16, short>, VkImageMemoryBarrier, short>::AddToTailGetPtr() [B = CUtlLeanVectorFixedGrowableBase<VkImageMemoryBarrier, 16, short>, T = VkImageMemoryBarrier, I = short]
Td$@8
T@DEy 
TdFEycJEybNEy
TDh`8%
TDHFy
TDhi8'hi8F
TDId8g
TDPEy$h 8
TeFEyhJEygNEy
Te*L9
Te&L9
tempArg
tempReturn
__temp_unserialization_member__
terminateRayNV
TerminateRayNV
terminator instruction outside basic block
terminator instruction outside function
Tessellation
tessellation control
TessellationControl
tessellation control barrier() cannot be placed after a return from main()
tessellation control barrier() cannot be placed within flow control
tessellation control barrier() must be in main()
tessellation-control per-vertex output l-value must be indexed with gl_InvocationID
tessellation evaluation
TessellationEvaluation
Tessellation execution model entry points can specify at most one of SpacingEqual, SpacingFractionalOdd or SpacingFractionalEven execution modes.
Tessellation execution model entry points can specify at most one of Triangles, Quads or Isolines execution modes.
Tessellation execution model entry points can specify at most one of VertexOrderCw or VertexOrderCcw execution modes.
tessellation input array size must be gl_MaxPatchVertices or implicitly sized
tessellation patch type
TessellationPointSize
tessellation shaders
test_angles_relative
Test condition and select
_test_conversion_counter
tested first
TestFormatA
TestFormatB
TestFormatC
TestFormatD
TestFormatE
TestScriptMgr001
tex1D
tex1Dbias
tex1Dgrad
tex1Dlod
tex1Dproj
tex2D
tex2Dbias
tex2Dgrad
tex2Dlod
tex2Dproj
tex3D
tex3Dbias
tex3Dgrad
tex3Dlod
tex3Dproj
texcoord
texCUBE
texCUBEbias
texCUBEgrad
texCUBElod
texCUBEproj
texelFetch
texelFetchOffset
texel offset
TEXMAN: Abandoning job in %s
TEXMAN: Abandoning streaming request in %s
TEXMAN: Added hookup job for %s
TEXMAN: Adding %s, %llx to abandoned hookup jobs
TEXMAN: CTextureManagerVulkan::LoadStreamingData MarkTextureBitsLoadRequired (%s)
TEXMAN: DeferTextureLoads %s MarkTextureBitsLoaded (%s)
TEXMAN: Deleting %d textures
TEXMAN: Outstanding stream count %d -> %d (%s)
TEXMAN: Posting resource load complete msg.
TEXMAN: %s loaded %s %i/%i mips (%ix%i / %ix%i) of %s (%i bytes)
TEXMAN: %s LoadStreamingData (%s)
TEXMAN: %s MarkTextureBitsLoaded (%s)
TEXMAN: %s %s
TEX read request: %d KB; %s
.text
text compression mode is out of range
TextLayout_001
TextMessageMgr_001
texture1DGradARB
texture1DLod
texture1DProj
texture1DProjGradARB
texture1DProjLod
Texture2D<float4> g_tSrctexture : register( t0 );					
texture2DGradARB
texture2DGradEXT
texture2DLod
texture2DLodEXT
Texture2DMS
Texture2DMSArray
Texture2DMS<float4> g_tMSAASrctexture : register( t0 );			
texture2DProj
texture2DProjGradARB
texture2DProjGradEXT
texture2DProjLod
texture2DProjLodEXT
texture2DRectGradARB
texture2DRectProj
texture2DRectProjGradARB
texture3DGradARB
texture3DLod
texture3DProj
texture3DProjGradARB
texture3DProjLod
texture address mode
texturebase.cpp
texturebase.cpp(1726):Error loading texture: %s
texturebase.cpp(2642):ResourceHandleToData( %s ) failed! Falling back to error texture!
texturebase.cpp(2663):ResourceHandleToData( %s ) failed! Falling back to error texture!
texturebase.cpp(2674):ResourceHandleToData( %s ) failed! Falling back to error texture!
texturebase.cpp(2685):ResourceHandleToData( %s ) failed! Falling back to error texture!
texturebase.cpp(2696):ResourceHandleToData( %s ) failed! Falling back to error texture!
texturebase.cpp(2717):ResourceHandleToData( %s ) failed! Falling back to error texture!
texturebase.cpp(2728):ResourceHandleToData( %s ) failed! Falling back to error texture!
texturebase.cpp(2739):ResourceHandleToData( %s ) failed! Falling back to error texture!
texturebase.cpp(2750):ResourceHandleToData( %s ) failed! Falling back to error texture!
TextureBuffer
textureClamp
textureClampARB
TextureCube
TextureCubeArray
textureCubeGradARB
textureCubeGradEXT
textureCubeLod
textureCubeLodEXT
TextureDimLog2
textureFetch
textureFetchOffset
textureFootprintClampNV
textureFootprintGradClampNV
textureFootprintGradNV
textureFootprintLodNV
textureFootprintNV
textureGather
textureGatherLod
textureGatherLodAMD
textureGatherLodOffset
textureGatherLodOffsetAMD
textureGatherLodOffsets
textureGatherLodOffsetsAMD
textureGatherOffset
textureGatherOffsets
textureGrad
textureGradClamp
textureGradClampARB
textureGradOffset
textureGradOffsetClamp
textureGradOffsetClampARB
textureLod
textureLodOffset
Texture manager doesn't know about texture "%s" - returning error texture in  CTextureManagerVK::GetImageView
Texture manager doesn't know about texture "%s" - returning error texture in CTextureManagerVulkan::GetResourceView
Texture manager out of space! Can't allocate new texture!
Texture memory discrepancy! %llu != %llu
Texture memory limit: %s; in use: %s in %s textures
Texture missing shader resource view - returning error texture in  CTextureManagerVK::GetImageView
Texture missing shader resource view - returning error texture in CTextureManagerVulkan::GetResourceView
textureOffset
textureOffsetClamp
textureOffsetClampARB
textureProj
textureProjGrad
textureProjGradOffset
textureProjLod
textureProjLodOffset
textureProjOffset
textureQueryLevels
textureQueryLod
texture-rectangle sampler keyword
textureSamples
textureSamples(
textureSamples and imageSamples
texturescale
Textures created overall: %s; textures evicted: %s
TextureSheetData
textureSize
 textureSize(
TextureSpecificationFlags_t
TextureStaging
texture state
TEXTURESTREAMING: Extremely low memory: Available mem: %.2f MB, Required: %.2f MB. Kicking out all non-pinned textures.
TEXTURESTREAMING: Filled %d fallback textures in %.3f ms
TEXTURESTREAMING: Resource view ptr or texture resources are still NULL after waiting.
Texture streaming validation OK (%d texture loads in flight).
Texture template struct return slots exceeded
Texture template structure members must same basic type
texture type for multisample
TEX: %u textures, %.2f MB
Tfh!8
TFh`8
TFLFy
tgamma
TGhd8
Th&@)
Th2Dy
T%h`8DPFy
T$h`8EPFy
Th"@9
T#h@9B8
T$H@9C(
THa@9(
TH#A9
that allocate pointers must be in Function or Private 
 that is not a scalar or vector
Th~Ay
T hb8
T#hb8
Thb@9
Thb@9H
ThbC9H
ThBH9h
ThBJy
ThBL9
Th.By
Th~Cy
T*hd8
Th"D9
Th:D9H
Th:Dy
The array member in 
The Base <id> '
The Component Type of Vector 1 must be the same as ResultType.
The Component Type of Vector 2 must be the same as ResultType.
The 'False Label' operand for OpBranchConditional must be the ID of an OpLabel instruction
The filename may only contain lower case alphanumeric characters and underscores.
The following extension must be enabled to use this feature:
The following forward referenced IDs have not been defined:
The high-order bits of a literal number in instruction <id> 
The <id> passed to 
The LinkageAttributes Decoration (Linkage name: 
then statement
The number of indexes in 
The number of indexes in Op
The Object type (Op
there is no such layout identifier for this stage taking an assigned value
There must be at most one object per Storage Class that can contain a structure type containing members decorated with BuiltIn, consumed per entry-point. Entry Point id 
There must be no more than one push constant block 
The result pointer storage class and base pointer storage class in 
The Result Type must be the same as Composite type in Op
The Result Type of 
The Result Type of OpVectorShuffle must be
 the same type as Result Type components
The selected graphics queue does not support presenting a swapchain image.
The selector operand for OpSwitch must be the result of an instruction that generates an integer scalar
These variables must have DescriptorSet and Binding decorations specified
The Signedness in OpTypeInt must always be 0 when Kernel capability is used.
The Struture's last member in 
The Struture's type in 
The 'True Label' operand for OpBranchConditional must be the ID of an OpLabel instruction
The type in 
The type of Vector 1 must be OpTypeVector.
The type of Vector 2 must be OpTypeVector.
The types of Operand 1 and Operand 2 must match
Th#EyH
Thf@9
ThFAy
ThFEygJEyfNEyd
ThF@y
ThG@9h
Thhe8(
@this
this instruction is currently limited to 32-bit width 
. This may be a bug in the validator.
'. This structure has 
THit8
ThJJy
ThJ@y
ThJ@yi
ThN@9
ThN@9h
ThN@9L
ThrA9
ThrBy
ThreadGetCurrentId
ThreadJoin
	Thread (%llu) Command Buffers (%d)
ThreadSetAffinityPreference
ThreadSleep
ThreadYield
throw
Thr@y
ThvAy
Thw@y
Th.@y
ThzBy
Thz@y
ThZ@y
Ti2@yh
Ti3@y
Ti5KJ(}
TI7@y?! kC
Ti"A)`
Tib@9
Tib@9)
Tib@9	
Tif@9
Tif@9)
Tih8)!
TiJL9
Ti&L9
Ti&L9I
TILDE
tiles
timeAMD
TimeAMD
Timed out waiting for thread to exit? hung?
Time (in seconds) between updating texture memory budget.
Tit8A
tit8d
Tit8g
TiVJy?
TiVJy?! kC
Tiv@y?!7k
Ti:@y
T!j`8bi`8
T!j`8Bi`8
TJA@yjyj
TJih8
TJih8j
TJPB9_
Tjw@y_
TK	@9)A
Tk&@9K
TKi|8
TKih8
TKii8J
Tl5D)_
TL	@9kA
Tlii8k
TL!@y
TMK@y
Tnij8
tn)U?O
/!T?O
 to be int or float scalar or vector type
 to be int or float vector type
to be the reverse of those of Result Type
 to be used only with Fragment, Vertex, TessellationControl, TessellationEvaluation or Geometry execution models. 
 to be used only with Vertex, TessellationEvaluation, Geometry, or Fragment execution models. 
together
 to have 4 components
 to index into a structure must be an OpConstant.
token pasting (##)
tolower
Too few args in Macro
too large for fragment output
too large, must be less than gl_MaxGeometryOutputVertices
too large, must be less than gl_MaxMeshOutputPrimitivesNV
too large, must be less than gl_MaxMeshOutputVerticesNV
too large; see gl_MaxComputeWorkGroupSize
too large; see gl_MaxMeshWorkGroupSizeNV
too large; see gl_MaxTaskWorkGroupSizeNV
ToolFramework2_002
ToolGameSimulationDispatcher_001
ToolGameSimulationSystem_001
ToolSceneNodeFactory_001
ToolScriptManager001
ToolService_001
_tools.txt
Too many args in macro
too many arguments
Too many bytes for PNG signature
Too many color components: %d, max %d
Too many components in texture template structure type
Too many IDATs found
too many length or distance symbols
Too many OpFunctionParameters for 
too many storage qualifiers
Too many threads (%d) accessing the render device, need to increase -r_max_device_threads
Too many threads (%d) accessing the render device, need to increase -r_max_device_threads (%d)
, topLevelArrayStride %d
to storage image
TOTAL: %.2f MB
Total Combined ( %llu MB ) 
Total Combos After Rules:  %15s ( %s Static, 
Total Combos Before Rules: %15s ( %s Static, %s Dynamic )
	Total Command Buffers (%d)
    Total committed memory: %d KB
Total Dynamic ( %llu MB ) 
Total pipeline count: %d This frame pre-warmed: %d Draw-time compiled: %d (Total time this frame: %0.2f ms Driver time this frame: %0.2f ms)
Total PMB ( %llu MB ) 
Total Shader Modules Requested: %.2fMB
Total Shader Modules Stored: %.2fMB
Total Shader Requested: %.2fMB
Total Shader Stored: %.2fMB
, total size (bytes)=
Total size of the texture pool in MB
Total Static ( %llu MB ) 
    Total used memory:      %d KB
to the number of columns of Result Type matrix
to the number of elements of Result Type array
to the number of members of Result Type struct
to the size of Result Type vector
toupper
T?OZW?O
T` p7@
TP.@8
T$P@9C,
T p@9"t@9"p
T? @q
T? @q*
T ;@Q
T(%	Q
T? @qj
traceNV
TraceNV
Trailing Data
TransformFeedback
transform feedback qualifier
translation_unit
transparency
transpose
Transpose
T`REy
triangle
triangleadj
triangle_ccw
triangle_cw
triangle order = 
triangles
Triangles
triangles_adjacency
TriangleStream
triangle_strip
tRNS chunk has out-of-range samples for bit_depth
tRNS chunk not allowed with alpha channel
true case
true case is null
trunc
Trunc
: truncated 
Truncated data
Truncated iTXt chunk
Truncated zTXt chunk
Truncating incorrect info tRNS chunk length
Truncating incorrect tRNS chunk length
trying to bind a deleted shader
Trying to create a render target with invalid image format %s
Trying to set dxlevel (%d) which is higher than the card can support (%d)!
Trying to set dxlevel (%d) which is lower than the card can support (%d)!
TSPEC_CUBE_CAN_SAMPLE_AS_ARRAY
TSPEC_CUBE_TEXTURE
TSPEC_FLAGS
TSPEC_INPUT_ATTACHMENT
TSPEC_LINEAR_ADDRESSING_360
TSPEC_LINEAR_COLOR_SPACE
TSPEC_LINE_TEXTURE_360
TSPEC_NO_LOD
TSPEC_RENDER_TARGET
TSPEC_RENDER_TARGET_SAMPLEABLE
TSPEC_SHARED_RESOURCE
TSPEC_SUGGEST_CLAMPS
TSPEC_SUGGEST_CLAMPT
TSPEC_SUGGEST_CLAMPU
TSPEC_TEXTURE_ARRAY
TSPEC_TEXTURE_GEN_MIP_MAPS
TSPEC_UAV
TSPEC_UNFILTERABLE_OK
TSPEC_USE_TYPED_IMAGEFORMAT
TSPEC_VERTEX_TEXTURE
TSPEC_VOLUME_TEXTURE
turn_rate
Tuv@y
T`v@y
T`v@ynV
Two Bone
Two KV3 format GUIDs with the same human-friendly name ('%s')
t.!X .
T$X@9C0
-tx-struct
T)!@y
T+!@y
T+&@y
T+%@y
t@y	9
t@yaF
t@y	e
TypeAccelerationStructureNV
TypeAvcImeDualReferenceStreaminINTEL
TypeAvcImePayloadINTEL
TypeAvcImeResultDualReferenceStreamoutINTEL
TypeAvcImeResultINTEL
TypeAvcImeResultSingleReferenceStreamoutINTEL
TypeAvcImeSingleReferenceStreaminINTEL
TypeAvcMcePayloadINTEL
TypeAvcMceResultINTEL
TypeAvcRefPayloadINTEL
TypeAvcRefResultINTEL
TypeAvcSicPayloadINTEL
TypeAvcSicResultINTEL
type cannot have precision qualifier
type contains double or 64-bit integer; xfb_offset must be a multiple of 8
type contains half float or 16-bit integer; xfb_offset must be a multiple of 2
type conversion on return values was not explicitly allowed until version 420
TypeCooperativeMatrixNV
TypeDeviceEvent
type does not match, or is not convertible to, the function's return type
' type does not match Result Type <id> '
' type does not match the Result Type <id> '
TypeEvent
TypeFloat
Type for 
type for RWTexture/RWBuffer
TypeForwardPointer
type ID
Type Id 
TypeInt
type must be an array:
typename
TYPE_NAME
type_name_list
type of the matrix operand: 
type of the vector operand: 
TypeOpaque
type overflows the available 4 components
type_parameter_specifier
type_parameter_specifier_list
type_parameter_specifier_opt
TypePipe
TypePipeStorage
TypeQueue
type requires declaration of default precision qualifier
type requires the Float16 or Float16Buffer capability, or an extension that explicitly enables 16-bit floating point.
type requires the Float64 capability.
TypeReserveId
type Result Type array
type Result Type matrix
TypeRuntimeArray
Types must match:
type_specifier_nonarray
type. Structure <id> 
type that can be constructed
TypeVmeImageINTEL
t@y	q
U16VEC2
U16VEC3
U16VEC4
u32vec2
U32VEC2
u32vec3
U32VEC3
u32vec4
U32VEC4
u64( %lld = 0x%llX )
U64VEC2
U64VEC3
U64VEC4
)U7O{
U8VEC2
U8VEC3
U8VEC4
	U@9?
u_abs
u_abs_diff
uaddCarry
u_add_sat
UAddSatINTEL
UAVBarrier - requested barrier for more mip levels than are in the texture. Requested baseLevel: %d levelCount: %d (Actual levels: %d).  Clamping to actual number of levels.
UAverageINTEL
UAverageRoundedINTEL
u_clamp
UClamp
UConvert
ucoopmatNV
UCOOPMATNV
ucoopmatNV coopMatMulAddNV(ucoopmatNV A, ucoopmatNV B, ucoopmatNV C);
UCountLeadingZerosINTEL
UCountTrailingZerosINTEL
UGreaterThan
UGreaterThanEqual
u_hadd
UI,,,
uimage1D
UIMAGE1D
uimage1DArray
UIMAGE1DARRAY
uimage2D
UIMAGE2D
uimage2DArray
UIMAGE2DARRAY
uimage2DMS
UIMAGE2DMS
uimage2DMSArray
UIMAGE2DMSARRAY
uimage2DRect
UIMAGE2DRECT
uimage3D
UIMAGE3D
uimageBuffer
UIMAGEBUFFER
uimageCube
UIMAGECUBE
uimageCubeArray
UIMAGECUBEARRAY
<uint
uint16BitsToFloat16
uint16BitsToHalf
UINT16CONSTANT
UINT16_T
(u)int16 types can only be in uniform block or buffer storage
uint1x1
uint1x2
uint1x3
uint1x4
uint2x1
uint2x2
uint2x3
uint2x4
UINT32CONSTANT
( ( uint32 ) pImmutableSamplersBlob->GetBinaryBlobSize() ) == ( pipelineLayoutHash.m_nNumImmutableSamplers * sizeof( PipelineLayoutImmutableSampler_t ) )
( ( uint32 ) pLayoutBindingsBlob->GetBinaryBlobSize() ) == ( pipelineLayoutHash.m_pNumLayoutBindingsPerSet[ nDescriptorSet ] * sizeof( VkDescriptorSetLayoutBinding ) )
( ( uint32 ) pPushConstantRangesBlob->GetBinaryBlobSize() ) == ( pipelineLayoutHash.m_nNumPushConstantRanges * sizeof( VkPushConstantRange ) )
uint32_t
UINT32_T
uint3x1
uint3x2
uint3x3
uint3x4
uint4x1
uint4x2
uint4x3
uint4x4
uint64BitsToDouble
UINT64CONSTANT
uint64 CTextureManagerBase::MN_BuildRequestedResourcesList(CUtlVector<CTextureManagerBase::ToCacheHandle_t> &)
uint64 CTextureStreamingHelper::LoadExplicitlyRequestedTextures()
uint64 CVfxProgramData::CalcDynamicComboIdFromValues(const VfxComboValueVector_t &) const
uint64 CVfxProgramData::CalcStaticComboIdFromValues(const VfxComboValueVector_t &) const
UINT64_T
uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t, int, int, int, int, int); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t, int, int, int, int, int);uint64_t atomicLoad(coherent volatile in uint64_t, int, int, int); int64_t atomicLoad(coherent volatile in  int64_t, int, int, int);void atomicStore(coherent volatile out uint64_t, uint64_t, int, int, int);void atomicStore(coherent volatile out  int64_t,  int64_t, int, int, int);
uint64_t ballotARB(bool);float readInvocationARB(float, uint);vec2  readInvocationARB(vec2,  uint);vec3  readInvocationARB(vec3,  uint);vec4  readInvocationARB(vec4,  uint);int   readInvocationARB(int,   uint);ivec2 readInvocationARB(ivec2, uint);ivec3 readInvocationARB(ivec3, uint);ivec4 readInvocationARB(ivec4, uint);uint  readInvocationARB(uint,  uint);uvec2 readInvocationARB(uvec2, uint);uvec3 readInvocationARB(uvec3, uint);uvec4 readInvocationARB(uvec4, uint);float readFirstInvocationARB(float);vec2  readFirstInvocationARB(vec2);vec3  readFirstInvocationARB(vec3);vec4  readFirstInvocationARB(vec4);int   readFirstInvocationARB(int);ivec2 readFirstInvocationARB(ivec2);ivec3 readFirstInvocationARB(ivec3);ivec4 readFirstInvocationARB(ivec4);uint  readFirstInvocationARB(uint);uvec2 readFirstInvocationARB(uvec2);uvec3 readFirstInvocationARB(uvec3);uvec4 readFirstInvocationARB(uvec4);
UINT8_T
(u)int8 types can only be in uniform block or buffer storage
uint atomicAdd(coherent volatile inout uint, uint, int, int, int); int atomicAdd(coherent volatile inout  int,  int, int, int, int);uint atomicMin(coherent volatile inout uint, uint, int, int, int); int atomicMin(coherent volatile inout  int,  int, int, int, int);uint atomicMax(coherent volatile inout uint, uint, int, int, int); int atomicMax(coherent volatile inout  int,  int, int, int, int);uint atomicAnd(coherent volatile inout uint, uint, int, int, int); int atomicAnd(coherent volatile inout  int,  int, int, int, int);uint atomicOr (coherent volatile inout uint, uint, int, int, int); int atomicOr (coherent volatile inout  int,  int, int, int, int);uint atomicXor(coherent volatile inout uint, uint, int, int, int); int atomicXor(coherent volatile inout  int,  int, int, int, int);uint atomicExchange(coherent volatile inout uint, uint, int, int, int); int atomicExchange(coherent volatile inout  int,  int, int, int, int);uint atomicCompSwap(coherent volatile inout uint, uint, uint, int, int, int, int, int); int atomicCompSwap(coherent volatile inout  int,  int,  int, int, int, int, int, int);uint atomicLoad(coherent volatile in uint, int, int, int); int atomicLoad(coherent volatile in  int, int, int, int);void atomicStore(coherent volatile out uint, uint, int, int, int);void atomicStore(coherent volatile out  int,  int, int, int, int);
uint atomicCounterAdd(atomic_uint, uint);uint atomicCounterSubtract(atomic_uint, uint);uint atomicCounterMin(atomic_uint, uint);uint atomicCounterMax(atomic_uint, uint);uint atomicCounterAnd(atomic_uint, uint);uint atomicCounterOr(atomic_uint, uint);uint atomicCounterXor(atomic_uint, uint);uint atomicCounterExchange(atomic_uint, uint);uint atomicCounterCompSwap(atomic_uint, uint, uint);
uint atomicCounterIncrement(atomic_uint);uint atomicCounterDecrement(atomic_uint);uint atomicCounter(atomic_uint);
uintBitsToFloat
UINTCONSTANT
uint fragmentMaskFetchAMD(sampler2DMS,       ivec2);uint fragmentMaskFetchAMD(isampler2DMS,      ivec2);uint fragmentMaskFetchAMD(usampler2DMS,      ivec2);uint fragmentMaskFetchAMD(sampler2DMSArray,  ivec3);uint fragmentMaskFetchAMD(isampler2DMSArray, ivec3);uint fragmentMaskFetchAMD(usampler2DMSArray, ivec3);vec4  fragmentFetchAMD(sampler2DMS,       ivec2, uint);ivec4 fragmentFetchAMD(isampler2DMS,      ivec2, uint);uvec4 fragmentFetchAMD(usampler2DMS,      ivec2, uint);vec4  fragmentFetchAMD(sampler2DMSArray,  ivec3, uint);ivec4 fragmentFetchAMD(isampler2DMSArray, ivec3, uint);uvec4 fragmentFetchAMD(usampler2DMSArray, ivec3, uint);
uint fragmentMaskFetchAMD(subpassInputMS);uint fragmentMaskFetchAMD(isubpassInputMS);uint fragmentMaskFetchAMD(usubpassInputMS);vec4  fragmentFetchAMD(subpassInputMS,  uint);ivec4 fragmentFetchAMD(isubpassInputMS, uint);uvec4 fragmentFetchAMD(usubpassInputMS, uint);
uint   subgroupBallotBitCount(uvec4);
uint   subgroupBallotExclusiveBitCount(uvec4);
uint   subgroupBallotFindLSB(uvec4);
uint   subgroupBallotFindMSB(uvec4);
uint   subgroupBallotInclusiveBitCount(uvec4);
 uint uaddCarry(highp  uint, highp  uint, out lowp  uint carry);uvec2 uaddCarry(highp uvec2, highp uvec2, out lowp uvec2 carry);uvec3 uaddCarry(highp uvec3, highp uvec3, out lowp uvec3 carry);uvec4 uaddCarry(highp uvec4, highp uvec4, out lowp uvec4 carry); uint usubBorrow(highp  uint, highp  uint, out lowp  uint borrow);uvec2 usubBorrow(highp uvec2, highp uvec2, out lowp uvec2 borrow);uvec3 usubBorrow(highp uvec3, highp uvec3, out lowp uvec3 borrow);uvec4 usubBorrow(highp uvec4, highp uvec4, out lowp uvec4 borrow);void umulExtended(highp  uint, highp  uint, out highp  uint, out highp  uint lsb);void umulExtended(highp uvec2, highp uvec2, out highp uvec2, out highp uvec2 lsb);void umulExtended(highp uvec3, highp uvec3, out highp uvec3, out highp uvec3 lsb);void umulExtended(highp uvec4, highp uvec4, out highp uvec4, out highp uvec4 lsb);void imulExtended(highp   int, highp   int, out highp   int, out highp   int lsb);void imulExtended(highp ivec2, highp ivec2, out highp ivec2, out highp ivec2 lsb);void imulExtended(highp ivec3, highp ivec3, out highp ivec3, out highp ivec3 lsb);void imulExtended(highp ivec4, highp ivec4, out highp ivec4, out highp ivec4 lsb);  int bitfieldReverse(highp   int);ivec2 bitfieldReverse(highp ivec2);ivec3 bitfieldReverse(highp ivec3);ivec4 bitfieldReverse(highp ivec4); uint bitfieldReverse(highp  uint);uvec2 bitfieldReverse(highp uvec2);uvec3 bitfieldReverse(highp uvec3);uvec4 bitfieldReverse(highp uvec4);
uiu8c
ULessThan
ULessThanEqual
u_mad24
u_mad_hi
u_mad_sat
u_max
UMax3AMD
UMid3AMD
u_min
UMin3AMD
u_mul24
UMul32x16INTEL
umulExtended
uMulExtended
UMulExtended
u_mul_hi
unable to declare patch constant function interface variable
Unable to determine buffer encoding.
Unable to determine source language
Unable to determine texture heap size, assuming %llu MB.
unable to find output symbol for Append()
unable to find patch constant function built-in variable
unable to find texture symbol
unable to locate patch function parameter name
Unable to open Vulkan pipeline cache %s file - might not exist yet.
Unable to parse built-ins
*** Unable to parse Version in HEADER section of %s!
Unable to parse vpk paths from shader %s
Unable to parse Vulkan pipeline cache %s file.  Error: %s
Unable to populate %s entrypoints.
Unable to populate vk_debug_marker_lunarg entrypoints.
Unable to populate VK_EXT_debug_report entrypoints.
Unable to populate VK_EXT_debug_utils entrypoints.
unable to populate vk_ext_khr_device_swapchain entrypoints.
Unable to populate vk_ext_khr_swapchain entrypoints.
Unable to populate VK_NVX_trim_command_pool entrypoints.
Unable to query size of supported swapchain formats.
Unable to query supported swapchain formats.
Unable to read file %s
Unable to stream in resource file "%s" (Error: %s)
Unable to write file '%s'
Unable to write to pipeline cache file "%s".  Error: %s
Unable to write validation shader cache %s file.
unary_expression
unary operator
unary_operator
undeclared identifier
#undef
undefined
$undefined
undefined macro in expression not allowed in es profile
unexpected
unexpected '#'
Unexpected end of file
unexpected initializer-list type:
unexpected location
unexpected location; end of argument
unexpected location; end of replacement list
Unexpected marker 0x%02x
Unexpected numeric literal type
unexpected operator on texture type:
Unexpected resource version '%d' for '%s'
Unexpected result code from ParseAndEncodeNumber()
unexpected texture type for .mips[][] operator:
unexpected token
unexpected tokens following directive
unexpected tokens following #ifdef directive - expected a newline
unexpected type parameters
unexpected use of
unexpected use of .length()
Unhandled inst type (opcode: %d) found outside function definition.
unhandled texture constructor
Unhandled VkObjectType
Unhandled VkValidationFeatureDisableEXT
Uniform and shader storage block variables must 
UniformAndStorageBuffer16BitAccess
UniformAndStorageBuffer8BitAccess
uniform buffer
UniformBufferArrayDynamicIndexing
UniformBufferArrayNonUniformIndexing
UniformBufferArrayNonUniformIndexingEXT
uniform/buffer blocks require layout(binding=X)
uniform buffer-member align
UniformConstant id '
UniformConstant OpVariable <id> '
};uniform gl_DepthRangeParameters gl_DepthRange;
Uniform id '
UniformId
uniform initializers must be constant
uniform int gl_NumSamples;
uniform lowp int gl_NumSamples;
uniform mat4  gl_ModelViewMatrix;uniform mat4  gl_ProjectionMatrix;uniform mat4  gl_ModelViewProjectionMatrix;uniform mat3  gl_NormalMatrix;uniform mat4  gl_ModelViewMatrixInverse;uniform mat4  gl_ProjectionMatrixInverse;uniform mat4  gl_ModelViewProjectionMatrixInverse;uniform mat4  gl_ModelViewMatrixTranspose;uniform mat4  gl_ProjectionMatrixTranspose;uniform mat4  gl_ModelViewProjectionMatrixTranspose;uniform mat4  gl_ModelViewMatrixInverseTranspose;uniform mat4  gl_ProjectionMatrixInverseTranspose;uniform mat4  gl_ModelViewProjectionMatrixInverseTranspose;uniform float gl_NormalScale;struct gl_PointParameters {float size;float sizeMin;float sizeMax;float fadeThresholdSize;float distanceConstantAttenuation;float distanceLinearAttenuation;float distanceQuadraticAttenuation;};uniform gl_PointParameters gl_Point;struct gl_MaterialParameters {vec4  emission;vec4  ambient;vec4  diffuse;vec4  specular;float shininess;};uniform gl_MaterialParameters  gl_FrontMaterial;uniform gl_MaterialParameters  gl_BackMaterial;struct gl_LightSourceParameters {vec4  ambient;vec4  diffuse;vec4  specular;vec4  position;vec4  halfVector;vec3  spotDirection;float spotExponent;float spotCutoff;float spotCosCutoff;float constantAttenuation;float linearAttenuation;float quadraticAttenuation;};struct gl_LightModelParameters {vec4  ambient;};uniform gl_LightModelParameters  gl_LightModel;struct gl_LightModelProducts {vec4  sceneColor;};uniform gl_LightModelProducts gl_FrontLightModelProduct;uniform gl_LightModelProducts gl_BackLightModelProduct;struct gl_LightProducts {vec4  ambient;vec4  diffuse;vec4  specular;};struct gl_FogParameters {vec4  color;float density;float start;float end;float scale;};uniform gl_FogParameters gl_Fog;
uniform mat4  gl_TextureMatrix[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverse[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixTranspose[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverseTranspose[gl_MaxTextureCoords];uniform vec4  gl_ClipPlane[gl_MaxClipPlanes];uniform gl_LightSourceParameters  gl_LightSource[gl_MaxLights];uniform gl_LightProducts gl_FrontLightProduct[gl_MaxLights];uniform gl_LightProducts gl_BackLightProduct[gl_MaxLights];uniform vec4  gl_TextureEnvColor[gl_MaxTextureImageUnits];uniform vec4  gl_EyePlaneS[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneT[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneR[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneQ[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneS[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneT[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneR[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneQ[gl_MaxTextureCoords];
UniformMemory
Uniform OpVariable <id> '
UniformTexelBufferArrayDynamicIndexing
UniformTexelBufferArrayDynamicIndexingEXT
UniformTexelBufferArrayNonUniformIndexing
UniformTexelBufferArrayNonUniformIndexingEXT
uniform uint gl_SubGroupSizeARB;flat in uint     gl_SubGroupInvocationARB;flat in uint64_t gl_SubGroupEqMaskARB;flat in uint64_t gl_SubGroupGeMaskARB;flat in uint64_t gl_SubGroupGtMaskARB;flat in uint64_t gl_SubGroupLeMaskARB;flat in uint64_t gl_SubGroupLtMaskARB;
uniform uint gl_SubGroupSizeARB;in uint     gl_SubGroupInvocationARB;in uint64_t gl_SubGroupEqMaskARB;in uint64_t gl_SubGroupGeMaskARB;in uint64_t gl_SubGroupGtMaskARB;in uint64_t gl_SubGroupLeMaskARB;in uint64_t gl_SubGroupLtMaskARB;
unify-const
unimplemented
Unimplemented
UNIMPLEMENTED: 
unimplemented: clip/cull not currently implemented for this stage
unimplemented: component-level gather compare
unimplemented: entry point outputs in patch constant function invocation
unimplemented: multiple output patches in patch constant function
unimplemented; need ARB_shader_stencil_export
unimplemented: OpMemberDecorate non-struct type
unimplemented: partial image updates
unimplemented: PCF input patch without entry point input patch parameter
unimplemented: residency status
Unimplemented: structure template type in subpass input
unimplemented: structure type in image or buffer
unimplemented: unhandled type
Uninitialized row
union
Union
Universal
unknown
<unknown>
Unknown Adobe color transform code %d
Unknown APP0 marker (not JFIF), length %u
Unknown APP14 marker (not Adobe), length %u
unknown atomic operation
unknown basic type in image format
unknown blend equation
unknown built-in variable
unknown compression method
Unknown compression method in IHDR
Unknown compression type.
Unknown compression type @1
Unknown compression type in zTXt chunk
Unknown constant
unknown critical chunk
UNKNOWN_DIMENSION
Unknown DX level
Unknown Error
UNKNOWN ERROR: 
Unknown ExtInst
Unknown filter method in IHDR
Unknown flag '--%s'. Use --help for a list of valid flags
Unknown freer parameter in png_data_freer
unknown glslang aggregate
unknown glslang binary operation
Unknown glslang keyword
unknown glslang unary
unknown header flags set
unknown image type in atomic operation
 unknown index type 
Unknown interlace method in IHDR
Unknown iTXt compression type or method
<unknown multisample type
<unknown op>
unknown op
unknown operation with no arguments
unknown pack_matrix pragma value
Unknown Path Class
unknown precision qualifier
unknown profile
unknown qualifier
unknown requalification
*** Unknown rule "%s" in %s!
UNKNOWN_SAMPLER
Unknown sRGB intent
unknown stage
Unknown Stage.
unknown swizzle selection
*** Unknown text found in FEATURES section in %s: "%s"
unknown type
UNKNOWN_TYPE
unknown variable
Unknown VkResult value
Unknown zlib error
Unordered
unordered_map::at: key not found
unorm
unorm and snorm only valid in floating point domain
UnormInt101010
UnormInt101010_2
UnormInt16
UnormInt24
UnormInt8
UnormShort555
UnormShort565
unpack16
unpack32
unpack8
unpackDouble2x32
UnpackDouble2x32
unpackFloat2x16
unpackHalf2x16
UnpackHalf2x16
unpackInt2x16
unpackInt2x32
unpackInt4x16
unpackSnorm2x16
UnpackSnorm2x16
unpackSnorm4x8
UnpackSnorm4x8
unpackUint2x16
unpackUint2x32
unpackUint4x16
unpackUnorm2x16
UnpackUnorm2x16
unpackUnorm4x8
UnpackUnorm4x8
Unreachable
unrecognized attribute
Unrecognized component IDs %d %d %d, assuming YCbCr
Unrecognized equation type for pCAL chunk
Unrecognized flag name '%s'
unrecognized layout identifier, or qualifier requires assignment (e.g., binding = 4)
Unrecognized type '%d'
UnregisterHibernationListener
Unresolved object reference '%s'
: Unroll
Unroll and DontUnroll loop controls must not both be specified
Unsatisfied dependency at present time = death!
unsigned
Unsigned
UnsignedChar
UnsignedInt16
UnsignedInt32
UnsignedInt8
unsigned literal
 unsized
Unspecified
Unsupported binary encoding id.
Unsupported color conversion request
Unsupported component value : 
Unsupported compression format
Unsupported compression type : 
unsupported construction
unsupported domain type
Unsupported JPEG data precision %d
Unsupported JPEG process: SOF type 0x%02x
Unsupported marker type 0x%02x
unsupported outputtopology type
unsupported partitioning type
Unsupported PSD color mode!
Unsupported text encoding id.
Unsupported version or scanline
unterminated mips operator:
_Unwind_Backtrace
_Unwind_DeleteException
_Unwind_FindEnclosingFunction
_Unwind_Find_FDE
_Unwind_ForcedUnwind
_Unwind_GetCFA
_Unwind_GetDataRelBase
_Unwind_GetGR
_Unwind_GetIP
_Unwind_GetIPInfo
_Unwind_GetLanguageSpecificData
_Unwind_GetRegionStart
_Unwind_GetTextRelBase
_Unwind_RaiseException
_Unwind_Resume
_Unwind_Resume_or_Rethrow
_Unwind_SetGR
_Unwind_SetIP
/]U?O
UpdateExternalTexture called on unknown external texture '%s'
UPDATE_STRING_TOKEN_DATABASE
upgrade-memory-model
Upper limit on texture pool size.
	u	Q?
	U	Q?	
u_rhadd
%u (%s)
usampler1D
USAMPLER1D
usampler1DArray
USAMPLER1DARRAY
usampler2D
USAMPLER2D
usampler2DArray
USAMPLER2DARRAY
usampler2DMS
USAMPLER2DMS
usampler2DMSArray
USAMPLER2DMSARRAY
usampler2DRect
USAMPLER2DRECT
usampler3D
USAMPLER3D
usamplerBuffer
USAMPLERBUFFER
usamplerCube
USAMPLERCUBE
usamplerCubeArray
USAMPLERCUBEARRAY
use_additional_offset
Use compute shader for mipgen.
used at end of comment, but this version does not provide line continuation
used at end of comment; the following line is still part of the comment
) used for OpTypeFloat.
) used for OpTypeInt.
 used in function 
used to access transparent buffer backed resources. Such 
useless application of layout qualifier
Use of device scope with VulkanKHR memory model requires the 
UserInfoChangeService_001
UserSemantic
UserTypeGOOGLE
' uses more than one PushConstant interface.
 uses storage class 
use_storage_buffer
use-storage-buffer
use-variable-pointers
use_vulkan_memory_model
use-vulkan-memory-model
using
using 
Using a 16-bit floating point 
Using a 16-bit integer type requires the Int16 capability, or an extension that explicitly enables 16-bit integers.
Using a 64-bit floating point 
Using a 64-bit integer type requires the Int64 capability.
Using an 8-bit integer type requires the Int8 capability, or an extension that explicitly enables 8-bit integers.
(using array)
Using BuiltIn 
using early_fragment_tests
using ES precision qualifier keyword
using future keyword
using future non-square matrix type keyword
using future reserved keyword
using future type keyword
Using pointers with OpPhi requires capability 
Using pointers with OpSelect requires capability 
using point mode
using post_depth_coverage
Using '%s' for Vulkan validation reporting.
Using VK_EXT_memory_budget set texture memory budget to %llu MB.
Using VK_GOOGLE_display_timing for frame pacing.
USR time
usubBorrow
usubpassInput
USUBPASSINPUT
usubpassInputMS
USUBPASSINPUTMS
u_sub_sat
USubSatINTEL
utexture1D
UTEXTURE1D
utexture1DArray
UTEXTURE1DARRAY
utexture2D
UTEXTURE2D
utexture2DArray
UTEXTURE2DARRAY
utexture2DMS
UTEXTURE2DMS
utexture2DMSArray
UTEXTURE2DMSARRAY
utexture2DRect
UTEXTURE2DRECT
utexture3D
UTEXTURE3D
utextureBuffer
UTEXTUREBUFFER
utextureCube
UTEXTURECUBE
utextureCubeArray
UTEXTURECUBEARRAY
utlbuffer.cpp
utlstring.cpp
UUID mismatch in pipeline cache file.  Deleting %s in order to regenerate it.
u_upsample
""""UUUU
uvCropped
UVEC2
uvec2 clock2x32ARB();uint64_t clockARB();uvec2 clockRealtime2x32EXT();uint64_t clockRealtimeEXT();
uvec2 conversion to reference
UVEC3
UVEC4
uvec4  subgroupBallot(bool);
uvec4  subgroupPartitionNV(%s);
UVLX8888
uvUncropped
UVWQ8888
)u@y?
*u@y_]
	u@y?
)U@yi*
	u@y?U
	u@y*U
	u@y?y
V2,,,
V3,,,
V3,S,>V3,>S,
V3,V4
V4,S,>V4,>V2,
V4,V2,>V4,>V2,
V4,V3
V4,V3,,
v@9hw
VALIDATION
validation.cache
Validation failed after pass 
Valid Content Absolute Path
Valid External Path
Valid Game Absolute Path
Valid Relative Path
Value 
Value is being defined a second time
value is out of range:
value must be 0 or 1
Value Unknown
Valve
=v+aN
vanmgrph
VApplication001
Variable cannot be replaced: invalid index
Variable cannot be replaced: invalid instruction
Variable declarations that include initializers must have 
variable_identifier
variable index
variable indexing buffer block array
variable indexing fragment shader output array
variable indexing sampler array
variable indexing uniform block array
 variable needs to be a 32-bit float array. 
 variable needs to be a 32-bit int. 
 variable needs to be a 32-bit int vector. 
 variable needs to be a 4-component 32-bit int vector. 
VariablePointers
VariablePointers or VariablePointersStorageBuffer
Variables can not have a function[7] storage class outside of a function
Variables identified with the StorageBuffer storage class are used to access transparent buffer backed resources. Such variables must be typed as OpTypeStruct, or an array of this type
Variables identified with the UniformConstant storage class 
Variables identified with the Uniform storage class are 
variables must be typed as OpTypeImage, OpTypeSampler, 
variables must be typed as OpTypeStruct, or an array of 
Variables must have a function[7] storage class inside of a function
variables with qualifier 'const' must be initialized
variables with reference type can't have qualifier 'const'
variable with qualifier 'const' not initialized; zero initializing
varying
varying vec4  gl_Color;varying vec4  gl_SecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord;
V_atof
V_atofloat32
V_atofloat64
V_atoi
V_atoi64
V_atoui64
VAvi001
VBAllocTracker001
VBaseFileSystem011
vb_created_input_layout
VB: %d buffers, %.2f MB
VBik001
*** VB "%s": Failed to lock!
*** VB "%s": Tried to lock a GPU-only buffer!
*** VB "%s": Tried to lock a static buffer twice!
*** VB "%s": Tried to lock too much memory (%d>%d)!
*** VB "%s": Tried to lock too much memory for subregion (%d>%d)!
*** VB "%s": Tried to lock twice without an unlock!
VConComm001
V_CopyMemory3D
VCS file format is "%c%c%c%c" instead of "%c%c%c%c" for %s
VCS file version is %d instead of %d for %s
VDebugService_001
, vec
vec2 textureQueryLod(
        vec2 unpackHalf2x16(highp uint);
,vec4
vec4 
vec4 ftransform();
    vec4  gl_ClipVertex;out vec4  gl_FrontColor;out vec4  gl_BackColor;out vec4  gl_FrontSecondaryColor;out vec4  gl_BackSecondaryColor;out vec4  gl_TexCoord[];out float gl_FogFragCoord;
        vec4  gl_ClipVertex;varying vec4  gl_FrontColor;varying vec4  gl_BackColor;varying vec4  gl_FrontSecondaryColor;varying vec4  gl_BackSecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord;
vec4 gl_ClipVertex;vec4 gl_FrontColor;vec4 gl_BackColor;vec4 gl_FrontSecondaryColor;vec4 gl_BackSecondaryColor;vec4 gl_TexCoord[];float gl_FogFragCoord;
vec4 gl_FragColor;
vec4  gl_FragCoord;bool  gl_FrontFacing;float gl_FragDepth;
vec4 gl_Position;float gl_PointSize;
vec4 imageLoadLodAMD(readonly volatile coherent 
vec4 imageLoad(readonly volatile coherent 
vec4 subpassLoad
vec4 texture1DLod(sampler1D, float, float);vec4 texture1DProjLod(sampler1D, vec2, float);vec4 texture1DProjLod(sampler1D, vec4, float);vec4 shadow1DLod(sampler1DShadow, vec3, float);vec4 shadow2DLod(sampler2DShadow, vec3, float);vec4 shadow1DProjLod(sampler1DShadow, vec4, float);vec4 shadow2DProjLod(sampler2DShadow, vec4, float);vec4 texture1DGradARB(sampler1D, float, float, float);vec4 texture1DProjGradARB(sampler1D, vec2, float, float);vec4 texture1DProjGradARB(sampler1D, vec4, float, float);vec4 texture2DGradARB(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec4, vec2, vec2);vec4 texture3DGradARB(sampler3D, vec3, vec3, vec3);vec4 texture3DProjGradARB(sampler3D, vec4, vec3, vec3);vec4 textureCubeGradARB(samplerCube, vec3, vec3, vec3);vec4 shadow1DGradARB(sampler1DShadow, vec3, float, float);vec4 shadow1DProjGradARB( sampler1DShadow, vec4, float, float);vec4 shadow2DGradARB(sampler2DShadow, vec3, vec2, vec2);vec4 shadow2DProjGradARB( sampler2DShadow, vec4, vec2, vec2);vec4 texture2DRectGradARB(sampler2DRect, vec2, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec3, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec4, vec2, vec2);vec4 shadow2DRectGradARB( sampler2DRectShadow, vec3, vec2, vec2);vec4 shadow2DRectProjGradARB(sampler2DRectShadow, vec4, vec2, vec2);
vec4 texture1D(sampler1D, float, float);vec4 texture1DProj(sampler1D, vec2, float);vec4 texture1DProj(sampler1D, vec4, float);vec4 shadow1D(sampler1DShadow, vec3, float);vec4 shadow2D(sampler2DShadow, vec3, float);vec4 shadow1DProj(sampler1DShadow, vec4, float);vec4 shadow2DProj(sampler2DShadow, vec4, float);
vec4 texture1D(sampler1D, float);vec4 texture1DProj(sampler1D, vec2);vec4 texture1DProj(sampler1D, vec4);vec4 shadow1D(sampler1DShadow, vec3);vec4 shadow2D(sampler2DShadow, vec3);vec4 shadow1DProj(sampler1DShadow, vec4);vec4 shadow2DProj(sampler2DShadow, vec4);vec4 texture2DRect(sampler2DRect, vec2);vec4 texture2DRectProj(sampler2DRect, vec3);vec4 texture2DRectProj(sampler2DRect, vec4);vec4 shadow2DRect(sampler2DRectShadow, vec3);vec4 shadow2DRectProj(sampler2DRectShadow, vec4);
vec4 texture2DGradEXT(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec4, vec2, vec2);vec4 textureCubeGradEXT(samplerCube, vec3, vec3, vec3);float shadow2DEXT(sampler2DShadow, vec3);float shadow2DProjEXT(sampler2DShadow, vec4);
vec4 texture2DLodEXT(sampler2D, vec2, float);vec4 texture2DProjLodEXT(sampler2D, vec3, float);vec4 texture2DProjLodEXT(sampler2D, vec4, float);vec4 textureCubeLodEXT(samplerCube, vec3, float);
vec4 texture2DLod(sampler2D, vec2, float);vec4 texture2DProjLod(sampler2D, vec3, float);vec4 texture2DProjLod(sampler2D, vec4, float);vec4 texture3DLod(sampler3D, vec3, float);vec4 texture3DProjLod(sampler3D, vec4, float);vec4 textureCubeLod(samplerCube, vec3, float);
vec4 texture2D(sampler2D, vec2, float);vec4 texture2DProj(sampler2D, vec3, float);vec4 texture2DProj(sampler2D, vec4, float);vec4 texture3D(sampler3D, vec3, float);vec4 texture3DProj(sampler3D, vec4, float);vec4 textureCube(samplerCube, vec3, float);
vec4 texture2D(sampler2D, vec2);vec4 texture2DProj(sampler2D, vec3);vec4 texture2DProj(sampler2D, vec4);vec4 texture3D(sampler3D, vec3);vec4 texture3DProj(sampler3D, vec4);vec4 textureCube(samplerCube, vec3);
vec4 texture2D(samplerExternalOES, vec2 coord);vec4 texture2DProj(samplerExternalOES, vec3);vec4 texture2DProj(samplerExternalOES, vec4);
vec4 unpackSnorm4x8(highp uint);vec4 unpackUnorm4x8(highp uint);
Vector16
Vector2D
Vector4D
Vector access is out of bounds, vector size is 
VectorAligned
' vector component count does not match Result Type <id> '
vector-dce
VectorExtractDynamic
vector index out of range '%d'
VectorInsertDynamic
vector operand size: 
vector-scale
vector scale second child into first child
VectorShuffle
vector size of the right operand: 
vector swizzle
vector swizzle selection out of range
vector swizzle selectors not from the same set
vector swizzle too long
VectorText
vector-times-matrix
VectorTimesMatrix
VectorTimesScalar
VecTypeHint
VendorID
Vendor ID mismatch in pipeline cache file (Got: %x Expected: %x).  Deleting %s in order to regenerate it.
VEngineCvar007
VERBOSE : 
#version 
; Version: 
__VERSION__
#version: compilation for SPIR-V does not support the compatibility profile
#version: compute shaders require es profile with version 310 or above, or non-es profile with version 420 or above
#version: Desktop shaders for OpenGL SPIR-V require version 330 or higher
#version: Desktop shaders for Vulkan SPIR-V require version 140 or higher
version error
#version: ES shaders for SPIR-V require version 310 or higher
#version: geometry shaders require es profile with version 310 or non-es profile with version 150 or above
#version: mesh/task shaders require es profile with version 320 or above, or non-es profile with version 450 or above
version not supported
#version: only version 300, 310, and 320 support the es profile
#version: ray tracing shaders require non-es profile with version 460 or above
#version: statement must appear first in es-profile shader; before comments or newlines
#version: tessellation shaders require es profile with version 310 or non-es profile with version 150 or above
#version: versions 300, 310, and 320 require specifying the 'es' profile
#version: versions 300, 310, and 320 support only the es profile
#version: versions before 150 do not allow a profile token
" versus "
vertex
vertex index
vertex input arrays
vertex input cannot be further qualified
VertexOrderCcw
VertexOrderCw
vertex output block
Vertex Shader
vertex-shader array-of-array output
vertex-shader array-of-struct output
vertex-shader `double` type input
vertex-shader struct output
vertex-shader struct output containing an array
vertex-shader struct output containing structure
vertex spacing = 
VERTICAL_BAR
VFileSystem017
V_FixSlashes
V_fpclassify
vfx_common.cpp
*** vfx_common.cpp(1019): Error opening file "%s"!
*** vfx_common.cpp(1029): Error masking unused parts for "%s"!
*** vfx_common.cpp(1098): Error opening file "%s"!
*** vfx_common.cpp(1108): Error masking unused parts for "%s"!
*** vfx_common.cpp(1297): Error opening file "%s"!
*** vfx_common.cpp(1374): Error opening file "%s"!
*** vfx_common.cpp(191): Don't call VfxInit() more than once!
*** vfx_common.cpp(201): g_pFullFileSystem must be set up before calling VfxInit!
vfx_common.cpp(3569): Error! Ref count !=0 for static combo data cache entry!
vfx_common.cpp(3656): Error! Ref count !=0 for static combo data cache entry!
*** vfx_common.cpp(5096): Error opening file "%s"!
*** vfx_common.cpp(5245): Error opening include file in features list"%s"!
*** vfx_common.cpp(5284): Error opening file "%s"!
*** vfx_common.cpp(5513): Error opening file "%s"!
*** vfx_common.cpp(5547): Error opening file "%s"!
*** vfx_common.cpp(5586): Error opening file "%s"!
*** vfx_common.cpp(5690): Error opening file "%s"!
*** vfx_common.cpp(6145): Programmer Error! The order of VfxVariableSourceType_t does not match s_shaderVariableSource!
vfx_common.cpp(6816): Error opening file %s
vfx_common.cpp(6890): VCS %s Unserialize failed
vfx_common.cpp(6904): VCS %s Unserialize hit EOF
vfx_common.cpp(7042): Error opening file %s
vfx_common.cpp(7049): Error calling SkipAndValidateVCSHeader() for %s
*** vfx_common.cpp(7280): Programmer Error! NULL pointer passed into function!
*** vfx_common.cpp(7306): Programmer Error! Non feature rule found in feature rule array!
vfx_compile_target_expr.cpp(106): : Failed to create lexer from "%s"
vfx_compile_target_expr.cpp(114): : Failed to create token stream from "%s"
vfx_compile_target_expr.cpp(122): : Failed to create parser from "%s"
vfx_compile_target_expr.cpp(98): : Failed to create input stream from "%s"
vfx_dx11
vfx_dx9
Vfx Error: attribute type does not exist or does not support attribute literals.
Vfx Error: attribute unsupported or requires a parameter binding.
Vfx file "%s" has both compute shader and other shaders. Compute shaders must be the only shader type in a vfx file.
vfx_gl
VFX_PROGRAM_MAX
VFX value %s out of range %d-%d: %d
VGAME
V_GetErrno
V_GetFileExtension
VGUI_Input005
VGUI_ivgui008
VGUI_Panel010
VGUI_Scheme010
VGUI_Surface032
VGUI_System010
Video Card %s (%04x : %04x)
video.cfg
view port array2
viewport_relative
virtual
Virtual array controller messed up
virtual bool CVfxShaderFile::Unserialize(CUtlBuffer &)
virtual void CRenderContextBase::SetAssociatedThreadIndex(int)
virtual void *CRenderDeviceVulkan::GetDeviceSpecificTexture(HRenderTexture, RenderTextureDimension_t)
virtual void CTextureManagerVulkanNew::LoadStreamingData(ResourceHandle_t, IResourceSystemUtils *)
V_IsAbsolutePath
VisBuilder_001
V_isnan
vkAcquireNextImage2KHR
vkAcquireNextImageKHR
vkAcquireNextImageKHR returned %s
vkAllocateCommandBuffers
vkAllocateCommandBuffers( m_pDeviceVulkan, &cmdBufferCreateinfo, &pCmdBuffer )
vkAllocateDescriptorSets
vkAllocateDescriptorSets( m_pDeviceVulkan, &allocInfo, &pCurrentDescriptorSetPool->m_ppDescriptorSets[ pCurrentDescriptorSetPool->m_nCurrentDescriptorSet - 1 ] )
vkAllocateMemory
vkAllocateMemory failed fallback system memory allocation.  Fatal error: out of video and system memory.
vkAllocateMemory failed for DEVICE_LOCAL memory indicating video memory is full, trying again in system memory as a fallback.
vkAllocateMemory failed to allocate GPU memory.  Fatal error: out of GPU video memory and no fallback heap available.
vkBeginCommandBuffer
vkBeginCommandBuffer( m_pCmdBuffer, &beginInfo )
vkBeginCommandBuffer( pCmdBuffer, &beginInfo )
vkBeginCommandBuffer( pCommandBuffer, &beginInfo )
vkBeginCommandBuffer( (*ppCommandBuffer)->m_pCmdBuffer, &beginInfo )
vkBeginCommandBuffer( pResetQueriesCommandBuffer, &beginInfo )
vkBindAccelerationStructureMemoryNV
vkBindBufferMemory
vkBindBufferMemory2
vkBindBufferMemory2KHR
vkBindImageMemory
vkBindImageMemory2
vkBindImageMemory2KHR
vkBindImageMemory( pDeviceVulkan, m_pDepthStencilImage->m_pImage, m_pDepthStencilImage->m_pGPUMemory, 0 )
vkBindImageMemory( pDeviceVulkan, m_pIntermediateSwapChainImage->m_pImage, m_pIntermediateSwapChainImage->m_pGPUMemory, 0 )
vkBindImageMemory( VulkanDevice(), m_pVulkanImage->m_pImage, m_pVulkanImage->m_pGPUMemory, m_pVulkanImage->m_nOffset )
vkBindImageMemory( VulkanDevice(), pVulkanImage->m_pImage, pVulkanImage->m_pGPUMemory, pVulkanImage->m_nOffset )
vkCmdBeginConditionalRenderingEXT
vkCmdBeginDebugUtilsLabelEXT
vkCmdBeginQuery
vkCmdBeginQueryIndexedEXT
vkCmdBeginRenderPass
vkCmdBeginRenderPass2KHR
vkCmdBeginTransformFeedbackEXT
vkCmdBindDescriptorSets
vkCmdBindIndexBuffer
vkCmdBindPipeline
vkCmdBindShadingRateImageNV
vkCmdBindTransformFeedbackBuffersEXT
vkCmdBindVertexBuffers
vkCmdBlitImage
vkCmdBuildAccelerationStructureNV
vkCmdClearAttachments
vkCmdClearColorImage
vkCmdClearDepthStencilImage
vkCmdCopyAccelerationStructureNV
vkCmdCopyBuffer
vkCmdCopyBufferToImage
vkCmdCopyImage
vkCmdCopyImageToBuffer
vkCmdCopyQueryPoolResults
vkCmdDebugMarkerBeginEXT
vkCmdDebugMarkerEndEXT
vkCmdDebugMarkerInsertEXT
vkCmdDispatch
vkCmdDispatchBase
vkCmdDispatchBaseKHR
vkCmdDispatchIndirect
vkCmdDraw
vkCmdDrawIndexed
vkCmdDrawIndexedIndirect
vkCmdDrawIndexedIndirectCountAMD
vkCmdDrawIndexedIndirectCountKHR
vkCmdDrawIndirect
vkCmdDrawIndirectByteCountEXT
vkCmdDrawIndirectCountAMD
vkCmdDrawIndirectCountKHR
vkCmdDrawMeshTasksIndirectCountNV
vkCmdDrawMeshTasksIndirectNV
vkCmdDrawMeshTasksNV
vkCmdEndConditionalRenderingEXT
vkCmdEndDebugUtilsLabelEXT
vkCmdEndQuery
vkCmdEndQueryIndexedEXT
vkCmdEndRenderPass
vkCmdEndRenderPass2KHR
vkCmdEndTransformFeedbackEXT
vkCmdExecuteCommands
vkCmdFillBuffer
vkCmdInsertDebugUtilsLabelEXT
vkCmdNextSubpass
vkCmdNextSubpass2KHR
vkCmdPipelineBarrier
vkCmdProcessCommandsNVX
vkCmdPushConstants
vkCmdPushDescriptorSetKHR
vkCmdPushDescriptorSetWithTemplateKHR
vkCmdReserveSpaceForCommandsNVX
vkCmdResetEvent
vkCmdResetQueryPool
vkCmdResolveImage
vkCmdSetBlendConstants
vkCmdSetCheckpointNV
vkCmdSetCoarseSampleOrderNV
vkCmdSetDepthBias
vkCmdSetDepthBounds
vkCmdSetDeviceMask
vkCmdSetDeviceMaskKHR
vkCmdSetDiscardRectangleEXT
vkCmdSetEvent
vkCmdSetExclusiveScissorNV
vkCmdSetLineWidth
vkCmdSetSampleLocationsEXT
vkCmdSetScissor
vkCmdSetStencilCompareMask
vkCmdSetStencilReference
vkCmdSetStencilWriteMask
vkCmdSetViewport
vkCmdSetViewportShadingRatePaletteNV
vkCmdSetViewportWScalingNV
vkCmdTraceRaysNV
vkCmdUpdateBuffer
vkCmdWaitEvents
vkCmdWriteAccelerationStructuresPropertiesNV
vkCmdWriteBufferMarkerAMD
vkCmdWriteTimestamp
vkCompileDeferredNV
vkCreateAccelerationStructureNV
vkCreateAndroidSurfaceKHR
vkCreateBuffer
vkCreateBuffer( m_pDeviceVulkan, &bufferCreateInfo, NULL, &newMemoryPool.m_pVulkanBuffer )
vkCreateBuffer( m_pDeviceVulkan, &bufferCreateInfo, NULL, pBufferOut )
vkCreateBuffer( m_pDeviceVulkan, &bufferCreateInfo, NULL, &pNewMemoryPool->m_pVulkanBuffer )
vkCreateBuffer( m_pDeviceVulkan, &bufferCreateInfo, NULL, ppVKBufferOut )
vkCreateBufferView
vkCreateBufferView( m_pDeviceVulkan, &bufferViewCreateInfo, NULL, &m_pTexelBufferView )
vkCreateCommandPool
vkCreateCommandPool( m_pDeviceVulkan, &cmdPoolCreateInfo, NULL, &cmdPool )
vkCreateComputePipelines
vkCreateComputePipelines( m_pDeviceVulkan, pPipelineCache, 1, &computePipelineCreateInfo, NULL, &pPipelineOut->m_pPipeline )
vkCreateDebugReportCallbackEXT
vkCreateDebugReportCallbackEXT was unsuccessful.
vkCreateDebugUtilsMessengerEXT
vkCreateDescriptorPool
vkCreateDescriptorPool( m_pDeviceVulkan, &descriptorPoolCreateInfo, NULL, &pDescriptorPool )
vkCreateDescriptorSetLayout
vkCreateDescriptorSetLayout( m_pDeviceVulkan, &descriptorSetLayoutCreateInfo, NULL, &pipelineLayout.m_ppDescriptorSetLayouts[ nDescriptorSet ] )
vkCreateDescriptorSetLayout( m_pDeviceVulkan, &descriptorSetLayoutCreateInfo, NULL, &pPipelineLayoutOut->m_ppDescriptorSetLayouts[ nDescriptorSet ] )
vkCreateDescriptorUpdateTemplate
vkCreateDescriptorUpdateTemplateKHR
vkCreateDevice
vkCreateDevice failed, unable to create Vulkan device.
vkCreateDisplayModeKHR
vkCreateDisplayPlaneSurfaceKHR
vkCreateEvent
vkCreateFence
vkCreateFence( VulkanDevice(), &fenceCreateInfo, NULL, &m_pWaitForLeftEyeFenceAMD )
vkCreateFence( VulkanDevice(), &fenceCreateInfo, NULL, pFence->GetPtr() )
vkCreateFence( VulkanDevice(), &fenceCreateInfo, NULL, &presentFence.m_pFence )
vkCreateFramebuffer
vkCreateFramebuffer( m_pDeviceVulkan, &framebufferCreateInfo, NULL, &pFramebuffer )
vkCreateFramebuffer( m_pDeviceVulkan, &framebufferCreateInfo, NULL, &pFramebufferVulkan )
vkCreateFramebuffer( m_pDeviceVulkan, &framebufferCreateInfo, NULL, &pSwapChainFramebuffer )
vkCreateGraphicsPipelines
vkCreateGraphicsPipelines( m_pDeviceVulkan, pPipelineCache, 1, &pipelineCreateInfo, NULL, &pPipelineOut->m_pPipeline )
vkCreateImage
vkCreateImage() - failed to create cooperative fullscreen image.
vkCreateImageView
vkCreateImageView( VulkanDevice(), &colorTargetViewCreateInfo, NULL, m_ImageViews.m_ppColorTargetView[ i ]->GetPtr() )
vkCreateImageView( VulkanDevice(), &colorTargetViewCreateInfo, NULL, m_ImageViews.m_ppColorTargetViewSrgb[ i ]->GetPtr() )
vkCreateImageView( VulkanDevice(), &colorTargetViewCreateInfo, NULL, m_ImageViews.m_ppPerArraySliceColorTargetView[ i ]->GetPtr() )
vkCreateImageView( VulkanDevice(), &colorTargetViewCreateInfo, NULL, m_ImageViews.m_ppPerArraySliceColorTargetViewSrgb[ i ]->GetPtr() )
vkCreateImageView( VulkanDevice(), &cubeAsArrayImageViewCreateInfo, NULL, m_ImageViews.m_pCubeAsArrayImageView->GetPtr() )
vkCreateImageView( VulkanDevice(), &cubeAsArrayImageViewCreateInfoSrgb, NULL, m_ImageViews.m_pCubeAsArrayImageViewSrgb->GetPtr() )
vkCreateImageView( VulkanDevice(), &dsViewCreateInfo, NULL, m_ImageViews.m_pDepthStencilView->GetPtr() )
vkCreateImageView( VulkanDevice(), &dsViewCreateInfo, NULL, m_ImageViews.m_ppPerArraySliceDepthStencilView[i]->GetPtr() )
vkCreateImageView( VulkanDevice(), &imageViewCreateInfo, NULL, m_ImageViews.m_pImageView->GetPtr() )
vkCreateImageView( VulkanDevice(), &imageViewCreateInfo, NULL, m_ImageViews.m_ppPerMipLevelImageView[ i ]->GetPtr() )
vkCreateImageView( VulkanDevice(), &imageViewCreateInfo, NULL, m_pImageView->GetPtr() )
vkCreateImageView( VulkanDevice(), &imageViewCreateInfo, NULL, m_pImageViewSrgb->GetPtr() )
vkCreateImageView( VulkanDevice(), &imageViewCreateInfoSrgb, NULL, m_ImageViews.m_pImageViewSrgb->GetPtr() )
vkCreateImageView( VulkanDevice(), &imageViewCreateInfoSrgb, NULL, m_ImageViews.m_ppPerMipLevelImageViewSrgb[ i ]->GetPtr())
vkCreateImage( VulkanDevice(), &imageCreateInfo, NULL, &m_pVulkanImage->m_pImage )
vkCreateImage( VulkanDevice(), &imageCreateInfo, NULL, &pVulkanImage->m_pImage )
vkCreateIndirectCommandsLayoutNVX
vkCreateInstance
vkCreateInstance failed, unable to create instance.
vkCreateObjectTableNVX
vkCreatePipelineCache
vkCreatePipelineCache( m_pDeviceVulkan, &pipelineCacheCreateInfo, NULL, &m_pPerThreadPipelineCache[ nThread ] )
vkCreatePipelineCache( m_pDeviceVulkan, &pipelineCacheCreateInfo, NULL, &m_pPipelineCache )
vkCreatePipelineLayout
vkCreatePipelineLayout( m_pDeviceVulkan, &pipelineLayoutCreateInfo, NULL, &pipelineLayout.m_pPipelineLayout )
vkCreatePipelineLayout( m_pDeviceVulkan, &pipelineLayoutCreateInfo, NULL, &pPipelineLayoutOut->m_pPipelineLayout )
vkCreateQueryPool
vkCreateQueryPool( m_pDeviceVulkan, &queryPoolCreateInfo, NULL, &newQueryPool.m_pOcclusionQueryPool )
vkCreateQueryPool( m_pDeviceVulkan, &queryPoolCreateInfo, NULL, &pQueryPoolVulkan )
vkCreateQueryPool( VulkanDevice(), &queryPoolCreateInfo, NULL, &m_pVrTimestampQueryPool )
vkCreateRayTracingPipelinesNV
vkCreateRenderPass
vkCreateRenderPass2KHR
vkCreateRenderPass( m_pDeviceVulkan, &renderPassCreateInfo, NULL, &pRenderPass )
vkCreateSampler
vkCreateSampler( VulkanDevice(), &samplerCreateInfo, NULL, &pSampler )
vkCreateSamplerYcbcrConversion
vkCreateSamplerYcbcrConversionKHR
vkCreateSemaphore
vkCreateSemaphore( m_pDeviceVulkan, &acquireNextImageSemaphoreCreateInfo, NULL, &pAcquireNextImageSemaphore )
vkCreateSemaphore( m_pDeviceVulkan, &semaphoreCreateInfo, nullptr, &pVulkanSemaphore->m_pSemaphore )
vkCreateSemaphore( VulkanDevice(), &semaphoreCreateInfo, NULL, &m_pMultiGpuTransferSemaphores[ nTransfer ] )
vkCreateSemaphore( VulkanDevice(), &semaphoreCreateInfo, NULL, &pSemaphore )
vkCreateShaderModule
vkCreateShaderModule( VulkanDevice(), pShaderModuleCreateInfo, nullptr, &pShaderModule )
vkCreateSharedSwapchainsKHR
vkCreateSwapchainKHR
vkCreateValidationCacheEXT
vkCreateValidationCacheEXT returned error %s.
vkDebugMarkerSetObjectNameEXT
vkDebugMarkerSetObjectTagEXT
vkDebugReportMessageEXT
VK DEBUG %s %llu:%d: %s
VkDescriptorSet CRenderDeviceVulkan::UpdateDescriptorSetPool(int32_t, VulkanDescriptorSetPool_t **, VkDescriptorSetLayout, uint32_t)
vkDestroyAccelerationStructureNV
vkDestroyBuffer
vkDestroyBufferView
vkDestroyCommandPool
vkDestroyDebugReportCallbackEXT
vkDestroyDebugUtilsMessengerEXT
vkDestroyDescriptorPool
vkDestroyDescriptorSetLayout
vkDestroyDescriptorUpdateTemplate
vkDestroyDescriptorUpdateTemplateKHR
vkDestroyDevice
vkDestroyEvent
vkDestroyFence
vkDestroyFramebuffer
vkDestroyImage
vkDestroyImageView
vkDestroyIndirectCommandsLayoutNVX
vkDestroyInstance
vkDestroyObjectTableNVX
vkDestroyPipeline
vkDestroyPipelineCache
vkDestroyPipelineLayout
vkDestroyQueryPool
vkDestroyRenderPass
vkDestroySampler
vkDestroySamplerYcbcrConversion
vkDestroySamplerYcbcrConversionKHR
vkDestroySemaphore
vkDestroyShaderModule
vkDestroySurfaceKHR
vkDestroySwapchainKHR
vkDestroyValidationCacheEXT
vkDeviceWaitIdle
vkDeviceWaitIdle( m_pDeviceVulkan )
vkDisplayPowerControlEXT
vkEndCommandBuffer
vkEndCommandBuffer( m_pCmdBuffer )
vkEndCommandBuffer( pCmdBuffer )
vkEndCommandBuffer( pCommandBuffer )
vkEndCommandBuffer( pCommandBuffer->m_pCmdBuffer )
vkEndCommandBuffer( pResetQueriesCommandBuffer )
vkEnumerateDeviceExtensionProperties
vkEnumerateDeviceLayerProperties
vkEnumerateInstanceExtensionProperties
vkEnumerateInstanceExtensionProperties( layerName, ... ) failed.
vkEnumerateInstanceExtensionProperties( layerName, ... , NULL ) failed.
vkEnumerateInstanceExtensionProperties( NULL, ... ) failed.
vkEnumerateInstanceExtensionProperties( NULL, ... , NULL ) failed.
vkEnumerateInstanceLayerProperties
vkEnumerateInstanceLayerProperties( ... ) failed.
vkEnumerateInstanceLayerProperties( ... , NULL ) failed.
vkEnumerateInstanceVersion
vkEnumeratePhysicalDeviceGroups
vkEnumeratePhysicalDeviceGroupsKHR
vkEnumeratePhysicalDeviceGroupsKHR: no physical device groups supported.  Using single GPU.
vkEnumeratePhysicalDevices
vkEnumeratePhysicalDevices failed, unable to enumerate GPUs with Vulkan.
vkEnumeratePhysicalDevices failed, unable to init and enumerate GPUs with Vulkan.
VK_ERROR_DEVICE_LOST
VK_ERROR_EXTENSION_NOT_PRESENT
VK_ERROR_FORMAT_NOT_SUPPORTED
VK_ERROR_FRAGMENTED_POOL
VK_ERROR_INCOMPATIBLE_DISPLAY_KHR
VK_ERROR_INCOMPATIBLE_DRIVER
VK_ERROR_INITIALIZATION_FAILED
VK_ERROR_INVALID_EXTERNAL_HANDLE
VK_ERROR_INVALID_SHADER_NV
VK_ERROR_LAYER_NOT_PRESENT
VK_ERROR_MEMORY_MAP_FAILED
VK_ERROR_NATIVE_WINDOW_IN_USE_KHR
VK_ERROR_NOT_PERMITTED_EXT
VK_ERROR_OUT_OF_DATE_KHR
VK_ERROR_OUT_OF_DEVICE_MEMORY
VK_ERROR_OUT_OF_HOST_MEMORY
VK_ERROR_OUT_OF_POOL_MEMORY
VK ERROR %s %llu:%d: %s
VK_ERROR_SURFACE_LOST_KHR
VK_ERROR_TOO_MANY_OBJECTS
VK_ERROR_VALIDATION_FAILED_EXT
VK_EVENT_RESET
VK_EVENT_SET
VK_EXT_debug_marker
VK_EXT_debug_report
VK_EXT_debug_utils
VK_EXT_memory_budget
VK_EXT_separate_stencil_usage
VK_EXT_validation_cache
vkFlushMappedMemoryRanges
vkFlushMappedMemoryRanges( m_pDeviceVulkan, 1, &mappedMemoryRange )
vkFreeCommandBuffers
vkFreeDescriptorSets
vkFreeMemory
vkGetAccelerationStructureHandleNV
vkGetAccelerationStructureMemoryRequirementsNV
vkGetAndroidHardwareBufferPropertiesANDROID
vkGetBufferMemoryRequirements
vkGetBufferMemoryRequirements2
vkGetBufferMemoryRequirements2KHR
vkGetCalibratedTimestampsEXT
vkGetDescriptorSetLayoutSupport
vkGetDescriptorSetLayoutSupportKHR
vkGetDeviceGroupPeerMemoryFeatures
vkGetDeviceGroupPeerMemoryFeaturesKHR
vkGetDeviceGroupPresentCapabilitiesKHR
vkGetDeviceGroupSurfacePresentModesKHR
vkGetDeviceMemoryCommitment
vkGetDeviceProcAddr
vkGetDeviceQueue
vkGetDeviceQueue2
vkGetDisplayModeProperties2KHR
vkGetDisplayModePropertiesKHR
vkGetDisplayPlaneCapabilities2KHR
vkGetDisplayPlaneCapabilitiesKHR
vkGetDisplayPlaneSupportedDisplaysKHR
vkGetEventStatus
vkGetFenceFdKHR
vkGetFenceStatus
vkGetImageDrmFormatModifierPropertiesEXT
vkGetImageMemoryRequirements
vkGetImageMemoryRequirements2
vkGetImageMemoryRequirements2KHR
vkGetImageSparseMemoryRequirements
vkGetImageSparseMemoryRequirements2
vkGetImageSparseMemoryRequirements2KHR
vkGetImageSubresourceLayout
vkGetInstanceProcAddr
vkGetMemoryAndroidHardwareBufferANDROID
vkGetMemoryFdKHR
vkGetMemoryFdPropertiesKHR
vkGetMemoryHostPointerPropertiesEXT
vkGetPastPresentationTimingGOOGLE
vkGetPhysicalDeviceCalibrateableTimeDomainsEXT
vkGetPhysicalDeviceDisplayPlaneProperties2KHR
vkGetPhysicalDeviceDisplayPlanePropertiesKHR
vkGetPhysicalDeviceDisplayProperties2KHR
vkGetPhysicalDeviceDisplayPropertiesKHR
vkGetPhysicalDeviceExternalBufferProperties
vkGetPhysicalDeviceExternalBufferPropertiesKHR
vkGetPhysicalDeviceExternalFenceProperties
vkGetPhysicalDeviceExternalFencePropertiesKHR
vkGetPhysicalDeviceExternalImageFormatPropertiesNV
vkGetPhysicalDeviceExternalSemaphoreProperties
vkGetPhysicalDeviceExternalSemaphorePropertiesKHR
vkGetPhysicalDeviceFeatures
vkGetPhysicalDeviceFeatures2
vkGetPhysicalDeviceFeatures2KHR
vkGetPhysicalDeviceFormatProperties
vkGetPhysicalDeviceFormatProperties2
vkGetPhysicalDeviceFormatProperties2KHR
vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX
vkGetPhysicalDeviceImageFormatProperties
vkGetPhysicalDeviceImageFormatProperties2
vkGetPhysicalDeviceImageFormatProperties2KHR
vkGetPhysicalDeviceImageFormatProperties failed checking for MSAA support, assuming MSAA can't be supported
vkGetPhysicalDeviceMemoryProperties
vkGetPhysicalDeviceMemoryProperties2
vkGetPhysicalDeviceMemoryProperties2KHR
vkGetPhysicalDeviceMultisamplePropertiesEXT
vkGetPhysicalDevicePresentRectanglesKHR
vkGetPhysicalDeviceProperties
vkGetPhysicalDeviceProperties2
vkGetPhysicalDeviceProperties2KHR
vkGetPhysicalDeviceQueueFamilyProperties
vkGetPhysicalDeviceQueueFamilyProperties2
vkGetPhysicalDeviceQueueFamilyProperties2KHR
vkGetPhysicalDeviceSparseImageFormatProperties
vkGetPhysicalDeviceSparseImageFormatProperties2
vkGetPhysicalDeviceSparseImageFormatProperties2KHR
vkGetPhysicalDeviceSurfaceCapabilities2EXT
vkGetPhysicalDeviceSurfaceCapabilities2KHR
vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceFormats2KHR
vkGetPhysicalDeviceSurfaceFormatsKHR
vkGetPhysicalDeviceSurfacePresentModesKHR
vkGetPhysicalDeviceSurfaceSupportKHR
vkGetPipelineCacheData
vkGetPipelineCacheData failed, unable to store pipeline cache to disk.
vkGetPipelineCacheData( m_pDeviceVulkan, m_pPipelineCache, &nCacheSize, NULL )
vkGetPipelineCacheData( m_pDeviceVulkan, pPipelineCache, &nCurrentPipelineSize, NULL )
vkGetPipelineCacheSize failed, unable to store pipeline cache to disk.
vkGetQueryPoolResults
vkGetQueueCheckpointDataNV
vkGetRayTracingShaderGroupHandlesNV
vkGetRefreshCycleDurationGOOGLE
vkGetRenderAreaGranularity
vkGetSemaphoreFdKHR
vkGetShaderInfoAMD
vkGetSwapchainCounterEXT
vkGetSwapchainImagesKHR
vkGetSwapchainStatusKHR
vkGetValidationCacheDataEXT
VK_GOOGLE_display_timing
vkImportFenceFdKHR
vkImportSemaphoreFdKHR
VK_INCOMPLETE
VK INFO %s %llu:%d: %s
vkInvalidateMappedMemoryRanges
VK_KHR_android_surface
VK_KHR_bind_memory2
VK_KHR_descriptor_update_template
VK_KHR_device_group
VK_KHR_device_group_creation
VK_KHR_get_physical_device_properties2
VK_KHR_image_format_list
VK_KHR_maintenance1
VK_KHR_maintenance2
VK_KHR_surface
VK_KHR_swapchain
VK_KHR_swapchain_mutable_format
VK_LAYER_GOOGLE_threading
VK_LAYER_KHRONOS_validation
VK_LAYER_LUNARG_core_validation
VK_LAYER_LUNARG_image
VK_LAYER_LUNARG_parameter_validation
VK_LAYER_LUNARG_standard_validation
VK_LAYER_LUNARG_swapchain
vkMapMemory
vkMapMemory( m_pDeviceVulkan, newMemoryPool.m_pGPUMemory, 0, newMemoryPool.m_nPoolSize, 0, &pMappedBuffer )
vkMapMemory( m_pDeviceVulkan, pDynamicMemoryPool->m_pGPUMemory, 0, pDynamicMemoryPool->m_nPoolSize, 0, &pMappedBuffer )
vkMapMemory( m_pDeviceVulkan, pGPUMemory, 0, nDataSize, 0, &pMappedBuffer )
vkMapMemory( m_pDeviceVulkan, pGPUStagingMemory, 0, nDataSize + nPossibleAlignmentPadding, 0, ( void** ) &pStagingMemory )
vkMapMemory( m_pDeviceVulkan, pNewMemoryPool->m_pGPUMemory, 0, pNewMemoryPool->m_nPoolSize, 0, (void**)&pNewMemoryPool->m_pMappedBuffer )
vkMapMemory( m_pDeviceVulkan, pQuery->m_pQueryPool->m_pResultsMem, nResultOffset, nResultSize, 0, &pMappedBuffer )
vkMapMemory( VulkanDevice(), pStagingMemory, 0, nStagingMemSize, 0, &pLockedData )
vkMergePipelineCaches
vkMergeValidationCachesEXT
VK_NOT_READY
VK_NV_dedicated_allocation
VK_NV_device_diagnostic_checkpoints
VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV
VK_OBJECT_TYPE_BUFFER
VK_OBJECT_TYPE_BUFFER_VIEW
VK_OBJECT_TYPE_COMMAND_BUFFER
VK_OBJECT_TYPE_COMMAND_POOL
VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT
VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT
VK_OBJECT_TYPE_DESCRIPTOR_POOL
VK_OBJECT_TYPE_DESCRIPTOR_SET
VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT
VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE
VK_OBJECT_TYPE_DEVICE
VK_OBJECT_TYPE_DEVICE_MEMORY
VK_OBJECT_TYPE_DISPLAY_KHR
VK_OBJECT_TYPE_DISPLAY_MODE_KHR
VK_OBJECT_TYPE_EVENT
VK_OBJECT_TYPE_FENCE
VK_OBJECT_TYPE_FRAMEBUFFER
VK_OBJECT_TYPE_IMAGE
VK_OBJECT_TYPE_IMAGE_VIEW
VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX
VK_OBJECT_TYPE_INSTANCE
VK_OBJECT_TYPE_OBJECT_TABLE_NVX
VK_OBJECT_TYPE_PHYSICAL_DEVICE
VK_OBJECT_TYPE_PIPELINE
VK_OBJECT_TYPE_PIPELINE_CACHE
VK_OBJECT_TYPE_PIPELINE_LAYOUT
VK_OBJECT_TYPE_QUERY_POOL
VK_OBJECT_TYPE_QUEUE
VK_OBJECT_TYPE_RENDER_PASS
VK_OBJECT_TYPE_SAMPLER
VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION
VK_OBJECT_TYPE_SEMAPHORE
VK_OBJECT_TYPE_SHADER_MODULE
VK_OBJECT_TYPE_SURFACE_KHR
VK_OBJECT_TYPE_SWAPCHAIN_KHR
VK_OBJECT_TYPE_UNKNOWN
VK_OBJECT_TYPE_VALIDATION_CACHE_EXT
VK PERF %s %llu:%d: %s
VkPipelineCacheHeaderVersion mismatch in pipeline cache file (Got: %d Expected: %d).  Deleting %s in order to regenerate it.
VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT
VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT
vkQueueBeginDebugUtilsLabelEXT
vkQueueBindSparse
vkQueueEndDebugUtilsLabelEXT
vkQueueInsertDebugUtilsLabelEXT
vkQueuePresentKHR
vkQueuePresentKHR failed with error %d
vkQueueSubmit
vkQueueSubmit( pQueue, 1, &submitInfo, pFence->Get() )
vkQueueSubmit( VulkanQueue(), 1, &submitInfo, m_pWaitForLeftEyeFenceAMD )
vkQueueSubmit( VulkanQueue(), 1, &submitInfo, presentFence.m_pFence )
vkQueueSubmit( VulkanQueue(), 1, &submitInfo, VK_NULL_HANDLE )
vkQueueWaitIdle
vkQueueWaitIdle( m_pQueueVulkan )
vkQueueWaitIdle( VulkanQueue() )
vkRegisterDeviceEventEXT
vkRegisterDisplayEventEXT
vkRegisterObjectsNVX
vkReleaseDisplayEXT
VKRenderThread
vkResetCommandBuffer
vkResetCommandBuffer( m_pCmdBuffer, 0 )
vkResetCommandBuffer( pCmdBuffer, 0 )
vkResetCommandBuffer( pCommandBuffer, 0 )
vkResetCommandBuffer( (*ppCommandBuffer)->m_pCmdBuffer, 0 )
vkResetCommandBuffer( pResetQueriesCommandBuffer, 0 )
vkResetCommandPool
vkResetDescriptorPool
vkResetEvent
vkResetFences
vkSetDebugUtilsObjectNameEXT
vkSetDebugUtilsObjectTagEXT
vkSetEvent
vkSetHdrMetadataEXT
VK %s - Message Id Number: %d | Message Id Name: %s
vkSubmitDebugUtilsMessageEXT
VK_SUBOPTIMAL_KHR
VK_SUCCESS
VK_TIMEOUT
-vktrace
vkTrimCommandPool
vkTrimCommandPoolKHR
vkTrimCommandPoolNVX
vkUnmapMemory
vkUnregisterObjectsNVX
vkUpdateDescriptorSets
vkUpdateDescriptorSetWithTemplate
vkUpdateDescriptorSetWithTemplateKHR
VK_VALIDATION_FEATURE_DISABLE_ALL_EXT
VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT
VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT
VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT
VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT
VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT
VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT
vkWaitForFences
VK WARNING %s %llu:%d: %s
v"L9x&L9
vloada_halfn
vload_half
vload_halfn
vloadn
V_logf
VMaterialSystem2_001
VMatrix
vmdlkeys0
vmdlkeys1
vmdlkeys2
VMDLLIB001
VMediaFoundation001
VNewAsyncFileSystem001
/!V?O!
/ V?OBT?O
void barrier();
void beginInvocationInterlockARB(void);void endInvocationInterlockARB(void);
void CInputLayoutDict<CInputLayoutVulkan>::ConcatentateInputLayouts(int, RenderInputLayout_t *, int, const RenderInputLayout_t *, bool) [T = CInputLayoutVulkan]
void CKV3FormatManager::RegisterFormatConversion(const KV3ID_t &, const KV3ID_t &, ConversionFn_t)
void ConnectInterfaces(CreateInterfaceFn *, int)
void controlBarrier(int, int, int, int);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent float16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent float[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out fcoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out icoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);
void coopMatLoadNV(out ucoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent float16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent float64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent float[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(fcoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(icoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent int16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent int64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent int8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent int[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent ivec2[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent ivec4[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint16_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint64_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint8_t[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent uint[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent uvec2[] buf, uint element, uint stride, bool colMajor);
void coopMatStoreNV(ucoopmatNV m, volatile coherent uvec4[] buf, uint element, uint stride, bool colMajor);
void COrderedConstructor_Create<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, false>::AddRef(bool) [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>, RESOLVECLASS = CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, bCONSTRUCT_ON_FIRST_USE = false]
void CRenderContextVulkan::MarkIssuesCommands()
void CRenderContextVulkan::SetConstantBufferDataInternal(ConstantBufferHandle_t, uint32, uint32, const void *const *, uint32)
void CRenderDeviceVulkan::CreateDefaultShaders()
void CSheetDataTextureCache::AllocateAndUploadSequenceData(const Sheet_t *, Vector2D *, int *)
void CTextureManagerBase::AsyncHookUpTextureBits(CTextureBase *, ResourceId_t, void *, int, TextureSpecification_t, int32, TextureBitsMemoryType_t)
void CTextureManagerBase::MN_OnResourceFileLoaded(IAsyncResourceDataRequest *, CTextureBase *, TextureSpecification_t, int32)
void CTextureManagerBase::MN_OnResourceLoadCompleted(CTextureBase *, TextureObjectInfo_t &, int32, int)
void CTextureManagerBase::MN_OnResourceLoadFailed(CTextureBase *, int32)
void CTextureManagerBase::PreloadTextureBits(HRenderTexture, RenderTextureDetail_t)
void CTextureManagerBase::RemoveTextureFromAnyQueues(CTextureBase *)
void CUtlBlockMemory<CVfxStaticComboData, int>::ChangeSize(int) [T = CVfxStaticComboData, I = int]
void CUtlBlockMemory<unsigned int, int>::ChangeSize(int) [T = unsigned int, I = int]
void CUtlBuffer::VaPrintf(const char *, va_list)
void CUtlFixedMemory<UtlLinkedListElem_t<BlendStateVulkan_t, long long> >::Grow(int) [T = UtlLinkedListElem_t<BlendStateVulkan_t, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<CDescriptorSetVulkan *, long long> >::Grow(int) [T = UtlLinkedListElem_t<CDescriptorSetVulkan *, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> >::Grow(int) [T = UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<CShaderVulkanBase, long long> >::Grow(int) [T = UtlLinkedListElem_t<CShaderVulkanBase, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> >::Grow(int) [T = UtlLinkedListElem_t<CSwapChainBase *, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<CVertexShaderVulkan, long long> >::Grow(int) [T = UtlLinkedListElem_t<CVertexShaderVulkan, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateVulkan_t, long long> >::Grow(int) [T = UtlLinkedListElem_t<DepthStencilStateVulkan_t, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateVulkan_t, long long> >::Grow(int) [T = UtlLinkedListElem_t<RasterizerStateVulkan_t, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<VkSampler_T *, long long> >::Grow(int) [T = UtlLinkedListElem_t<VkSampler_T *, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<VulkanCommandBufferAndPool_t, long long> >::Grow(int) [T = UtlLinkedListElem_t<VulkanCommandBufferAndPool_t, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<VulkanDescriptorSetPool_t, long long> >::Grow(int) [T = UtlLinkedListElem_t<VulkanDescriptorSetPool_t, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<VulkanMemoryPool_t *, long long> >::Grow(int) [T = UtlLinkedListElem_t<VulkanMemoryPool_t *, long long>]
void CUtlLeanVectorBase<VfxStaticComboLoadRequest_t, short>::EnsureCapacity(int, bool) [T = VfxStaticComboLoadRequest_t, I = short]
void CUtlLeanVectorFixedGrowableBase<CWeakHandle<InfoForResourceTypeCTextureBase>, 2, short>::EnsureCapacity(int, bool) [T = CWeakHandle<InfoForResourceTypeCTextureBase>, N = 2, I = short]
void CUtlLeanVectorFixedGrowableBase<RenderPassAttachmentDesc_t, 8, short>::EnsureCapacity(int, bool) [T = RenderPassAttachmentDesc_t, N = 8, I = short]
void CUtlLeanVectorFixedGrowableBase<RenderPassSubPassDependency_t, 4, short>::EnsureCapacity(int, bool) [T = RenderPassSubPassDependency_t, N = 4, I = short]
void CUtlLeanVectorFixedGrowableBase<RenderPassSubPass_t, 8, short>::EnsureCapacity(int, bool) [T = RenderPassSubPass_t, N = 8, I = short]
void CUtlLeanVectorFixedGrowableBase<RenderSubPassAttachment_t, 2, short>::EnsureCapacity(int, bool) [T = RenderSubPassAttachment_t, N = 2, I = short]
void CUtlLeanVectorFixedGrowableBase<RenderSubPassAttachment_t, 4, short>::EnsureCapacity(int, bool) [T = RenderSubPassAttachment_t, N = 4, I = short]
void CUtlLeanVectorFixedGrowableBase<unsigned char, 12, short>::EnsureCapacity(int, bool) [T = unsigned char, N = 12, I = short]
void CUtlLeanVectorFixedGrowableBase<VkImageMemoryBarrier, 16, short>::EnsureCapacity(int, bool) [T = VkImageMemoryBarrier, N = 16, I = short]
void CVfxStaticComboData::Serialize(CUtlBuffer &, const CVfxByteCodeManager *, VfxProgram_t, uint64) const
void CVfxStaticComboData::Unserialize(CUtlBuffer &, const CVfxProgramData *, VfxProgram_t, uint64, IRuntimeShaderCreateCallbacks *, ICompiletimeShaderCreateCallbacks *)
void EmitStreamVertex(int);void EndStreamPrimitive(int);
void EmitVertex();void EndPrimitive();
void ExitAndReportBadThirdPartyProcesses()
void FloatBitMap_t::ConvertGammaToLinear(FBMGammaType_t)
void function cannot return a value
void ignoreIntersectionNV();void terminateRayNV();
void imageAtomicStore(volatile coherent 
void imageStoreLodAMD(writeonly volatile coherent 
void imageStore(writeonly volatile coherent 
void main( void )									
void memoryBarrier();
void memoryBarrierAtomicCounter();void memoryBarrierBuffer();void memoryBarrierImage();
void memoryBarrier(int, int, int);
void memoryBarrierShared();void groupMemoryBarrier();
void subgroupBarrier();void subgroupMemoryBarrier();void subgroupMemoryBarrierBuffer();void subgroupMemoryBarrierImage();bool subgroupElect();bool   subgroupAll(bool);
void subgroupMemoryBarrierShared();
void traceNV(accelerationStructureNV,uint,uint,uint,uint,uint,vec3,float,vec3,float,int);void executeCallableNV(uint, int);
void VfxInit(bool)
void writePackedPrimitiveIndices4x8NV(uint, uint);
 volatile
VOLATILE
Volatile mask setting must match for Equal and Unequal memory semantics
VolatileTexel
VolatileTexelKHR
VolatileType
V?ORV?O
VP4003
#<vpcf1
vpcf10
vpcf11
vpcf12
vpcf13
vpcf14
vpcf15
vpcf16
vpcf17
vpcf18
vpcf19
vpcf2
vpcf20
vpcf21
vpcf22
vpcf23
vpcf24
vpcf25
vpcf3
vpcf4
vpcf5
vpcf6
vpcf7
vpcf8
vpcf9
VPhysics2_Handle_Interface_001
VPhysics2_Interface_001
VPhysX Interface ResourceMgr v0.1
.vpk:
VpO9WpO
V_powf
V_PrettifyNum
VProcessUtils002
VProfService_001
V_qsort
V_qsort_s
VR_001
vr_carry_type
VR: Creating Device on Adapter (%d) connected to HMD, ignoring passed in Adapter (%d).
V_RemoveDotSlashes
VRenderDeviceSetupV001
vr_explicit_timing_mode
VR explicit timing mode for Vulkan
vr_flush_on_timer
vr_multigpu_skip_semaphores
vr_multigpu_skip_transfers
vr_vulkan_wait_fence_between_eyes
vR@)wbAi{rCiyjB)
$&,V,S
vs_3_0
vs_4_0
vs_4_1
vs_5_0
VScript
VScriptDbg
VScriptManager010
V_SetErrno
_V_SetExtension
VsInputSignatureElement_t
VsInputSignature_t
vsnap
VSNAPFile
V_snprintf
VS_OUTPUT main( const VS_INPUT v )					
	VS_OUTPUT o = ( VS_OUTPUT )0;					
V_sscanf
vstdlib
vstorea_halfn
vstorea_halfn_r
vstore_half
vstore_halfn
vstore_halfn_r
vstore_half_r
vstoren
V_stricmp_fast
VStringTokenSystem001
V_strlower_fast
_V_strncat
_V_strncmp
_V_strncpy
_V_strnicmp_fast
V_strnlen
V_strtod
V_strtoi64
V_strtoui64
$&,V,S,V
V_swscanf
-vulkan
vulkan1.1spv1.4
vulkan_additional_semaphores
-vulkan_alloc_callbacks
-vulkan_amd_disable_bind_vertex_buffers_workaround
vulkan_amd_timestamp_workaround
-vulkan_arm_disable_g76_device_lost_workaround
vulkan_async_descriptors
vulkan_batch_size
vulkan_batch_submits
vulkan_buffer_update_mode
-vulkan_cmd_buffer_pool_size
Vulkan Command Buffer Pool Threshold(%d)
Vulkan Command Buffers:
vulkan_dedicated_allocation_threshold
-vulkan_depth_texture_as_r32f
-vulkan_descriptor_sets_per_pool
Vulkan device does not support precise occlusion queries, this may result in incorrect rendering that relies on accurate occlusion queries (such as tonemapping).
-vulkan_diagnostic_checkpoints
-vulkan_disable_async_compute
-vulkan_disable_device_coherent_allocations
-vulkan_disable_external_subpass_dependency
-vulkan_disable_ext_memory_budget
-vulkan_disable_ext_separate_stencil_usage
-vulkan_disable_ext_validation_cache
-vulkan_disable_google_display_timing
#Vulkan_DisableInstructions
-vulkan_disable_intermediate_swapchain_image
-vulkan_disable_khr_descriptor_update_template
-vulkan_disable_khr_image_format_list
-vulkan_disable_khr_maintenance1
-vulkan_disable_khr_maintenance2
-vulkan_disable_khr_swapchain_mutable_format
-vulkan_disable_mipgen_compute_shader
-vulkan_disable_nv_dedicated_allocation
-vulkan_disable_occlusion_queries
-vulkan_disable_pipeline_cache
-vulkan_disable_pool_textures
-vulkan_disable_secondary_command_buffers
-vulkan_disable_swapchain_sampling
-vulkan_disable_validation_api_parameters
-vulkan_disable_validation_core_checks
-vulkan_disable_validation_object_lifetimes
-vulkan_disable_validation_shaders
-vulkan_disable_validation_thread_safety
-vulkan_disable_validation_unique_handles
Vulkan driver version: %d.%d.%d.%d
Vulkan driver version Major = %d, Minor = %d, Patch = %d
-vulkan_dump_shaders
Vulkan Dynamic Memory Manager Stats:
-vulkan_enable_gpu_validation
-vulkan_enable_nvx_trim_command_pool
-vulkan_enable_robust_buffer_access
-vulkan_enable_validation
Vulkan enabling ARM Mali G76 workaround to avoid VK_ERROR_DEVICE_LOST by setting VK_IMAGE_USAGE_TRANSFER_DST_BIT on swapchain depth/stencil image for <= r16 driver.
Vulkan enabling Qualcomm Adreno 5xx dynamic UBO vkCmdBindDescriptorSets workaround.
Vulkan enabling Qualcomm Adreno 5xx NULL pixel shader workaround.
Vulkan extension enabled: %s
Vulkan failed to create descriptor pool.
vulkan/forceloadshadervulkan.h
-vulkan_force_sm30
Vulkan Framebuffer Manager Stats:
vulkan_framebuffermgr_print
Vulkan framebuffers: %s; renderpasses: %s
Vulkan initialization failed, '%s' likely failed to load.
#Vulkan_InitializationFailure
VulkanKHR
VulkanKhrBindMemory2Extension()->vkBindImageMemory2KHR( VulkanDevice(), 1, &bindImageMemoryInfo )
VulkanKhrSurface()->vkGetPhysicalDeviceSurfaceCapabilitiesKHR( pPhysicalDeviceVulkan, m_pSurfaceKHR, &surfaceCaps )
VulkanKhrSurface()->vkGetPhysicalDeviceSurfacePresentModesKHR( pPhysicalDeviceVulkan, m_pSurfaceKHR, &nPresentModeCount, NULL )
VulkanKhrSurface()->vkGetPhysicalDeviceSurfacePresentModesKHR( pPhysicalDeviceVulkan, m_pSurfaceKHR, &nPresentModeCount, pPresentModes )
VulkanKhrSwapchain()->vkGetSwapchainImagesKHR( m_pDeviceVulkan, m_pSwapChainKHR, &m_nSwapQueueImageCount, NULL )
VulkanKhrSwapchain()->vkGetSwapchainImagesKHR( m_pDeviceVulkan, m_pSwapChainKHR, &m_nSwapQueueImageCount, pSwapChainImages )
Vulkan lazily allocating render targets.
vulkan_memgr_fragmentation_print
vulkan_memgr_print
VulkanMemoryModel
VulkanMemoryModelDeviceScope
VulkanMemoryModelDeviceScopeKHR
VulkanMemoryModelDeviceScopeKHR capability
VulkanMemoryModelKHR capability must only be specified if the VulkanKHR memory model is used.
-vulkan_metal_validation
-vulkan_minimal_validation
Vulkan missing requested extension '%s'.
Vulkan MultiGPU Rendering - Enabled!
Vulkan MultiGPU Rendering - using %d GPUs
-vulkan_no_image_transitions
-vulkan_nv_disable_kepler_workaround
vulkan_peer2peer_mgpu.vtex
Vulkan physical device (%d): supports shader clip distance: %s
Vulkan physical device (%d): using secondary command buffers: %s
Vulkan physical device (%d): using transform constant buffer: %s
Vulkan Physical Device: %s
vulkan_pipeline_compile_spew
vulkan_pipeline_compile_spew_threshold
Vulkan Pipeline Manager Stats:
vulkan_pipelinemgr_print
vulkan/pipelinemgrvulkan.cpp
Vulkan pipelines: %s; pipeline layouts: %s
Vulkan PMB Memory Manager Stats:
-vulkan_qc_disable_dynamic_ubo_workaround
-vulkan_qc_disable_null_pixel_shader_workaround
vulkan_readpixels_resolve.vtex
vulkan/rendercontextvulkan.cpp
vulkan/rendercontextvulkan.cpp(499): 
vulkan/rendercontextvulkan.cpp(512): 
vulkan/renderdevicevulkan.cpp
vulkan/renderdevicevulkan.cpp(1668): 
vulkan/renderdevicevulkan.cpp(2302): 
vulkan/renderdevicevulkan.cpp(2931): 
vulkan/renderdevicevulkan.cpp(3240): 
vulkan/renderdevicevulkan.cpp(3977): 
-vulkanrenderthreadstack
vulkan/renderthreadvulkan.cpp(194): Error! NULL texture pointer sent to OnReadPixels()!
#Vulkan_RequiredExtensionMissing
-vulkan_scene_system_job_cost
Vulkan shader pipeline cache file version is %d instead of %d for %s. Deleting.
vulkan_shader_table_print
Vulkan spec allows BuiltIn 
Vulkan spec allows BuiltIn HelperInvocation to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn HelperInvocation to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn InstanceId to be used only with IntersectionNV, ClosestHitNV and AnyHitNV execution models. 
Vulkan spec allows BuiltIn InvocationId to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn InvocationId to be used only with TessellationControl or Geometry execution models. 
Vulkan spec allows BuiltIn PatchVertices to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn PatchVertices to be used only with TessellationControl or TessellationEvaluation execution models. 
Vulkan spec allows BuiltIn PointCoord to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn PointCoord to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn PointSize to be only used for variables with Input or Output storage class. 
Vulkan spec allows BuiltIn PointSize to be used only with Vertex, TessellationControl, TessellationEvaluation or Geometry execution models. 
Vulkan spec allows BuiltIn Position to be only used for variables with Input or Output storage class. 
Vulkan spec allows BuiltIn Position to be used only with Vertex, TessellationControl, TessellationEvaluation or Geometry execution models. 
Vulkan spec allows BuiltIn PrimitiveId to be only used for variables with Input or Output storage class. 
Vulkan spec allows BuiltIn PrimitiveId to be used only with Fragment, TessellationControl, TessellationEvaluation or Geometry execution models. 
Vulkan spec allows BuiltIn SampleId to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn SampleId to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn SampleMask to be only used for variables with Input or Output storage class. 
Vulkan spec allows BuiltIn SampleMask to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn SamplePosition to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn SamplePosition to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn TessCoord to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn TessCoord to be used only with TessellationEvaluation execution model. 
Vulkan spec disallows OpAtomicLoad with Memory Semantics Release, AcquireRelease and SequentiallyConsistent
Vulkan spec disallows OpAtomicStore with Memory Semantics Acquire, AcquireRelease and SequentiallyConsistent
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Input storage class if execution model is Vertex.
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Output storage class if execution model is Fragment.
Vulkan spec doesn't allow BuiltIn Layer and ViewportIndex to be used for variables with Input storage class if execution model is Vertex, TessellationEvaluation, or Geometry.
Vulkan spec doesn't allow BuiltIn Layer and ViewportIndex to be used for variables with Output storage class if execution model is Fragment.
Vulkan spec doesn't allow BuiltIn PointSize to be used for variables with Input storage class if execution model is Vertex.
Vulkan spec doesn't allow BuiltIn Position to be used for variables with Input storage class if execution model is Vertex.
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is Fragment.
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is TessellationControl.
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is TessellationEvaluation.
Vulkan spec doesn't allow BuiltIn VertexId/InstanceId to be used.
Vulkan spec doesn't allow TessLevelOuter/TessLevelInner to be used for variables with Input storage class if execution model is TessellationControl.
Vulkan spec doesn't allow TessLevelOuter/TessLevelInner to be used for variables with Output storage class if execution model is TessellationEvaluation.
: Vulkan specification requires Memory Semantics to have one of the following bits set: Acquire, Release, AcquireRelease or SequentiallyConsistent
Vulkan spec requires BuiltIn WorkgroupSize to be a constant. 
Vulkan Static Memory Manager Stats:
Vulkan static mem: %s; PMB mem: %s; command buffers: %s
Vulkan swapchain does not support VK_IMAGE_USAGE_TRANSFER_DST_BIT. Upscaling desktop friendly fullscreen not supported.
Vulkan swapchain does not support VK_IMAGE_USAGE_TRANSFER_SRC_BIT. Screenshots not supported.
Vulkan swapchain out-of-date, suboptimal, or surface lost - recreating.  Result: (%s)
Vulkan swapchain recreated succesfully.  Attempting to acquire next image...
Vulkan texture manager frame update
vulkan/texturevulkan.cpp(1451): 
vulkan/texturevulkan.cpp(733): 
vulkan/texturevulkan.cpp(749): 
Vulkan using external subpass dependencies for all renderpasses.
-vulkan_validation_warnings
V_UTF16ToUTF8
V_UTF32ToUTF8
%@,V,V
V,V,S
V_vsnprintf
V_vsnprintfSize
V_vsnprintfWarnTrunc
V_wcstod
V_wcstoi64
v@y(]
v@y(5
v@y	9
v@y9C
v@yA3
v@yc&
v@yh>
v@yhj
v@yiA
v@yOG
v@y	q
v@y	t@y
v@y(U
v@yxW
v@yY@
W3C WebGPU Group
W3C WebGPU Group WHLSL Shader Translator
(#W9s>E
Waited for left eye command buffers to finish for 250ms, trying again.  Likely a GPU hang.
WAITING_FOR_HOOKUP_JOB 
WAITING_FOR_IO 
Waiting for oustanding shader compile on another thread for %0.2f seconds.
WaitKernel
WaitWorkGroup
WALL time
warning: 
WARNING : 
WARNING: 
WARNING: AST will form illegal SPIR-V; need to transform to legalize
Warning: have %d in use and %d free per-frame memory stacks outstanding. The oldest stack was created at present %d, and we're now on present %d
Warning: have oustanding per-frame memory stack with %d allocations
Warning:  %s = '%s' is infinite, clamping value.
Warning: thumbnail image size does not match data length %u
WARNING: Trying to create a CRenderContextPtr without a valid context.
Warning: unknown JFIF revision number %d.%02d
Warning, (version, profile) forced to be (
WaveActiveAllEqual
WaveActiveAllEqualBool
WaveActiveAllTrue
WaveActiveAnyTrue
WaveActiveBallot
WaveActiveBitAnd
WaveActiveBitOr
WaveActiveBitXor
WaveActiveCountBits
WaveActiveMax
WaveActiveMin
WaveActiveProduct
WaveActiveSum
WaveGetLaneCount
WaveGetLaneIndex
WaveIsFirstLane
WavePrefixCountBits
WavePrefixProduct
WavePrefixSum
WaveReadLaneAt
WaveReadLaneFirst
wcslen
WebGPU
webgpu0
WebGPU does not allow BuiltIn 
WebGPU requires SPIR-V to be little endian.
WebGPU spec allows BuiltIn LocalInvocationIndex to be only used for variables with Input storage class. 
WebGPU spec allows BuiltIn Position to be only used for variables with Output storage class. 
WebGPU spec allows BuiltIn Position to be used only with the Vertex execution model. 
WebGPU spec allows BuiltIn VertexIndex to be used only with GLCompute execution model. 
WeightList
When BuiltIn decoration is applied to a structure-type member, 
when Dim is either 1D or 2D.
when more than one fragment shader output, all must have location qualifiers
, which cannot be used with the current execution model:
, which cannot be used with the current execution modes:
> which is called with execution model 
 which is decorated with BuiltIn 
 which is dependent on 
while
WHILE
), while in source code it is (
while sub-statement
Width is too large for libpng to process pixels
WIN32
WINDOWS
Wine VKD3D Shader Compiler
WINXP
with bias argument
    with %d x %d thumbnail image
with ExplicitLod
 with expression
 with two memory access operands requires SPIR-V 1.4 or later
with value: 
)wLQh
/{W?O
 words: 
 words.
), words(
 words, but found 
 words, but stated word count is 
 words, but the limit is 
 words instead.
 words instead of 
 words long
workaround-1209
Workaround AMD bug where vkCmdPipelineBarrier is needed prior to vkCmdResetQueryPool.
WorkDim
Workgroup and Subgroup
 workgroupcoherent
WORKGROUPCOHERENT
Workgroup, CrossWorkgroup, Generic, Image or StorageBuffer 
Workgroup for OpControlBarrier
Workgroup for OpMemoryBarrier
Workgroup, Invocation, and QueueFamilyKHR
WorkgroupMemoryBarrier
WorkgroupMemoryBarrierWithGroupSync
Workgroup storage class pointer requires VariablePointers capability to be specified
WorkshopSetup001
WorldRendererBuilderMgr001
WorldRendererMgr001
/{W?Os
/{W?OZ
wrap-opkill
wrinkle
Write failed on temporary file --- out of disk space?
writeInvocation
writeInvocationAMD
WriteInvocationAMD
 writeonly
WriteOnly
WRITEONLY
writePackedPrimitiveIndices4x8NV
WritePackedPrimitiveIndices4x8NV
Write to EMS failed
Write to XMS failed
Wrong JPEG library version: library is %d, caller expects %d
wrong number of arguments
wrong number of matrix columns:
wrong number of structure members
 wrong operand type
 wrong operand types:
wrong vector size (or rows in a matrix column):
wv@yh&@
w@y+/
w@y	e
(w@yIw@y
W@y_! k
w@yy>
${)x%
<x360>
X360_DST16
X360_DST24
X360_DST24F
X6`(@Q
.X7 '(7
X80ijx
X8Qikx
Xbox 360
Xderef
    xfb_buffer 
 xfb_buffer=
xfb_buffer
XfbBuffer
xfb layout qualifier
 xfb_offset=
xfb_offset
xfb_stream
 xfb_stride=
, xfb_stride 
XfbStride
xfb_stride is too large:
xfb_stride is too small to hold all buffer entries:
xfb_stride must be multiple of 2 for buffer holding a half float or 16-bit integer:
xfb_stride must be multiple of 4:
xfb_stride must be multiple of 8 for buffer holding a double or 64-bit integer:
	{(xh2B
Xix84
*-@x_! k
*-@x_! k 
_{*xl
x"L9y&L9
X-LEGEND
X-LEGEND Mesa-IR/SPIR-V Translator
/!X n
X nBX n
/!X ncT?O6(!
X nF*a
X nN(a
XOR_ASSIGN
XOR_OP
Xsx,xlx
:X"xA
_{-x_{.xl
_x!yh
XYZ values out of representable range
!@y	!
"@y*%
)%@y?
@y3yh
!@y3yj
	y4xl
y(4@yh6
!@y5yh
@y5yh
!@y5yj
!@y6yh
@y6yh
!@y6yj
!@y7yh
@y7yh
@y7yk
Y80ijx
#Y80ijx
Y8Qikx
#Y8Qikx
!@y8yh
@y8yh
y(8@yh:
y+	@9km
!@y9yh
!@y9yj
!@@ya
yaJEy
yaNEy
yaw_end
yaw_start
.%@y-A@y+
@y)A@y
@yAyl
y(/Bx
#@@yc
y#	@=c
yC	@}c
y	eDy
*@yh2
yh2Dy
.@yh6
yh6@y
yhBJy
yh/Bx
yH/Bx
	yh~D
yhj)x
yh/Jx
yH/Jx
yhrBy
yhr@y
yhR@y
yhvCyvz
)yhx?
@yh:!y	
yh:@y
)%@yi*
)	@yi*
@yI}	
	yi:B
yi~Byk
 yielding Result Id 
yif@9
yiFJy?
yif@y?
{YIN?
yiNJy
yiNJy)
yin@y)
@yiR;
	yivB
@yI!@y(}
yI/@y)
yI'@y?
yI/@yJ
yizByj
	yj:B
)YJJ)}
yjx+y*
yJ%@y_
!@yjyj
!@yJ!@y-yh
@y_!(k!
@y?! k
"@yK%
@ykA@yk}
@y?! kC
@yK	@y
yL4@9
yL8@9
yL<@9
yL,@9
yL(@9
yL$@9
yL\@9
yL|@9B
y"L9z&L9
yLd@9
yLD@9
yLh@9
yLH@9
ylh>xl
yLl@9
yLL@9
yLt@9
yLT@9
yLx@9
yLX@9
@ynA@yoa@yk
Y ng*a
ynh(xc
yNs*!
Y nsZ n
Y n)Y nJY nkY n
	You must construct it with ORDERED_CONSTRUCT macro in the dependency resolution function.
@yRhnxQ~
@y)S<
Ys.968
y)U@y?
@yUym
	y)wB
y)%@y?
y)	@y
y	-@y)
y	,@y)
!@y;yh
!@y!yh
!@y(yh
@y!yh
@y(yh
	Y@yI
!@y*yj
@y+yj
y*-@yJ
@y	y;xh
@y,!@y)	@y
_Z10DevWarningPKcz
_Z14V_stristr_fastPKcS0_
_Z17LoggingSystem_Logi17LoggingSeverity_t5ColorPKcz
_Z17LoggingSystem_Logi17LoggingSeverity_tRK14LeafCodeInfo_tPKcz
_Z6DevMsgPKcz
#Z80ijx
#Z8	A
_ZdaPv
_ZdlPv
ZeroExtend
Zero length tRNS chunk
ZFP compression is not supported.
ZFP compression is not supported in this build
z:K(None)
zlib memory error
zlib stream error
zlib version error
_ZN12CThreadEvent3SetEv
_ZN12CThreadEventC1Eb
_ZN13CBufferString10ExtendPathEPKcc
_ZN13CBufferString10FixSlashesEc
_ZN13CBufferString11ToLowerFastEi
_ZN13CBufferString12AppendFormatEPKcz
_ZN13CBufferString12SetExtensionEPKc
_ZN13CBufferString13FixupPathNameEv
_ZN13CBufferString18StripTrailingSlashEv
_ZN13CBufferString5PurgeEi
_ZN13CBufferString6InsertEiPKcib
_ZN13CBufferString8RemoveAtEii
_ZN13COneTimeEvent8AllocateEv
_ZN16CThreadSemaphore7ReleaseEiPi
_ZN16CThreadSemaphoreD1Ev
_ZN17CThreadSpinRWLock10UnlockReadEv
_ZN17CThreadSpinRWLock11LockForReadEv
_ZN17CThreadSpinRWLock11UnlockWriteEv
_ZN17CThreadSpinRWLock16SpinLockForWriteEy
_ZN17CThreadSyncObject4WaitEj
_ZN17CThreadSyncObjectD2Ev
Z n1*a
_ZN21CThreadMultiWaitEvent3SetEv
_ZN22CThreadRWLock_FastRead20UnlockReadAccountingEj
_ZN22CThreadRWLock_FastRead23UnlockRead_LockForWriteEv
_ZN22CThreadRWLock_FastRead23UnlockWrite_LockForReadEv
_ZN22CThreadRWLock_FastRead25WaitForReadLockTransitionEj
_ZN22CThreadRWLock_FastRead30HandleFirstWriteLockTransitionEv
_ZN22CThreadRWLock_FastReadC1Ev
_Znam
_ZNKSt11logic_error4whatEv
_ZNKSt6__ndk16locale9use_facetERNS0_2idE
_ZNKSt6__ndk18ios_base6getlocEv
_ZNKSt9exception4whatEv
Z n{[ n
Z nRZ n
_ZNSt11logic_errorC2EPKc
_ZNSt11logic_errorC2ERKS_
_ZNSt12length_errorD1Ev
_ZNSt12out_of_rangeD1Ev
_ZNSt6__ndk112__next_primeEm
_ZNSt6__ndk14cerrE
_ZNSt6__ndk14coutE
_ZNSt6__ndk15ctypeIcE2idE
_ZNSt6__ndk16locale7classicEv
_ZNSt6__ndk16localeaSERKS0_
_ZNSt6__ndk16localeC1ERKS0_
_ZNSt6__ndk16localeC1Ev
_ZNSt6__ndk16localeD1Ev
_ZNSt6__ndk17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE2idE
_ZNSt6__ndk17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE2idE
_ZNSt6__ndk18ios_base33__set_badbit_and_consider_rethrowEv
_ZNSt6__ndk18ios_base4initEPv
_ZNSt6__ndk18ios_base5clearEj
_ZNSt6__ndk18ios_base5imbueERKNS_6localeE
_ZNSt6__ndk18ios_baseD2Ev
_ZNSt6__ndk19to_stringEi
_ZNSt6__ndk19to_stringEj
_ZNSt6__ndk19to_stringEx
_ZNSt9exceptionD2Ev
_ZNV16CThreadFastMutex4LockEyj
_Znwm
_ZnwmRKSt9nothrow_t
Z n)Y n
\z^@Q
_ZSt18uncaught_exceptionv
_ZSt7nothrow
_ZSt9terminatev
_ZTCNSt6__ndk118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE0_NS_13basic_istreamIcS2_EE
_ZTCNSt6__ndk119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE0_NS_13basic_istreamIcS2_EE
_ZTINSt6__ndk113basic_istreamIcNS_11char_traitsIcEEEE
_ZTINSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEEE
_ZTINSt6__ndk114basic_iostreamIcNS_11char_traitsIcEEEE
_ZTINSt6__ndk115basic_streambufIcNS_11char_traitsIcEEEE
_ZTINSt6__ndk115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
_ZTINSt6__ndk118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
_ZTINSt6__ndk119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
_ZTINSt6__ndk18ios_baseE
_ZTINSt6__ndk19basic_iosIcNS_11char_traitsIcEEEE
_ZTSNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEEE
_ZTSNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEEE
_ZTSNSt6__ndk114basic_iostreamIcNS_11char_traitsIcEEEE
_ZTSNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEEE
_ZTSNSt6__ndk115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
_ZTSNSt6__ndk118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
_ZTSNSt6__ndk119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
_ZTSNSt6__ndk19basic_iosIcNS_11char_traitsIcEEEE
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTVNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEEE
_ZTVNSt6__ndk115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
_ZTVNSt6__ndk118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
_ZTVNSt6__ndk119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
_ZTVSt12length_error
_ZTVSt12out_of_range
/ZW?Ok
{zx	=
z{xtvB
