 a __bss_end__
 a _bss_end__
 a __bss_start
 a __bss_start__
 a _DYNAMIC
 a _edata
 a _end
 a __end__
 a _GLOBAL_OFFSET_TABLE_
 __assert2@@LIBC
 b cached_buffer
 b g__cached_buffer_lock
 b get_gravity_class.class
 b _hb_CrapPool
 b hb_language_get_default::default_language
 b _hb_options
 b _hb_ot_complex_shaper_arabic
 b _hb_ot_complex_shaper_hangul
 b _hb_ot_complex_shaper_indic
 b _hb_ot_complex_shaper_khmer
 b _hb_ot_complex_shaper_tibetan
 b _hb_ot_complex_shaper_use
 b langs
 b nil_shaper_list
 b pango_fc_decoder_get_type.g_define_type_id__volatile
 b pango_fc_decoder_parent_class
 b PangoFcDecoder_private_offset
 b pango_fc_face_get_type.g_define_type_id__volatile
 b pango_fc_face_parent_class
 b PangoFcFace_private_offset
 b pango_fc_family_get_type.g_define_type_id__volatile
 b pango_fc_family_parent_class
 b PangoFcFamily_private_offset
 b pango_fc_font_find_shaper.shaper
 b pango_fc_font_get_type.g_define_type_id__volatile
 b pango_fc_font_map_get_type.g_define_type_id__volatile
 b pango_fc_font_map_parent_class
 b PangoFcFontMap_private_offset
 b pango_fc_font_parent_class
 b PangoFcFont_private_offset
 b pango_fc_fontset_get_type.g_define_type_id__volatile
 b pango_fc_fontset_parent_class
 b PangoFcFontset_private_offset
 b pango_fc_get_hb_font_funcs.funcs
 b pango_fc_shape_engine_get_type.g_define_type_id__volatile
 b pango_fc_shape_engine_parent_class
 b PangoFcShapeEngine_private_offset
 b pango_ft2_font_get_type.g_define_type_id__volatile
 b pango_ft2_font_map_get_type.g_define_type_id__volatile
 b pango_ft2_font_map_parent_class
 b PangoFT2FontMap_private_offset
 b pango_ft2_font_parent_class
 b PangoFT2Font_private_offset
 b pango_ft2_global_fontmap
 b pango_ft2_renderer_get_type.g_define_type_id__volatile
 b pango_ft2_renderer_parent_class
 b PangoFT2Renderer_private_offset
 b pango_ot_info_get_type.g_define_type_id__volatile
 b pango_ot_info_parent_class
 b PangoOTInfo_private_offset
 b pango_ot_ruleset_get_for_description.ruleset
 b pango_ot_ruleset_get_type.g_define_type_id__volatile
 b pango_ot_ruleset_parent_class
 b PangoOTRuleset_private_offset
 bsearch@@LIBC
 b static_ft_funcs
 b static_ft_library
 b static_glib_funcs
 b static_shaper_list
 b static_shapers
 b static_ucdn_funcs
 calloc@@LIBC
 close@@LIBC
 __cxa_atexit@@LIBC
 __cxa_finalize@@LIBC
 d all_shapers
 d common_features
 d $d
 d $d.10
 d $d.2
 d $d.3
 d $d.38
 d $d.5
 d __dso_handle
 d _hb_font_funcs_default
 d _hb_Null_hb_blob_t
 d _hb_Null_hb_buffer_t
 d _hb_Null_hb_face_t
 d _hb_Null_hb_font_funcs_t
 d _hb_Null_hb_font_t
 d _hb_Null_hb_shape_plan_t
 d _hb_Null_hb_unicode_funcs_t
 d _hb_ot_complex_shaper_hebrew
 d _hb_ot_complex_shaper_myanmar
 d _hb_ot_complex_shaper_thai
 d horizontal_features
 d modifier_combining_marks
 d s_FT_New_Face
 __errno@@LIBC
 FcCharSetFirstPage
 FcCharSetHasChar
 FcCharSetNextPage
 FcConfigDestroy
 FcConfigReference
 FcConfigSubstitute
 FcDefaultSubstitute
 FcFontList
 FcFontMatch
 FcFontRenderPrepare
 FcFontSetAdd
 FcFontSetCreate
 FcFontSetDestroy
 FcFontSort
 FcFreeTypeCharIndex
 fclose@@LIBC
 FcMatrixMultiply
 FcObjectSetAdd
 FcObjectSetBuild
 FcObjectSetCreate
 FcObjectSetDestroy
 FcPatternAddDouble
 FcPatternAddMatrix
 FcPatternAddString
 FcPatternBuild
 FcPatternCreate
 FcPatternDel
 FcPatternDestroy
 FcPatternDuplicate
 FcPatternEqual
 FcPatternGet
 FcPatternGetBool
 FcPatternGetCharSet
 FcPatternGetDouble
 FcPatternGetInteger
 FcPatternGetMatrix
 FcPatternGetString
 FcPatternHash
 FcPatternReference
 FcWeightFromOpenTypeDouble
 FcWeightToOpenTypeDouble
 feof@@LIBC
 ferror@@LIBC
 fopen@@LIBC
 fread@@LIBC
 free@@LIBC
 fstat@@LIBC
 FT_Done_Face
 FT_Done_FreeType
 FT_Done_MM_Var
 FT_Face_GetCharVariantIndex
 FT_Get_Advance
 FT_Get_Char_Index
 FT_Get_Glyph_Name
 FT_Get_Kerning
 FT_Get_MM_Var
 FT_Get_Name_Index
 FT_Get_Sfnt_Table
 FT_Get_Var_Blend_Coordinates
 FT_Init_FreeType
 FT_Load_Glyph
 FT_Load_Sfnt_Table
 FT_MulFix
 FT_New_Face
 FT_New_Memory_Face
 FT_Reference_Face
 FT_Render_Glyph
 FT_Request_Size
 FT_Select_Charmap
 FT_Set_Char_Size
 FT_Set_Transform
 FT_Set_Var_Blend_Coordinates
 FT_Vector_Transform
 g_array_append_vals
 g_array_free
 g_array_new
 g_array_sort
 g_ascii_strcasecmp
 g_assertion_message_expr
 g_bytes_get_data
 g_bytes_ref
 g_bytes_unref
 g_enum_get_value
 g_enum_get_value_by_nick
 getenv@@LIBC
 g_free
 g_get_prgname
 g_hash_table_destroy
 g_hash_table_foreach
 g_hash_table_foreach_remove
 g_hash_table_insert
 g_hash_table_lookup
 g_hash_table_new
 g_hash_table_new_full
 g_hash_table_remove
 g_intern_static_string
 g_list_prepend
 g_list_remove_link
 g_log
 g_malloc0_n
 g_malloc_n
 g_memdup
 g_mutex_trylock
 g_mutex_unlock
 g_object_class_install_property
 g_object_new
 g_object_ref
 g_object_set
 g_object_unref
 g_once_init_enter
 g_once_init_leave
 g_param_spec_object
 g_param_spec_pointer
 g_ptr_array_add
 g_ptr_array_free
 g_ptr_array_new
 g_queue_free
 g_queue_new
 g_queue_pop_tail
 g_queue_push_head_link
 g_realloc_n
 g_return_if_fail_warning
 g_slice_alloc
 g_slice_alloc0
 g_slice_free1
 g_slist_append
 g_slist_delete_link
 g_slist_foreach
 g_slist_free
 g_slist_prepend
 g_strdup
 g_str_equal
 g_strfreev
 g_str_hash
 g_strsplit
 g_type_check_instance_is_a
 g_type_class_add_private
 g_type_class_adjust_private_offset
 g_type_class_peek_parent
 g_type_class_ref
 g_type_instance_get_private
 g_type_name
 g_type_register_static_simple
 g_unichar_combining_class
 g_unichar_compose
 g_unichar_decompose
 g_unichar_fully_decompose
 g_unichar_get_mirror_char
 g_unichar_get_script
 g_unichar_iswide
 g_unichar_iszerowidth
 g_unichar_type
 g_unicode_script_from_iso15924
 g_unicode_script_to_iso15924
 g_utf8_get_char
 g_utf8_skip
 g_value_get_object
 g_value_get_pointer
 g_value_set_pointer
 g_value_take_object
 g_weak_ref_clear
 g_weak_ref_get
 g_weak_ref_set
 malloc@@LIBC
 memcmp@@LIBC
 memcpy@@LIBC
 memmove@@LIBC
 memset@@LIBC
 mmap@@LIBC
 mprotect@@LIBC
 munmap@@LIBC
 N $d.1
 n $d.10
 N $d.10
 n $d.11
 N $d.11
 n $d.12
 N $d.12
 n $d.13
 N $d.13
 N $d.14
 n $d.15
 N $d.15
 n $d.16
 N $d.16
 N $d.17
 N $d.18
 n $d.19
 N $d.19
 N $d.2
 N $d.20
 N $d.21
 N $d.22
 n $d.23
 N $d.23
 N $d.234
 N $d.235
 N $d.236
 N $d.237
 N $d.238
 N $d.239
 N $d.24
 N $d.240
 N $d.241
 n $d.242
 N $d.243
 N $d.244
 N $d.25
 N $d.26
 N $d.27
 N $d.28
 N $d.29
 N $d.3
 N $d.30
 n $d.31
 N $d.32
 N $d.33
 N $d.4
 N $d.40
 N $d.41
 N $d.42
 N $d.43
 N $d.44
 N $d.45
 N $d.46
 N $d.47
 n $d.48
 N $d.49
 N $d.5
 N $d.50
 N $d.6
 n $d.7
 N $d.7
 n $d.8
 N $d.8
 n $d.9
 N $d.9
 open@@LIBC
 pango_context_get_font_map
 pango_context_get_language
 pango_context_get_matrix
 pango_context_set_language
 pango_coverage_get
 pango_coverage_new
 pango_coverage_ref
 pango_coverage_set
 pango_coverage_unref
 pango_engine_shape_get_type
 pango_font_describe_with_absolute_size
 pango_font_description_copy
 pango_font_description_copy_static
 pango_font_description_equal
 pango_font_description_free
 pango_font_description_get_family
 pango_font_description_get_gravity
 pango_font_description_get_size
 pango_font_description_get_size_is_absolute
 pango_font_description_get_stretch
 pango_font_description_get_style
 pango_font_description_get_variations
 pango_font_description_get_weight
 pango_font_description_hash
 pango_font_description_new
 pango_font_description_set_absolute_size
 pango_font_description_set_family
 pango_font_description_set_gravity
 pango_font_description_set_size
 pango_font_description_set_stretch
 pango_font_description_set_style
 pango_font_description_set_variant
 pango_font_description_set_variations
 pango_font_description_set_weight
 pango_font_description_to_string
 pango_font_description_unset_fields
 pango_font_face_get_type
 pango_font_family_get_type
 pango_font_get_coverage
 pango_font_get_glyph_extents
 pango_font_get_metrics
 pango_font_get_type
 pango_font_map_changed
 pango_font_map_create_context
 pango_font_map_get_type
 pango_font_map_load_fontset
 pango_font_metrics_new
 pango_font_metrics_ref
 pango_font_metrics_unref
 pango_fontset_foreach
 pango_fontset_get_type
 pango_glyph_string_set_size
 pango_gravity_get_type
 pango_language_from_string
 pango_language_get_sample_string
 pango_layout_get_context
 pango_layout_get_extents
 pango_layout_get_lines_readonly
 pango_layout_get_type
 pango_layout_new
 pango_layout_set_font_description
 pango_layout_set_text
 pango_matrix_get_font_scale_factor
 pango_matrix_get_font_scale_factors
 pango_quantize_line_geometry
 pango_renderer_draw_glyphs
 pango_renderer_draw_layout
 pango_renderer_draw_layout_line
 pango_renderer_get_type
 pango_renderer_set_matrix
 pango_version
 pthread_mutex_destroy@@LIBC
 pthread_mutex_init@@LIBC
 pthread_mutex_lock@@LIBC
 pthread_mutex_unlock@@LIBC
 qsort@@LIBC
 r arabic_fallback_features
 r arabic_features
 r arabic_state_table
 r bracket_pairs
 r canon_map
 r comp_data
 r comp_index0
 r comp_index1
 r compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)::sDageshForms
 r $d.0
 r $d.1
 r $d.120
 r $d.14
 r $d.143
 r $d.161
 r $d.164
 r $d.165
 r $d.170
 r $d.18
 r $d.191
 r $d.198
 r $d.2
 r $d.207
 r $d.22
 r $d.225
 r $d.232
 r $d.233
 r $d.3
 r $d.32
 r $d.36
 r $d.37
 r $d.4
 r $d.42
 r $d.6
 r $d.60
 r $d.65
 r $d.77
 r $d.9
 r decomp_data
 r decomp_index0
 r decomp_index1
 r decomp_index2
 r direction_strings
 realloc@@LIBC
 r get_context_matrix.identity
 r hb_map_t::prime_for(unsigned int)::prime_mod
 r _hb_modified_combining_class
 r _hb_Null_OT_Index
 r _hb_Null_OT_LangSys
 r _hb_Null_OT_RangeRecord
 r _hb_NullPool
 r _hb_ot_complex_shaper_default
 r _hb_ot_complex_shaper_myanmar_old
 r index0
 r index1
 r index2
 r indic_configs
 r indic_features
 r _indic_syllable_machine_eof_trans
 r _indic_syllable_machine_index_offsets
 r _indic_syllable_machine_indicies
 r _indic_syllable_machine_key_spans
 r _indic_syllable_machine_trans_actions
 r _indic_syllable_machine_trans_keys
 r _indic_syllable_machine_trans_targs
 r indic_table
 r joining_table
 r khmer_features
 r _khmer_syllable_machine_eof_trans
 r _khmer_syllable_machine_index_offsets
 r _khmer_syllable_machine_indicies
 r _khmer_syllable_machine_key_spans
 r _khmer_syllable_machine_trans_actions
 r _khmer_syllable_machine_trans_keys
 r _khmer_syllable_machine_trans_targs
 r ligature_table
 r mirror_pairs
 r _myanmar_syllable_machine_eof_trans
 r _myanmar_syllable_machine_index_offsets
 r _myanmar_syllable_machine_indicies
 r _myanmar_syllable_machine_key_spans
 r _myanmar_syllable_machine_trans_actions
 r _myanmar_syllable_machine_trans_keys
 r _myanmar_syllable_machine_trans_targs
 r nfc_first
 r nfc_last
 r ot_languages
 r ot_languages_zh
 r shaping_table
 r table_tags
 r thai_above_start_state
 r thai_above_state_machine
 r thai_below_start_state
 r thai_below_state_machine
 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::RD_mappings
 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SDL_mappings
 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SD_mappings
 r thai_pua_shape(unsigned int, thai_action_t, hb_font_t*)::SL_mappings
 r ucdn_script_translate
 r ucd_records
 r _use_syllable_machine_eof_trans
 r _use_syllable_machine_index_offsets
 r _use_syllable_machine_indicies
 r _use_syllable_machine_key_spans
 r _use_syllable_machine_trans_actions
 r _use_syllable_machine_trans_keys
 r _use_syllable_machine_trans_targs
 r use_table
 setlocale@@LIBC
 snprintf@@LIBC
 strchr@@LIBC
 strcmp@@LIBC
 strerror@@LIBC
 strlen@@LIBC
 strncmp@@LIBC
 strncpy@@LIBC
 strstr@@LIBC
 strtod@@LIBC
 strtol@@LIBC
 strtoul@@LIBC
 sysconf@@LIBC
 t apply_forward(OT::hb_ot_apply_context_t*, hb_ot_layout_lookup_accelerator_t const&, hb_auto_t<hb_vector_t<hb_get_subtables_context_t::hb_applicable_t, 8u> > const&)
 t arabic_fallback_shape(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t atexit
 t __atexit_handler_wrapper
 t bool hb_get_subtables_context_t::apply_to<OT::AlternateSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::ChainContextFormat1>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::ChainContextFormat2>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::ChainContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::ContextFormat1>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::ContextFormat2>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::ContextFormat3>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::CursivePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::LigatureSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::MarkBasePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::MarkLigPosFormat1>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::MarkMarkPosFormat1>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::MultipleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::PairPosFormat1>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::PairPosFormat2>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::ReverseChainSingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::SinglePosFormat1>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::SinglePosFormat2>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::SingleSubstFormat1>(void const*, OT::hb_ot_apply_context_t*)
 t bool hb_get_subtables_context_t::apply_to<OT::SingleSubstFormat2>(void const*, OT::hb_ot_apply_context_t*)
 t bool OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<unsigned short, 2u> >, OT::IntType<unsigned short, 2u> >::sanitize<unsigned int>(hb_sanitize_context_t*, void const*, unsigned int) const
 t bool OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<unsigned short, 2u> >, OT::IntType<unsigned short, 2u> >::sanitize<OT::PairSet::sanitize_closure_t*>(hb_sanitize_context_t*, void const*, OT::PairSet::sanitize_closure_t*) const
 t bool OT::ClassDef::add_class<hb_set_t>(hb_set_t*, unsigned int) const
 t bool OT::Coverage::add_coverage<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0u>, hb_set_digest_lowest_bits_t<unsigned long, 9u> > > >(hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0u>, hb_set_digest_lowest_bits_t<unsigned long, 9u> > >*) const
 t bool OT::Coverage::add_coverage<hb_set_t>(hb_set_t*) const
 t bool OT::OffsetTo<OT::FeatureParams, OT::IntType<unsigned short, 2u> >::sanitize<unsigned int>(hb_sanitize_context_t*, void const*, unsigned int) const
 t bool OT::OffsetTo<OT::LangSys, OT::IntType<unsigned short, 2u> >::sanitize<OT::Record<OT::LangSys>::sanitize_closure_t const*>(hb_sanitize_context_t*, void const*, OT::Record<OT::LangSys>::sanitize_closure_t const*) const
 t clear_substitution_flags(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t clear_syllables(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t collect_features_arabic(hb_ot_shape_planner_t*)
 t collect_features_hangul(hb_ot_shape_planner_t*)
 t collect_features_indic(hb_ot_shape_planner_t*)
 t collect_features_khmer(hb_ot_shape_planner_t*)
 t collect_features_myanmar(hb_ot_shape_planner_t*)
 t collect_features_tibetan(hb_ot_shape_planner_t*)
 t collect_features_use(hb_ot_shape_planner_t*)
 t compare_bp
 t compare_combining_class(hb_glyph_info_t const*, hb_glyph_info_t const*)
 t compare_ints
 t compare_mp
 t compare_myanmar_order(hb_glyph_info_t const*, hb_glyph_info_t const*)
 t compare_reindex
 t compose_hebrew(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
 t compose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
 t compose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
 t compose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
 t compose_use(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int, unsigned int*)
 t $d
 t $d.2
 t $d.3
 t $d.39
 t $d.4
 t data_create_arabic(hb_ot_shape_plan_t const*)
 t data_create_hangul(hb_ot_shape_plan_t const*)
 t data_create_indic(hb_ot_shape_plan_t const*)
 t data_create_khmer(hb_ot_shape_plan_t const*)
 t data_create_use(hb_ot_shape_plan_t const*)
 t data_destroy_arabic(void*)
 t data_destroy_hangul(void*)
 t data_destroy_indic(void*)
 t data_destroy_khmer(void*)
 t data_destroy_use(void*)
 t decompose_current_character(hb_ot_shape_normalize_context_t const*, bool)
 t decompose(hb_ot_shape_normalize_context_t const*, bool, unsigned int)
 t decompose_indic(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
 t decompose_khmer(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
 t decompose_unicode(hb_ot_shape_normalize_context_t const*, unsigned int, unsigned int*, unsigned int*)
 t disable_otl_hebrew(hb_ot_shape_plan_t const*)
 t final_reordering(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t free_langs()
 t free_metrics_info
 t free_static_ft_funcs()
 t free_static_ft_library()
 t free_static_glib_funcs()
 t free_static_shaper_list()
 t free_static_shapers()
 t free_static_ucdn_funcs()
 t get_first_font
 t get_joining_type(unsigned int, hb_unicode_general_category_t)
 t _GLOBAL__sub_I_hb_ot_shape_complex_arabic.cc
 t _GLOBAL__sub_I_hb_ot_shape_complex_hangul.cc
 t _GLOBAL__sub_I_hb_ot_shape_complex_indic.cc
 t _GLOBAL__sub_I_hb_ot_shape_complex_khmer.cc
 t _GLOBAL__sub_I_hb_ot_shape_complex_tibetan.cc
 t _GLOBAL__sub_I_hb_ot_shape_complex_use.cc
 t GPOSProxy::GPOSProxy(hb_face_t*)
 t GSUBProxy::GSUBProxy(hb_face_t*)
 t hb_blob_copy_writable_or_fail
 t hb_blob_create
 t hb_blob_create_from_file
 t hb_blob_create_sub_blob
 t hb_blob_destroy
 t _hb_blob_destroy(void*)
 t hb_blob_get_data
 t hb_blob_get_data_writable
 t hb_blob_get_empty
 t hb_blob_get_length
 t hb_blob_get_user_data
 t hb_blob_is_immutable
 t hb_blob_make_immutable
 t hb_blob_reference
 t hb_blob_set_user_data
 t hb_blob_t* hb_sanitize_context_t::sanitize_blob<OT::avar>(hb_blob_t*)
 t hb_blob_t* hb_sanitize_context_t::sanitize_blob<OT::fvar>(hb_blob_t*)
 t hb_blob_t* hb_sanitize_context_t::sanitize_blob<OT::GDEF>(hb_blob_t*)
 t hb_blob_t* hb_sanitize_context_t::sanitize_blob<OT::GPOS>(hb_blob_t*)
 t hb_blob_t* hb_sanitize_context_t::sanitize_blob<OT::GSUB>(hb_blob_t*)
 t hb_blob_t* hb_sanitize_context_t::sanitize_blob<OT::head>(hb_blob_t*)
 t hb_blob_t* hb_sanitize_context_t::sanitize_blob<OT::maxp>(hb_blob_t*)
 t hb_blob_t* hb_sanitize_context_t::sanitize_blob<OT::OpenTypeFontFile>(hb_blob_t*)
 t hb_blob_t::try_make_writable()
 t hb_blob_t::try_make_writable_inplace()
 t hb_blob_t::try_make_writable_inplace_unix()
 t hb_buffer_add
 t hb_buffer_add_codepoints
 t hb_buffer_add_latin1
 t hb_buffer_add_utf16
 t hb_buffer_add_utf32
 t hb_buffer_add_utf8
 t hb_buffer_allocation_successful
 t hb_buffer_append
 t hb_buffer_clear_contents
 t hb_buffer_create
 t hb_buffer_destroy
 t hb_buffer_diff
 t hb_buffer_get_cluster_level
 t hb_buffer_get_content_type
 t hb_buffer_get_direction
 t hb_buffer_get_empty
 t hb_buffer_get_flags
 t hb_buffer_get_glyph_infos
 t hb_buffer_get_glyph_positions
 t hb_buffer_get_language
 t hb_buffer_get_length
 t hb_buffer_get_replacement_codepoint
 t hb_buffer_get_script
 t hb_buffer_get_segment_properties
 t hb_buffer_get_unicode_funcs
 t hb_buffer_get_user_data
 t hb_buffer_guess_segment_properties
 t hb_buffer_normalize_glyphs
 t hb_buffer_pre_allocate
 t hb_buffer_reference
 t hb_buffer_reset
 t hb_buffer_reverse
 t hb_buffer_reverse_clusters
 t hb_buffer_reverse_range
 t hb_buffer_set_cluster_level
 t hb_buffer_set_content_type
 t hb_buffer_set_direction
 t hb_buffer_set_flags
 t hb_buffer_set_language
 t hb_buffer_set_length
 t hb_buffer_set_message_func
 t hb_buffer_set_replacement_codepoint
 t hb_buffer_set_script
 t hb_buffer_set_segment_properties
 t hb_buffer_set_unicode_funcs
 t hb_buffer_set_user_data
 t hb_buffer_t::add_info(hb_glyph_info_t const&)
 t hb_buffer_t::add(unsigned int, unsigned int)
 t hb_buffer_t::clear()
 t hb_buffer_t::clear_output()
 t hb_buffer_t::clear_positions()
 t hb_buffer_t::copy_glyph()
 t hb_buffer_t::delete_glyph()
 t hb_buffer_t::enlarge(unsigned int)
 t hb_buffer_t::get_scratch_buffer(unsigned int*)
 t hb_buffer_t::guess_segment_properties()
 t hb_buffer_t::make_room_for(unsigned int, unsigned int)
 t hb_buffer_t::merge_clusters_impl(unsigned int, unsigned int)
 t hb_buffer_t::merge_out_clusters(unsigned int, unsigned int)
 t hb_buffer_t::message(hb_font_t*, char const*, ...)
 t hb_buffer_t::message_impl(hb_font_t*, char const*, std::__va_list)
 t hb_buffer_t::move_to(unsigned int)
 t hb_buffer_t::output_glyph(unsigned int)
 t hb_buffer_t::output_info(hb_glyph_info_t const&)
 t hb_buffer_t::remove_output()
 t hb_buffer_t::replace_glyphs(unsigned int, unsigned int, unsigned int const*)
 t hb_buffer_t::replace_glyph(unsigned int)
 t hb_buffer_t::reset()
 t hb_buffer_t::reverse()
 t hb_buffer_t::reverse_clusters()
 t hb_buffer_t::reverse_range(unsigned int, unsigned int)
 t hb_buffer_t::set_masks(unsigned int, unsigned int, unsigned int, unsigned int)
 t hb_buffer_t::shift_forward(unsigned int)
 t hb_buffer_t::sort(unsigned int, unsigned int, int (*)(hb_glyph_info_t const*, hb_glyph_info_t const*))
 t hb_buffer_t::swap_buffers()
 t hb_buffer_t::unsafe_to_break_from_outbuffer(unsigned int, unsigned int)
 t hb_buffer_t::unsafe_to_break_impl(unsigned int, unsigned int)
 t hb_direction_from_string
 t hb_direction_to_string
 t hb_face_count
 t hb_face_create
 t hb_face_create_for_tables
 t hb_face_destroy
 t _hb_face_for_data_closure_destroy(void*)
 t _hb_face_for_data_reference_table(hb_face_t*, unsigned int, void*)
 t hb_face_get_empty
 t hb_face_get_glyph_count
 t hb_face_get_index
 t hb_face_get_table_tags
 t hb_face_get_upem
 t hb_face_get_user_data
 t hb_face_is_immutable
 t hb_face_make_immutable
 t hb_face_reference
 t hb_face_reference_blob
 t hb_face_reference_table
 t hb_face_set_glyph_count
 t hb_face_set_index
 t hb_face_set_upem
 t hb_face_set_user_data
 t hb_face_t::load_num_glyphs() const
 t hb_face_t::load_upem() const
 t _hb_fallback_shape
 t _hb_fallback_shaper_face_data_create
 t _hb_fallback_shaper_face_data_destroy
 t hb_fallback_shaper_face_data_ensure
 t _hb_fallback_shaper_font_data_create
 t _hb_fallback_shaper_font_data_destroy
 t hb_fallback_shaper_font_data_ensure
 t _hb_fallback_shaper_shape_plan_data_create
 t _hb_fallback_shaper_shape_plan_data_destroy
 t hb_feature_from_string
 t hb_feature_to_string
 t hb_font_add_glyph_origin_for_direction
 t hb_font_create
 t hb_font_create_sub_font
 t hb_font_destroy
 t hb_font_funcs_create
 t hb_font_funcs_destroy
 t hb_font_funcs_get_empty
 t hb_font_funcs_get_user_data
 t hb_font_funcs_is_immutable
 t hb_font_funcs_make_immutable
 t hb_font_funcs_reference
 t hb_font_funcs_set_font_h_extents_func
 t hb_font_funcs_set_font_v_extents_func
 t hb_font_funcs_set_glyph_contour_point_func
 t hb_font_funcs_set_glyph_extents_func
 t hb_font_funcs_set_glyph_from_name_func
 t hb_font_funcs_set_glyph_func
 t hb_font_funcs_set_glyph_h_advance_func
 t hb_font_funcs_set_glyph_h_advances_func
 t hb_font_funcs_set_glyph_h_kerning_func
 t hb_font_funcs_set_glyph_h_origin_func
 t hb_font_funcs_set_glyph_name_func
 t hb_font_funcs_set_glyph_v_advance_func
 t hb_font_funcs_set_glyph_v_advances_func
 t hb_font_funcs_set_glyph_v_kerning_func
 t hb_font_funcs_set_glyph_v_origin_func
 t hb_font_funcs_set_nominal_glyph_func
 t hb_font_funcs_set_user_data
 t hb_font_funcs_set_variation_glyph_func
 t hb_font_get_empty
 t hb_font_get_extents_for_direction
 t hb_font_get_face
 t hb_font_get_font_h_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
 t hb_font_get_font_h_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
 t hb_font_get_font_v_extents_default(hb_font_t*, void*, hb_font_extents_t*, void*)
 t hb_font_get_font_v_extents_nil(hb_font_t*, void*, hb_font_extents_t*, void*)
 t hb_font_get_glyph
 t hb_font_get_glyph_advance_for_direction
 t hb_font_get_glyph_advances_for_direction
 t hb_font_get_glyph_contour_point
 t hb_font_get_glyph_contour_point_default(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
 t hb_font_get_glyph_contour_point_for_origin
 t hb_font_get_glyph_contour_point_nil(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
 t hb_font_get_glyph_extents
 t hb_font_get_glyph_extents_default(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
 t hb_font_get_glyph_extents_for_origin
 t hb_font_get_glyph_extents_nil(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
 t hb_font_get_glyph_from_name
 t hb_font_get_glyph_from_name_default(hb_font_t*, void*, char const*, int, unsigned int*, void*)
 t hb_font_get_glyph_from_name_nil(hb_font_t*, void*, char const*, int, unsigned int*, void*)
 t hb_font_get_glyph_h_advance
 t hb_font_get_glyph_h_advance_default(hb_font_t*, void*, unsigned int, void*)
 t hb_font_get_glyph_h_advance_nil(hb_font_t*, void*, unsigned int, void*)
 t hb_font_get_glyph_h_advances
 t hb_font_get_glyph_h_advances_default(hb_font_t*, void*, unsigned int, unsigned int*, unsigned int, int*, unsigned int, void*)
 t hb_font_get_glyph_h_kerning
 t hb_font_get_glyph_h_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
 t hb_font_get_glyph_h_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
 t hb_font_get_glyph_h_origin
 t hb_font_get_glyph_h_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
 t hb_font_get_glyph_h_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
 t hb_font_get_glyph_kerning_for_direction
 t hb_font_get_glyph_name
 t hb_font_get_glyph_name_default(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
 t hb_font_get_glyph_name_nil(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
 t hb_font_get_glyph_origin_for_direction
 t hb_font_get_glyph_v_advance
 t hb_font_get_glyph_v_advance_default(hb_font_t*, void*, unsigned int, void*)
 t hb_font_get_glyph_v_advance_nil(hb_font_t*, void*, unsigned int, void*)
 t hb_font_get_glyph_v_advances
 t hb_font_get_glyph_v_advances_default(hb_font_t*, void*, unsigned int, unsigned int*, unsigned int, int*, unsigned int, void*)
 t hb_font_get_glyph_v_kerning
 t hb_font_get_glyph_v_kerning_default(hb_font_t*, void*, unsigned int, unsigned int, void*)
 t hb_font_get_glyph_v_kerning_nil(hb_font_t*, void*, unsigned int, unsigned int, void*)
 t hb_font_get_glyph_v_origin
 t hb_font_get_glyph_v_origin_default(hb_font_t*, void*, unsigned int, int*, int*, void*)
 t hb_font_get_glyph_v_origin_nil(hb_font_t*, void*, unsigned int, int*, int*, void*)
 t hb_font_get_h_extents
 t hb_font_get_nominal_glyph
 t hb_font_get_nominal_glyph_default(hb_font_t*, void*, unsigned int, unsigned int*, void*)
 t hb_font_get_nominal_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int*, void*)
 t hb_font_get_nominal_glyph_trampoline(hb_font_t*, void*, unsigned int, unsigned int*, void*)
 t hb_font_get_parent
 t hb_font_get_ppem
 t hb_font_get_ptem
 t hb_font_get_scale
 t hb_font_get_user_data
 t hb_font_get_var_coords_normalized
 t hb_font_get_variation_glyph
 t hb_font_get_variation_glyph_default(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
 t hb_font_get_variation_glyph_nil(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
 t hb_font_get_variation_glyph_trampoline(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
 t hb_font_get_v_extents
 t hb_font_glyph_from_string
 t hb_font_glyph_to_string
 t hb_font_is_immutable
 t hb_font_make_immutable
 t hb_font_reference
 t hb_font_set_face
 t hb_font_set_funcs
 t hb_font_set_funcs_data
 t hb_font_set_parent
 t hb_font_set_ppem
 t hb_font_set_ptem
 t hb_font_set_scale
 t hb_font_set_user_data
 t hb_font_set_var_coords_design
 t hb_font_set_var_coords_normalized
 t hb_font_set_variations
 t hb_font_subtract_glyph_origin_for_direction
 t hb_font_t::add_glyph_h_origin(unsigned int, int*, int*)
 t hb_font_t::get_glyph_contour_point_for_origin(unsigned int, unsigned int, hb_direction_t, int*, int*)
 t hb_font_t::glyph_from_string(char const*, int, unsigned int*)
 t hb_font_t::has_func(unsigned int)
 t hb_font_t::subtract_glyph_h_origin(unsigned int, int*, int*)
 t hb_font_t::subtract_glyph_origin_for_direction(unsigned int, hb_direction_t, int*, int*)
 t hb_font_t::subtract_glyph_v_origin(unsigned int, int*, int*)
 t hb_ft_face_create
 t hb_ft_face_create_cached
 t hb_ft_face_create_referenced
 t _hb_ft_face_destroy(void*)
 t hb_ft_face_finalize(FT_FaceRec_*)
 t hb_ft_font_changed
 t hb_ft_font_create
 t hb_ft_font_create_referenced
 t _hb_ft_font_destroy(void*)
 t hb_ft_font_funcs_lazy_loader_t::create()
 t hb_ft_font_get_face
 t hb_ft_font_get_load_flags
 t hb_ft_font_set_funcs
 t _hb_ft_font_set_funcs(hb_font_t*, FT_FaceRec_*, bool)
 t hb_ft_font_set_load_flags
 t hb_ft_get_font_h_extents(hb_font_t*, void*, hb_font_extents_t*, void*)
 t hb_ft_get_glyph_contour_point(hb_font_t*, void*, unsigned int, unsigned int, int*, int*, void*)
 t hb_ft_get_glyph_extents(hb_font_t*, void*, unsigned int, hb_glyph_extents_t*, void*)
 t hb_ft_get_glyph_from_name(hb_font_t*, void*, char const*, int, unsigned int*, void*)
 t hb_ft_get_glyph_h_advance(hb_font_t*, void*, unsigned int, void*)
 t hb_ft_get_glyph_h_kerning(hb_font_t*, void*, unsigned int, unsigned int, void*)
 t hb_ft_get_glyph_name(hb_font_t*, void*, unsigned int, char*, unsigned int, void*)
 t hb_ft_get_glyph_v_advance(hb_font_t*, void*, unsigned int, void*)
 t hb_ft_get_glyph_v_origin(hb_font_t*, void*, unsigned int, int*, int*, void*)
 t hb_ft_get_nominal_glyph(hb_font_t*, void*, unsigned int, unsigned int*, void*)
 t hb_ft_get_variation_glyph(hb_font_t*, void*, unsigned int, unsigned int, unsigned int*, void*)
 t _hb_g_bytes_unref(void*)
 t hb_get_subtables_context_t::return_t OT::ChainContext::dispatch<hb_get_subtables_context_t>(hb_get_subtables_context_t*) const
 t hb_get_subtables_context_t::return_t OT::Context::dispatch<hb_get_subtables_context_t>(hb_get_subtables_context_t*) const
 t hb_get_subtables_context_t::return_t OT::PosLookupSubTable::dispatch<hb_get_subtables_context_t>(hb_get_subtables_context_t*, unsigned int) const
 t hb_get_subtables_context_t::return_t OT::SubstLookupSubTable::dispatch<hb_get_subtables_context_t>(hb_get_subtables_context_t*, unsigned int) const
 t hb_glib_blob_create
 t hb_glib_get_unicode_funcs
 t hb_glib_script_from_script
 t hb_glib_script_to_script
 t hb_glib_unicode_combining_class(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_glib_unicode_compose(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
 t hb_glib_unicode_decompose_compatibility(hb_unicode_funcs_t*, unsigned int, unsigned int*, void*)
 t hb_glib_unicode_decompose(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
 t hb_glib_unicode_eastasian_width(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_glib_unicode_general_category(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_glib_unicode_mirroring(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_glib_unicode_script(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_glyph_info_get_glyph_flags
 t _hb_glyph_info_set_unicode_props(hb_glyph_info_t*, hb_buffer_t*)
 t hb_indic_get_categories(unsigned int)
 t hb_language_from_string
 t hb_language_get_default
 t hb_language_to_string
 t _hb_mapped_file_destroy(hb_mapped_file_t*)
 t hb_map_t::set(unsigned int, unsigned int)
 t _hb_options_init()
 t hb_ot_layout_collect_features
 t _hb_ot_layout_collect_features_features(hb_face_t*, unsigned int, unsigned int, unsigned int, unsigned int const*, hb_set_t*)
 t _hb_ot_layout_collect_features_languages(hb_face_t*, unsigned int, unsigned int, unsigned int const*, unsigned int const*, hb_set_t*)
 t hb_ot_layout_collect_lookups
 t _hb_ot_layout_create(hb_face_t*)
 t _hb_ot_layout_destroy(hb_ot_layout_t*)
 t hb_ot_layout_feature_get_lookups
 t hb_ot_layout_feature_with_variations_get_lookups
 t hb_ot_layout_get_attach_points
 t hb_ot_layout_get_glyph_class
 t hb_ot_layout_get_glyphs_in_class
 t hb_ot_layout_get_ligature_carets
 t hb_ot_layout_get_size_params
 t hb_ot_layout_has_glyph_classes
 t hb_ot_layout_has_positioning
 t hb_ot_layout_has_substitution
 t hb_ot_layout_language_find_feature
 t hb_ot_layout_language_get_feature_indexes
 t hb_ot_layout_language_get_feature_tags
 t hb_ot_layout_language_get_required_feature
 t hb_ot_layout_language_get_required_feature_index
 t hb_ot_layout_lookup_collect_glyphs
 t hb_ot_layout_lookups_substitute_closure
 t hb_ot_layout_lookup_substitute_closure
 t hb_ot_layout_lookup_would_substitute
 t hb_ot_layout_lookup_would_substitute_fast(hb_face_t*, unsigned int, unsigned int const*, unsigned int, int)
 t hb_ot_layout_position_finish_advances(hb_font_t*, hb_buffer_t*)
 t hb_ot_layout_position_finish_offsets(hb_font_t*, hb_buffer_t*)
 t hb_ot_layout_position_start(hb_font_t*, hb_buffer_t*)
 t hb_ot_layout_script_find_language
 t hb_ot_layout_script_get_language_tags
 t hb_ot_layout_substitute_lookup(OT::hb_ot_apply_context_t*, OT::SubstLookup const&, hb_ot_layout_lookup_accelerator_t const&)
 t hb_ot_layout_substitute_start(hb_font_t*, hb_buffer_t*)
 t hb_ot_layout_table_choose_script
 t hb_ot_layout_table_find_feature(hb_face_t*, unsigned int, unsigned int, unsigned int*)
 t hb_ot_layout_table_find_feature_variations
 t hb_ot_layout_table_find_script
 t hb_ot_layout_table_get_feature_tags
 t hb_ot_layout_table_get_lookup_count
 t hb_ot_layout_table_get_script_tags
 t hb_ot_layout_t::tables_t::fini()
 t hb_ot_layout_t::tables_t::init0(hb_face_t*)
 t hb_ot_map_builder_t::add_feature(unsigned int, unsigned int, hb_ot_map_feature_flags_t)
 t hb_ot_map_builder_t::add_lookups(hb_ot_map_t&, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool)
 t hb_ot_map_builder_t::add_pause(unsigned int, void (*)(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*))
 t hb_ot_map_builder_t::compile(hb_ot_map_t&, int const*, unsigned int)
 t hb_ot_map_builder_t::feature_info_t::cmp(void const*, void const*)
 t hb_ot_map_builder_t::~hb_ot_map_builder_t()
 t hb_ot_map_builder_t::hb_ot_map_builder_t(hb_face_t*, hb_segment_properties_t const*)
 t hb_ot_map_t::collect_lookups(unsigned int, hb_set_t*) const
 t hb_ot_map_t::lookup_map_t::cmp(void const*, void const*)
 t hb_ot_map_t::position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
 t hb_ot_map_t::substitute(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
 t _hb_ot_shape
 t _hb_ot_shape_fallback_kern(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t _hb_ot_shape_fallback_position(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t _hb_ot_shape_fallback_position_recategorize_marks(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t _hb_ot_shape_fallback_spaces(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t hb_ot_shape_glyphs_closure
 t _hb_ot_shape_normalize(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
 t hb_ot_shape_plan_collect_lookups
 t hb_ot_shape_planner_t::compile(hb_ot_shape_plan_t&, int const*, unsigned int)
 t hb_ot_shape_plan_t::fini()
 t _hb_ot_shaper_face_data_create
 t _hb_ot_shaper_face_data_destroy
 t hb_ot_shaper_face_data_ensure
 t _hb_ot_shaper_font_data_create
 t _hb_ot_shaper_font_data_destroy
 t hb_ot_shaper_font_data_ensure
 t _hb_ot_shaper_shape_plan_data_create
 t _hb_ot_shaper_shape_plan_data_destroy
 t hb_ot_tag_from_language
 t hb_ot_tags_from_script
 t hb_ot_tag_to_language
 t hb_ot_tag_to_script
 t hb_ot_var_find_axis
 t hb_ot_var_get_axes
 t hb_ot_var_get_axis_count
 t hb_ot_var_has_data
 t hb_ot_var_normalize_coords
 t hb_ot_var_normalize_variations
 t hb_sanitize_context_t::return_t OT::ChainContext::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const
 t hb_sanitize_context_t::return_t OT::PosLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
 t hb_sanitize_context_t::return_t OT::SubstLookupSubTable::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*, unsigned int) const
 t hb_script_from_iso15924_tag
 t hb_script_from_string
 t hb_script_get_horizontal_direction
 t hb_script_to_iso15924_tag
 t hb_segment_properties_equal
 t hb_segment_properties_hash
 t hb_set_add
 t hb_set_add_range
 t hb_set_allocation_successful
 t hb_set_clear
 t hb_set_create
 t hb_set_del
 t hb_set_del_range
 t hb_set_destroy
 t hb_set_get_empty
 t hb_set_get_max
 t hb_set_get_min
 t hb_set_get_population
 t hb_set_get_user_data
 t hb_set_has
 t hb_set_intersect
 t hb_set_invert
 t hb_set_is_empty
 t hb_set_is_equal
 t hb_set_is_subset
 t hb_set_next
 t hb_set_next_range
 t hb_set_previous
 t hb_set_previous_range
 t hb_set_reference
 t hb_set_set
 t hb_set_set_user_data
 t hb_set_subtract
 t hb_set_symmetric_difference
 t hb_set_t::add_range(unsigned int, unsigned int)
 t hb_set_t::get_min() const
 t hb_set_t::is_equal(hb_set_t const*) const
 t hb_set_t::is_subset(hb_set_t const*) const
 t hb_set_t::next(unsigned int*) const
 t hb_set_t::page_for_insert(unsigned int)
 t hb_set_t::previous(unsigned int*) const
 t hb_set_t::resize(unsigned int)
 t hb_set_union
 t hb_shape
 t hb_shape_full
 t hb_shape_list_shapers
 t hb_shape_plan_create
 t hb_shape_plan_create2
 t hb_shape_plan_create_cached
 t hb_shape_plan_create_cached2
 t hb_shape_plan_destroy
 t hb_shape_plan_execute
 t hb_shape_plan_get_empty
 t hb_shape_plan_get_shaper
 t hb_shape_plan_get_user_data
 t hb_shape_plan_reference
 t hb_shape_plan_set_user_data
 t _hb_shapers_get()
 t hb_shapers_lazy_loader_t::create()
 t hb_tag_from_string
 t hb_tag_to_string
 t hb_ucdn_combining_class(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_ucdn_compose(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
 t hb_ucdn_decompose_compatibility(hb_unicode_funcs_t*, unsigned int, unsigned int*, void*)
 t hb_ucdn_decompose(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
 t hb_ucdn_eastasian_width(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_ucdn_general_category(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_ucdn_get_unicode_funcs
 t hb_ucdn_mirroring(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_ucdn_script(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_unicode_combining_class
 t hb_unicode_combining_class_nil(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_unicode_compose
 t hb_unicode_compose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int, unsigned int*, void*)
 t hb_unicode_decompose
 t hb_unicode_decompose_compatibility
 t hb_unicode_decompose_compatibility_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, void*)
 t hb_unicode_decompose_nil(hb_unicode_funcs_t*, unsigned int, unsigned int*, unsigned int*, void*)
 t hb_unicode_eastasian_width
 t hb_unicode_eastasian_width_nil(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_unicode_funcs_create
 t hb_unicode_funcs_destroy
 t hb_unicode_funcs_get_default
 t hb_unicode_funcs_get_empty
 t hb_unicode_funcs_get_parent
 t hb_unicode_funcs_get_user_data
 t hb_unicode_funcs_is_immutable
 t hb_unicode_funcs_make_immutable
 t hb_unicode_funcs_reference
 t hb_unicode_funcs_set_combining_class_func
 t hb_unicode_funcs_set_compose_func
 t hb_unicode_funcs_set_decompose_compatibility_func
 t hb_unicode_funcs_set_decompose_func
 t hb_unicode_funcs_set_eastasian_width_func
 t hb_unicode_funcs_set_general_category_func
 t hb_unicode_funcs_set_mirroring_func
 t hb_unicode_funcs_set_script_func
 t hb_unicode_funcs_set_user_data
 t hb_unicode_general_category
 t hb_unicode_general_category_nil(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_unicode_mirroring
 t hb_unicode_mirroring_nil(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_unicode_script
 t hb_unicode_script_nil(hb_unicode_funcs_t*, unsigned int, void*)
 t hb_use_get_category(unsigned int)
 t hb_user_data_array_t::fini()
 t hb_user_data_array_t::get(hb_user_data_key_t*)
 t hb_user_data_array_t::hb_user_data_item_t* hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>::replace_or_insert<hb_user_data_array_t::hb_user_data_item_t>(hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t&, bool)
 t hb_user_data_array_t::set(hb_user_data_key_t*, void*, void (*)(void*), int)
 t hb_variation_from_string
 t hb_variation_to_string
 t hb_version
 t hb_version_atleast
 t hb_version_string
 t _hb_void_t const* OT::hb_collect_glyphs_context_t::dispatch<OT::MultipleSubstFormat1>(OT::MultipleSubstFormat1 const&)
 t initial_reordering_consonant_syllable(hb_ot_shape_plan_t const*, hb_face_t*, hb_buffer_t*, unsigned int, unsigned int)
 t initial_reordering(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t lang_compare_first_component(void const*, void const*)
 t lang_find_or_insert(char const*)
 t normalize_glyphs_cluster(hb_buffer_t*, unsigned int, unsigned int, bool)
 t nuke_joiners(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t __on_dlclose
 t OT::AlternateSubstFormat1::apply(OT::hb_ot_apply_context_t*) const
 t OT::AlternateSubstFormat1::closure(OT::hb_closure_context_t*) const
 t OT::AlternateSubstFormat1::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
 t OT::AnchorFormat2::get_anchor(OT::hb_ot_apply_context_t*, unsigned int, float*, float*) const
 t OT::AnchorFormat3::get_anchor(OT::hb_ot_apply_context_t*, unsigned int, float*, float*) const
 t OT::Anchor::get_anchor(OT::hb_ot_apply_context_t*, unsigned int, float*, float*) const
 t OT::AnchorMatrix::sanitize(hb_sanitize_context_t*, unsigned int) const
 t OT::Anchor::sanitize(hb_sanitize_context_t*) const
 t OT::apply_lookup(OT::hb_ot_apply_context_t*, unsigned int, unsigned int*, unsigned int, OT::LookupRecord const*, unsigned int)
 t OT::ArrayOf<OT::FeatureTableSubstitutionRecord, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::FeatureVariationRecord, OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::IntType<unsigned short, 2u>, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int)
 t OT::ArrayOf<OT::LOffsetTo<OT::Coverage>, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::MarkRecord, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2u> >, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int)
 t OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<unsigned short, 2u>, OT::IntType<unsigned short, 2u> >, OT::IntType<unsigned short, 2u> >, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2u> >, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<unsigned short, 2u> >, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<unsigned short, 2u> >, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2u> >, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2u> >, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int)
 t OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2u> >, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, unsigned int)
 t OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<unsigned short, 2u> >, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<unsigned short, 2u> >, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4u> >, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::AttachList::sanitize(hb_sanitize_context_t*) const
 t OT::avar::sanitize(hb_sanitize_context_t*) const
 t OT::CaretValueFormat3::get_caret_value(hb_font_t*, hb_direction_t, OT::VariationStore const&) const
 t OT::CaretValue::get_caret_value(hb_font_t*, hb_direction_t, unsigned int, OT::VariationStore const&) const
 t OT::CaretValue::sanitize(hb_sanitize_context_t*) const
 t OT::chain_context_apply_lookup(OT::hb_ot_apply_context_t*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::IntType<unsigned short, 2u> const*, unsigned int, OT::LookupRecord const*, OT::ChainContextApplyLookupContext&)
 t OT::ChainContextFormat1::closure(OT::hb_closure_context_t*) const
 t OT::ChainContextFormat1::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
 t OT::ChainContextFormat2::apply(OT::hb_ot_apply_context_t*) const
 t OT::ChainContextFormat2::closure(OT::hb_closure_context_t*) const
 t OT::ChainContextFormat2::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
 t OT::ChainContextFormat2::sanitize(hb_sanitize_context_t*) const
 t OT::ChainContextFormat3::apply(OT::hb_ot_apply_context_t*) const
 t OT::ChainContextFormat3::closure(OT::hb_closure_context_t*) const
 t OT::ChainContextFormat3::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
 t OT::ChainContextFormat3::sanitize(hb_sanitize_context_t*) const
 t OT::ChainRule::closure(OT::hb_closure_context_t*, OT::ChainContextClosureLookupContext&) const
 t OT::ChainRule::collect_glyphs(OT::hb_collect_glyphs_context_t*, OT::ChainContextCollectGlyphsLookupContext&) const
 t OT::ChainRule::sanitize(hb_sanitize_context_t*) const
 t OT::ChainRuleSet::apply(OT::hb_ot_apply_context_t*, OT::ChainContextApplyLookupContext&) const
 t OT::ChainRuleSet::would_apply(OT::hb_would_apply_context_t*, OT::ChainContextApplyLookupContext&) const
 t OT::ClassDefFormat1::intersects_class(hb_set_t const*, unsigned int) const
 t OT::ClassDefFormat2::intersects_class(hb_set_t const*, unsigned int) const
 t OT::ClassDef::get_class(unsigned int) const
 t OT::ClassDef::sanitize(hb_sanitize_context_t*) const
 t OT::collect_class(hb_set_t*, OT::IntType<unsigned short, 2u> const&, void const*)
 t OT::collect_glyph(hb_set_t*, OT::IntType<unsigned short, 2u> const&, void const*)
 t OT::ContextFormat1::sanitize(hb_sanitize_context_t*) const
 t OT::ContextFormat1::would_apply(OT::hb_would_apply_context_t*) const
 t OT::ContextFormat2::apply(OT::hb_ot_apply_context_t*) const
 t OT::ContextFormat2::closure(OT::hb_closure_context_t*) const
 t OT::ContextFormat2::sanitize(hb_sanitize_context_t*) const
 t OT::ContextFormat2::would_apply(OT::hb_would_apply_context_t*) const
 t OT::ContextFormat3::apply(OT::hb_ot_apply_context_t*) const
 t OT::ContextFormat3::closure(OT::hb_closure_context_t*) const
 t OT::ContextFormat3::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
 t OT::ContextFormat3::sanitize(hb_sanitize_context_t*) const
 t OT::CoverageFormat1::serialize(hb_serialize_context_t*, Supplier<OT::IntType<unsigned short, 2u> >&, unsigned int)
 t OT::CoverageFormat2::serialize(hb_serialize_context_t*, Supplier<OT::IntType<unsigned short, 2u> >&, unsigned int)
 t OT::Coverage::get_coverage(unsigned int) const
 t OT::Coverage::intersects_coverage(hb_set_t const*, unsigned int) const
 t OT::Coverage::intersects(hb_set_t const*) const
 t OT::Coverage::sanitize(hb_sanitize_context_t*) const
 t OT::Coverage::serialize(hb_serialize_context_t*, Supplier<OT::IntType<unsigned short, 2u> >&, unsigned int)
 t OT::CursivePosFormat1::apply(OT::hb_ot_apply_context_t*) const
 t OT::CursivePosFormat1::sanitize(hb_sanitize_context_t*) const
 t OT::Device::get_x_delta(hb_font_t*, OT::VariationStore const&) const
 t OT::Device::get_y_delta(hb_font_t*, OT::VariationStore const&) const
 t OT::Device::sanitize(hb_sanitize_context_t*) const
 t OT::EntryExitRecord::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::FeatureParamsSize::sanitize(hb_sanitize_context_t*) const
 t OT::Feature::sanitize(hb_sanitize_context_t*, OT::Record<OT::Feature>::sanitize_closure_t const*) const
 t OT::FeatureVariations::find_substitute(unsigned int, unsigned int) const
 t OT::fvar::get_axis(unsigned int, hb_ot_var_axis_t*) const
 t OT::fvar::sanitize(hb_sanitize_context_t*) const
 t OT::GDEF::get_attach_points(unsigned int, unsigned int, unsigned int*, unsigned int*) const
 t OT::GDEF::sanitize(hb_sanitize_context_t*) const
 t OT::GSUBGPOS::sanitize(hb_sanitize_context_t*) const
 t OT::GSUB::substitute_start(hb_font_t*, hb_buffer_t*)
 t OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0u>, hb_set_digest_lowest_bits_t<unsigned long, 9u> > > >::return_t OT::PosLookupSubTable::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0u>, hb_set_digest_lowest_bits_t<unsigned long, 9u> > > > >(OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0u>, hb_set_digest_lowest_bits_t<unsigned long, 9u> > > >*, unsigned int) const
 t OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0u>, hb_set_digest_lowest_bits_t<unsigned long, 9u> > > >::return_t OT::SubstLookupSubTable::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0u>, hb_set_digest_lowest_bits_t<unsigned long, 9u> > > > >(OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4u>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0u>, hb_set_digest_lowest_bits_t<unsigned long, 9u> > > >*, unsigned int) const
 t OT::hb_closure_context_t::~hb_closure_context_t()
 t OT::hb_closure_context_t::is_lookup_done(unsigned int)
 t OT::hb_closure_context_t::return_t OT::SubstLookup::dispatch_recurse_func<OT::hb_closure_context_t>(OT::hb_closure_context_t*, unsigned int)
 t OT::hb_closure_context_t::return_t OT::SubstLookupSubTable::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*, unsigned int) const
 t OT::hb_closure_context_t::should_visit_lookup(unsigned int)
 t OT::hb_collect_glyphs_context_t::recurse(unsigned int)
 t OT::hb_collect_glyphs_context_t::return_t OT::Context::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) const
 t OT::hb_collect_glyphs_context_t::return_t OT::PairPos::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*) const
 t OT::hb_collect_glyphs_context_t::return_t OT::PosLookupSubTable::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*, unsigned int) const
 t OT::hb_collect_glyphs_context_t::return_t OT::SubstLookup::dispatch_recurse_func<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*, unsigned int)
 t OT::hb_collect_glyphs_context_t::return_t OT::SubstLookupSubTable::dispatch<OT::hb_collect_glyphs_context_t>(OT::hb_collect_glyphs_context_t*, unsigned int) const
 t OT::hb_ot_apply_context_t::check_glyph_property(hb_glyph_info_t const*, unsigned int) const
 t OT::hb_ot_apply_context_t::hb_ot_apply_context_t(unsigned int, hb_font_t*, hb_buffer_t*)
 t OT::hb_ot_apply_context_t::matcher_t::may_skip(OT::hb_ot_apply_context_t const*, hb_glyph_info_t const&) const
 t OT::hb_ot_apply_context_t::return_t OT::ChainContext::dispatch<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*) const
 t OT::hb_ot_apply_context_t::return_t OT::Context::dispatch<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*) const
 t OT::hb_ot_apply_context_t::return_t OT::PosLookupSubTable::dispatch<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int) const
 t OT::hb_ot_apply_context_t::return_t OT::SinglePos::dispatch<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*) const
 t OT::hb_ot_apply_context_t::return_t OT::SubstLookupSubTable::dispatch<OT::hb_ot_apply_context_t>(OT::hb_ot_apply_context_t*, unsigned int) const
 t OT::hb_ot_apply_context_t::skipping_iterator_t::next()
 t OT::hb_ot_apply_context_t::skipping_iterator_t::prev()
 t OT::hb_would_apply_context_t::return_t OT::ChainContext::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*) const
 t OT::hb_would_apply_context_t::return_t OT::SubstLookupSubTable::dispatch<OT::hb_would_apply_context_t>(OT::hb_would_apply_context_t*, unsigned int) const
 t OT::HeadlessArrayOf<OT::IntType<unsigned short, 2u>, OT::IntType<unsigned short, 2u> >::serialize(hb_serialize_context_t*, Supplier<OT::IntType<unsigned short, 2u> >&, unsigned int)
 t OT::intersects_class(hb_set_t*, OT::IntType<unsigned short, 2u> const&, void const*)
 t OT::intersects_glyph(hb_set_t*, OT::IntType<unsigned short, 2u> const&, void const*)
 t OT::Ligature::apply(OT::hb_ot_apply_context_t*) const
 t OT::Ligature::closure(OT::hb_closure_context_t*) const
 t OT::Ligature::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
 t OT::LigatureSet::serialize(hb_serialize_context_t*, Supplier<OT::IntType<unsigned short, 2u> >&, Supplier<unsigned int>&, unsigned int, Supplier<OT::IntType<unsigned short, 2u> >&)
 t OT::LigatureSubstFormat1::apply(OT::hb_ot_apply_context_t*) const
 t OT::LigatureSubstFormat1::closure(OT::hb_closure_context_t*) const
 t OT::LigatureSubstFormat1::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
 t OT::LigatureSubstFormat1::sanitize(hb_sanitize_context_t*) const
 t OT::LigatureSubstFormat1::serialize(hb_serialize_context_t*, Supplier<OT::IntType<unsigned short, 2u> >&, Supplier<unsigned int>&, unsigned int, Supplier<OT::IntType<unsigned short, 2u> >&, Supplier<unsigned int>&, Supplier<OT::IntType<unsigned short, 2u> >&)
 t OT::LigatureSubstFormat1::would_apply(OT::hb_would_apply_context_t*) const
 t OT::LigCaretList::get_lig_carets(hb_font_t*, hb_direction_t, unsigned int, OT::VariationStore const&, unsigned int, unsigned int*, int*) const
 t OT::Lookup::serialize(hb_serialize_context_t*, unsigned int, unsigned int, unsigned int)
 t OT::MarkArray::apply(OT::hb_ot_apply_context_t*, unsigned int, unsigned int, OT::AnchorMatrix const&, unsigned int, unsigned int) const
 t OT::MarkBasePosFormat1::apply(OT::hb_ot_apply_context_t*) const
 t OT::MarkBasePosFormat1::sanitize(hb_sanitize_context_t*) const
 t OT::MarkLigPosFormat1::apply(OT::hb_ot_apply_context_t*) const
 t OT::MarkLigPosFormat1::sanitize(hb_sanitize_context_t*) const
 t OT::MarkMarkPosFormat1::apply(OT::hb_ot_apply_context_t*) const
 t OT::MarkMarkPosFormat1::sanitize(hb_sanitize_context_t*) const
 t OT::match_class(unsigned int, OT::IntType<unsigned short, 2u> const&, void const*)
 t OT::match_coverage(unsigned int, OT::IntType<unsigned short, 2u> const&, void const*)
 t OT::match_glyph(unsigned int, OT::IntType<unsigned short, 2u> const&, void const*)
 t OT::match_input(OT::hb_ot_apply_context_t*, unsigned int, OT::IntType<unsigned short, 2u> const*, bool (*)(unsigned int, OT::IntType<unsigned short, 2u> const&, void const*), void const*, unsigned int*, unsigned int*, bool*, unsigned int*)
 t OT::MultipleSubstFormat1::closure(OT::hb_closure_context_t*) const
 t OT::MultipleSubstFormat1::sanitize(hb_sanitize_context_t*) const
 t OT::OffsetTo<OT::AttachList, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::Condition, OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::ConditionSet, OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::FeatureTableSubstitution, OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::FeatureVariations, OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::LangSys, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::LigCaretList, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::Lookup, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::PosLookup, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::Rule, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::RuleSet, OT::IntType<unsigned short, 2u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::VariationStore, OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OffsetTo<OT::VarRegionList, OT::IntType<unsigned int, 4u> >::sanitize(hb_sanitize_context_t*, void const*) const
 t OT::OpenTypeFontFile::sanitize(hb_sanitize_context_t*) const
 t OT::PairPosFormat1::apply(OT::hb_ot_apply_context_t*) const
 t OT::PairPosFormat1::sanitize(hb_sanitize_context_t*) const
 t OT::PairPosFormat2::apply(OT::hb_ot_apply_context_t*) const
 t OT::PairPosFormat2::sanitize(hb_sanitize_context_t*) const
 t OT::PairSet::apply(OT::hb_ot_apply_context_t*, OT::ValueFormat const*, unsigned int) const
 t OT::PairSet::collect_glyphs(OT::hb_collect_glyphs_context_t*, OT::ValueFormat const*) const
 t OT::PairSet::sanitize(hb_sanitize_context_t*, OT::PairSet::sanitize_closure_t const*) const
 t OT::PosLookup::apply_recurse_func(OT::hb_ot_apply_context_t*, unsigned int)
 t OT::propagate_attachment_offsets(hb_glyph_position_t*, unsigned int, hb_direction_t)
 t OT::ReverseChainSingleSubstFormat1::apply(OT::hb_ot_apply_context_t*) const
 t OT::ReverseChainSingleSubstFormat1::closure(OT::hb_closure_context_t*) const
 t OT::ReverseChainSingleSubstFormat1::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
 t OT::ReverseChainSingleSubstFormat1::sanitize(hb_sanitize_context_t*) const
 t OT::reverse_cursive_minor_offset(hb_glyph_position_t*, unsigned int, hb_direction_t, unsigned int)
 t OT::RuleSet::apply(OT::hb_ot_apply_context_t*, OT::ContextApplyLookupContext&) const
 t OT::RuleSet::closure(OT::hb_closure_context_t*, OT::ContextClosureLookupContext&) const
 t OT::RuleSet::collect_glyphs(OT::hb_collect_glyphs_context_t*, OT::ContextCollectGlyphsLookupContext&) const
 t OT::SegmentMaps::map(int) const
 t OT::Sequence::apply(OT::hb_ot_apply_context_t*) const
 t OT::SinglePosFormat1::sanitize(hb_sanitize_context_t*) const
 t OT::SinglePosFormat2::sanitize(hb_sanitize_context_t*) const
 t OT::SingleSubstFormat1::apply(OT::hb_ot_apply_context_t*) const
 t OT::SingleSubstFormat1::closure(OT::hb_closure_context_t*) const
 t OT::SingleSubstFormat1::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
 t OT::SingleSubstFormat2::apply(OT::hb_ot_apply_context_t*) const
 t OT::SingleSubstFormat2::closure(OT::hb_closure_context_t*) const
 t OT::SingleSubstFormat2::collect_glyphs(OT::hb_collect_glyphs_context_t*) const
 t OT::SingleSubstFormat2::sanitize(hb_sanitize_context_t*) const
 t OT::SingleSubstFormat2::serialize(hb_serialize_context_t*, Supplier<OT::IntType<unsigned short, 2u> >&, Supplier<OT::IntType<unsigned short, 2u> >&, unsigned int)
 t OT::SingleSubst::serialize(hb_serialize_context_t*, Supplier<OT::IntType<unsigned short, 2u> >&, Supplier<OT::IntType<unsigned short, 2u> >&, unsigned int)
 t OT::SubstLookup::apply_recurse_func(OT::hb_ot_apply_context_t*, unsigned int)
 t OT::SubstLookup::dispatch_closure_recurse_func(OT::hb_closure_context_t*, unsigned int)
 t OT::SubstLookup::sanitize(hb_sanitize_context_t*) const
 t OT::ValueFormat::apply_value(OT::hb_ot_apply_context_t*, void const*, OT::IntType<unsigned short, 2u> const*, hb_glyph_position_t&) const
 t OT::ValueFormat::sanitize_value_devices(hb_sanitize_context_t*, void const*, OT::IntType<unsigned short, 2u> const*) const
 t OT::VarData::get_delta(unsigned int, int*, unsigned int, OT::VarRegionList const&) const
 t OT::VarData::sanitize(hb_sanitize_context_t*) const
 t OT::VariationDevice::get_x_delta(hb_font_t*, OT::VariationStore const&) const
 t OT::VariationDevice::get_y_delta(hb_font_t*, OT::VariationStore const&) const
 t OT::VarRegionList::evaluate(unsigned int, int*, unsigned int) const
 t override_features_hangul(hb_ot_shape_planner_t*)
 t override_features_indic(hb_ot_shape_planner_t*)
 t override_features_khmer(hb_ot_shape_planner_t*)
 t override_features_myanmar(hb_ot_shape_planner_t*)
 t _pango_fc_cmap_cache_unref
 t pango_fc_decoder_class_intern_init
 T pango_fc_decoder_get_charset
 T pango_fc_decoder_get_glyph
 T pango_fc_decoder_get_type
 t pango_fc_decoder_get_type_once
 t pango_fc_decoder_init
 t pango_fc_face_class_intern_init
 t pango_fc_face_describe
 t pango_fc_face_finalize
 t pango_fc_face_get_face_name
 t pango_fc_face_get_type_once
 t pango_fc_face_init
 t pango_fc_face_is_synthesized
 t pango_fc_face_list_sizes
 t pango_fc_family_class_intern_init
 t pango_fc_family_finalize
 t pango_fc_family_get_name
 t pango_fc_family_get_type_once
 t pango_fc_family_init
 t pango_fc_family_is_monospace
 t pango_fc_family_list_faces
 t pango_fc_font_class_intern_init
 T pango_fc_font_create_base_metrics_for_context
 t pango_fc_font_describe
 t pango_fc_font_describe_absolute
 T pango_fc_font_description_from_pattern
 t pango_fc_font_face_data_equal
 t pango_fc_font_face_data_free
 t pango_fc_font_face_data_hash
 t pango_fc_font_finalize
 t pango_fc_font_find_shaper
 t pango_fc_font_get_coverage
 t _pango_fc_font_get_decoder
 t _pango_fc_font_get_font_key
 t pango_fc_font_get_font_map
 T pango_fc_font_get_glyph
 t pango_fc_font_get_metrics
 t pango_fc_font_get_property
 T pango_fc_font_get_raw_extents
 T pango_fc_font_get_type
 t pango_fc_font_get_type_once
 T pango_fc_font_get_unknown_glyph
 T pango_fc_font_has_char
 t pango_fc_font_init
 T pango_fc_font_kern_glyphs
 t pango_fc_font_key_equal
 T pango_fc_font_key_get_context_key
 T pango_fc_font_key_get_matrix
 T pango_fc_font_key_get_pattern
 T pango_fc_font_key_get_variations
 t pango_fc_font_key_hash
 T pango_fc_font_lock_face
 T pango_fc_font_map_add_decoder_find_func
 T pango_fc_font_map_cache_clear
 t pango_fc_font_map_class_intern_init
 T pango_fc_font_map_config_changed
 T pango_fc_font_map_create_context
 t _pango_fc_font_map_fc_to_coverage
 t pango_fc_font_map_finalize
 T pango_fc_font_map_find_decoder
 t pango_fc_font_map_fini
 t _pango_fc_font_map_get_cmap_cache
 T pango_fc_font_map_get_config
 t _pango_fc_font_map_get_coverage
 t pango_fc_font_map_get_font_face_data
 t pango_fc_font_map_get_resolution
 T pango_fc_font_map_get_type
 t pango_fc_font_map_get_type_once
 t pango_fc_font_map_init
 t pango_fc_font_map_list_families
 t pango_fc_font_map_load_font
 t pango_fc_font_map_load_fontset
 t _pango_fc_font_map_remove
 T pango_fc_font_map_set_config
 T pango_fc_font_map_shutdown
 t pango_fc_font_real_get_glyph
 t pango_fc_font_real_has_char
 t pango_fc_fontset_class_intern_init
 t _pango_fc_font_set_decoder
 t pango_fc_fontset_finalize
 t _pango_fc_font_set_font_key
 t pango_fc_fontset_foreach
 t pango_fc_fontset_get_font
 t pango_fc_fontset_get_font_at
 t pango_fc_fontset_get_language
 t pango_fc_fontset_get_type_once
 t pango_fc_fontset_init
 t pango_fc_fontset_key_equal
 T pango_fc_fontset_key_get_absolute_size
 T pango_fc_fontset_key_get_context_key
 T pango_fc_fontset_key_get_description
 T pango_fc_fontset_key_get_language
 T pango_fc_fontset_key_get_matrix
 T pango_fc_fontset_key_get_resolution
 t pango_fc_fontset_key_hash
 t pango_fc_font_set_property
 t _pango_fc_font_shutdown
 T pango_fc_font_unlock_face
 t pango_fc_hb_font_get_glyph_advance
 t pango_fc_hb_font_get_glyph_contour_point
 t pango_fc_hb_font_get_glyph_extents
 t pango_fc_hb_font_get_glyph_h_origin
 t pango_fc_hb_font_get_glyph_v_origin
 t pango_fc_hb_font_get_h_kerning
 t pango_fc_hb_font_get_nominal_glyph
 t pango_fc_hb_font_get_variation_glyph
 t pango_fc_patterns_unref
 t _pango_fc_shape
 t pango_fc_shape_engine_class_intern_init
 t pango_fc_shape_engine_get_type_once
 t pango_fc_shape_engine_init
 t _pango_fc_shape_engine_shape
 t pango_ft2_font_class_intern_init
 t pango_ft2_font_finalize
 t _pango_ft2_font_get_cache_glyph_data
 T pango_ft2_font_get_coverage
 T pango_ft2_font_get_face
 t pango_ft2_font_get_glyph_extents
 T pango_ft2_font_get_kerning
 T pango_ft2_font_get_type
 t pango_ft2_font_get_type_once
 t pango_ft2_font_init
 t pango_ft2_font_map_changed
 t pango_ft2_font_map_class_intern_init
 T pango_ft2_font_map_create_context
 t _pango_ft2_font_map_default_substitute
 t pango_ft2_font_map_finalize
 T pango_ft2_font_map_for_display
 t _pango_ft2_font_map_get_library
 t _pango_ft2_font_map_get_renderer
 t pango_ft2_font_map_get_resolution
 t pango_ft2_font_map_get_serial
 T pango_ft2_font_map_get_type
 t pango_ft2_font_map_get_type_once
 t pango_ft2_font_map_init
 T pango_ft2_font_map_new
 t pango_ft2_font_map_new_font
 T pango_ft2_font_map_set_default_substitute
 T pango_ft2_font_map_set_resolution
 T pango_ft2_font_map_substitute_changed
 t _pango_ft2_font_new
 t pango_ft2_font_real_lock_face
 t pango_ft2_font_real_unlock_face
 t pango_ft2_font_render_box_glyph
 t _pango_ft2_font_set_cache_glyph_data
 t _pango_ft2_font_set_glyph_cache_destroy
 t pango_ft2_free_glyph_info_callback
 t pango_ft2_free_rendered_glyph
 T pango_ft2_get_context
 T pango_ft2_get_unknown_glyph
 T pango_ft2_new_face_substitute
 T pango_ft2_render
 t pango_ft2_renderer_class_intern_init
 t pango_ft2_renderer_draw_glyph
 t pango_ft2_renderer_draw_trapezoid
 T pango_ft2_renderer_get_type
 t pango_ft2_renderer_get_type_once
 t pango_ft2_renderer_init
 T pango_ft2_render_layout
 T pango_ft2_render_layout_line
 T pango_ft2_render_layout_line_subpixel
 T pango_ft2_render_layout_subpixel
 T pango_ft2_render_transformed
 T pango_ft2_shutdown_display
 T pango_ot_buffer_add_glyph
 T pango_ot_buffer_clear
 T pango_ot_buffer_destroy
 T pango_ot_buffer_get_glyphs
 T pango_ot_buffer_new
 T pango_ot_buffer_output
 T pango_ot_buffer_set_rtl
 T pango_ot_buffer_set_zero_width_marks
 t pango_ot_info_class_intern_init
 t pango_ot_info_finalize
 t pango_ot_info_finalizer
 T pango_ot_info_find_feature
 T pango_ot_info_find_language
 T pango_ot_info_find_script
 T pango_ot_info_get
 T pango_ot_info_get_type
 t pango_ot_info_get_type_once
 t pango_ot_info_init
 T pango_ot_info_list_features
 T pango_ot_info_list_languages
 T pango_ot_info_list_scripts
 T pango_ot_ruleset_add_feature
 t pango_ot_ruleset_class_intern_init
 T pango_ot_ruleset_description_copy
 T pango_ot_ruleset_description_equal
 T pango_ot_ruleset_description_free
 T pango_ot_ruleset_description_hash
 t pango_ot_ruleset_finalize
 T pango_ot_ruleset_get_feature_count
 T pango_ot_ruleset_get_for_description
 T pango_ot_ruleset_get_type
 t pango_ot_ruleset_get_type_once
 t pango_ot_ruleset_init
 T pango_ot_ruleset_maybe_add_feature
 T pango_ot_ruleset_maybe_add_features
 T pango_ot_ruleset_new
 T pango_ot_ruleset_new_for
 T pango_ot_ruleset_new_from_description
 T pango_ot_ruleset_position
 T pango_ot_ruleset_substitute
 T pango_ot_tag_from_language
 T pango_ot_tag_from_script
 T pango_ot_tag_to_language
 T pango_ot_tag_to_script
 t parse_tag(char const**, char const*, unsigned int*)
 t position_cluster(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*, unsigned int, unsigned int)
 t postprocess_glyphs_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
 t preprocess_text_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
 t preprocess_text_thai(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
 t record_pref(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t record_rphf(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t record_stch(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t reference_table(hb_face_t*, unsigned int, void*)
 t _release_blob(FT_FaceRec_*)
 t reorder(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t reorder_marks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, unsigned int, unsigned int)
 t set_indic_properties(hb_glyph_info_t&)
 t setup_masks_arabic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
 t setup_masks_arabic_plan(arabic_shape_plan_t const*, hb_buffer_t*, hb_script_t)
 t setup_masks_hangul(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
 t setup_masks_indic(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
 t setup_masks_khmer(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
 t setup_masks_myanmar(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
 t setup_masks_use(hb_ot_shape_plan_t const*, hb_buffer_t*, hb_font_t*)
 t setup_syllables(hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*)
 t shutdown_font
 t trampoline_destroy(void*)
 t ucdn_compat_decompose
 t ucdn_compose
 t ucdn_decompose
 t ucdn_get_bidi_class
 t ucdn_get_combining_class
 t ucdn_get_east_asian_width
 t ucdn_get_general_category
 t ucdn_get_linebreak_class
 t ucdn_get_mirrored
 t ucdn_get_resolved_linebreak_class
 t ucdn_get_script
 t ucdn_get_unicode_version
 t ucdn_mirror
 t ucdn_paired_bracket
 t ucdn_paired_bracket_type
 t void apply_string<GSUBProxy>(OT::hb_ot_apply_context_t*, GSUBProxy::Lookup const&, hb_ot_layout_lookup_accelerator_t const&)
 t void hb_ot_map_t::apply<GPOSProxy>(GPOSProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
 t void hb_ot_map_t::apply<GSUBProxy>(GSUBProxy const&, hb_ot_shape_plan_t const*, hb_font_t*, hb_buffer_t*) const
 t void hb_set_t::process<HbOpAnd>(hb_set_t const*)
 t void hb_set_t::process<HbOpMinus>(hb_set_t const*)
 t void hb_set_t::process<HbOpOr>(hb_set_t const*)
 t void hb_set_t::process<HbOpXor>(hb_set_t const*)
 t $x
 t $x.0
 t $x.1
 t $x.10
 t $x.100
 t $x.101
 t $x.102
 t $x.103
 t $x.104
 t $x.105
 t $x.106
 t $x.107
 t $x.108
 t $x.109
 t $x.11
 t $x.110
 t $x.111
 t $x.112
 t $x.113
 t $x.114
 t $x.115
 t $x.116
 t $x.117
 t $x.118
 t $x.119
 t $x.12
 t $x.121
 t $x.122
 t $x.123
 t $x.124
 t $x.125
 t $x.126
 t $x.127
 t $x.128
 t $x.129
 t $x.13
 t $x.130
 t $x.131
 t $x.132
 t $x.133
 t $x.134
 t $x.135
 t $x.136
 t $x.137
 t $x.138
 t $x.139
 t $x.14
 t $x.140
 t $x.141
 t $x.142
 t $x.144
 t $x.145
 t $x.146
 t $x.147
 t $x.148
 t $x.149
 t $x.15
 t $x.150
 t $x.151
 t $x.152
 t $x.153
 t $x.154
 t $x.155
 t $x.156
 t $x.157
 t $x.158
 t $x.159
 t $x.16
 t $x.160
 t $x.162
 t $x.163
 t $x.166
 t $x.167
 t $x.168
 t $x.169
 t $x.17
 t $x.171
 t $x.172
 t $x.173
 t $x.174
 t $x.175
 t $x.176
 t $x.177
 t $x.178
 t $x.179
 t $x.18
 t $x.180
 t $x.181
 t $x.182
 t $x.183
 t $x.184
 t $x.185
 t $x.186
 t $x.187
 t $x.188
 t $x.189
 t $x.19
 t $x.190
 t $x.192
 t $x.193
 t $x.194
 t $x.195
 t $x.196
 t $x.197
 t $x.199
 t $x.2
 t $x.20
 t $x.200
 t $x.201
 t $x.202
 t $x.203
 t $x.204
 t $x.205
 t $x.206
 t $x.208
 t $x.209
 t $x.21
 t $x.210
 t $x.211
 t $x.212
 t $x.213
 t $x.214
 t $x.215
 t $x.216
 t $x.217
 t $x.218
 t $x.219
 t $x.22
 t $x.220
 t $x.221
 t $x.222
 t $x.223
 t $x.224
 t $x.226
 t $x.227
 t $x.228
 t $x.229
 t $x.23
 t $x.230
 t $x.231
 t $x.24
 t $x.25
 t $x.26
 t $x.27
 t $x.28
 t $x.29
 t $x.3
 t $x.30
 t $x.31
 t $x.33
 t $x.34
 t $x.35
 t $x.36
 t $x.37
 t $x.38
 t $x.39
 t $x.4
 t $x.40
 t $x.41
 t $x.43
 t $x.44
 t $x.45
 t $x.46
 t $x.47
 t $x.48
 t $x.49
 t $x.5
 t $x.50
 t $x.51
 t $x.52
 t $x.53
 t $x.54
 t $x.55
 t $x.56
 t $x.57
 t $x.58
 t $x.59
 t $x.6
 t $x.61
 t $x.62
 t $x.63
 t $x.64
 t $x.66
 t $x.67
 t $x.68
 t $x.69
 t $x.7
 t $x.70
 t $x.71
 t $x.72
 t $x.73
 t $x.74
 t $x.75
 t $x.76
 t $x.78
 t $x.79
 t $x.8
 t $x.80
 t $x.81
 t $x.82
 t $x.83
 t $x.84
 t $x.85
 t $x.86
 t $x.87
 t $x.88
 t $x.89
 t $x.9
 t $x.90
 t $x.91
 t $x.92
 t $x.93
 t $x.94
 t $x.95
 t $x.96
 t $x.97
 t $x.99
 vsnprintf@@LIBC
