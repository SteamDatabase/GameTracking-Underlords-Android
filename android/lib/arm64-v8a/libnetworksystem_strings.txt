`"@)	
>{}()':
        
 ... }
 { ... };
@-` "
@-#(!
	*	}`
																																																																																																				
 [$0]
"$0", 
$0  }
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899
$0// $1
$0$1}
$0$1 = $2
 !"#$%&'()*+,-./0123
$0$1$2 $3 = $4
0123456789abcdef
\%03o
06`&@
06h2@
0 bit issue, changes
0 bit issue, spot 1
0 bit issue, spot 2
0 bit issue, spot 3
0 bit issue, spot 4
"$0" does not declare $1 as an extension number.
$0enum $1 {
$0  extend .$1 {
$0  extensions $1 to $2;
0I@9l
$0message $1
0NETWORK_DISCONNECT_REJECT_SERVERCDKEYAUTHINVALID
$0oneof $1 {
$0option $1;
$0  reserved 
$0rpc $1($4.$2) returns ($5.$3)
$0 to $1, 
"0x" must be followed by hex digits.
0x%p assigned %d to '%s'
0@y_!!ka
10CEntityMsg
10CMsg_CVars
10CMsgQAngle
10CMsgVector
10ConCommand
10IAppSystem
11CEncodeInfo
11CNETMsg_NOP
11INetChannel
11IRefCounted
%-120s
%-120s - %s
%12.12s %21.21s[%d]
%12.12s:  @ %.3f [%s]
127.0.0.1
12CCLCMsg_Move
12CEmptyConVar
12CMsgVector2D
12CNETMsg_Tick
12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE
12CSVCMsg_Menu
13CCallbackBase
13CCallbackImplILi704EE
13CNetMessagePBILi3E23CNETMsg_SplitScreenUserL13SignonGroup_t11EL19NetChannelBufType_t1ELb0EE
13CNetMessagePBILin1E19NetMessagePacketEndL13SignonGroup_t11EL19NetChannelBufType_t1ELb0EE
13CNetMessagePBILin1E21NetMessagePacketStartL13SignonGroup_t11EL19NetChannelBufType_t1ELb0EE
13CNetMessagePBILin1E26NetMessageConnectionClosedL13SignonGroup_t11EL19NetChannelBufType_t1ELb0EE
13CNetMessagePBILin1E27NetMessageConnectionCrashedL13SignonGroup_t11EL19NetChannelBufType_t1ELb0EE
13CNetMessagePBILin1E32NetMessageSplitscreenUserChangedL13SignonGroup_t11EL19NetChannelBufType_t1ELb0EE
13CSVCMsg_Print
14CBaseAppSystemI14INetworkSystemE
14CBaseAppSystemI19INetworkSystemUtilsE
14CMsgIPCAddress
14CMsgPlayerInfo
14CMsgServerPeer
14CMsgVoiceAudio
14CNetworkSystem
14ConCommandBase
14CSVCMsg_Sounds
14INetworkSystem
15CMemberFunctor1IP26CParallelProcessorAbstractI18CParallelProcessorI30BuildFlattenedSerializerInfo_t27CMemberFuncJobItemProcessorIS2_37CBuildNetworkSerializerHierarchyOrderS4_ELi1EEEMS7_FviEi12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE18CFuncMemPolicyNoneE
15CMemberFunctor1IP26CParallelProcessorAbstractI18CParallelProcessorIN37CBuildNetworkSerializerHierarchyOrder12BuildEntry_tE27CMemberFuncJobItemProcessorIS3_S2_S2_ELi1EEEMS7_FviEi12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE18CFuncMemPolicyNoneE
15CMsg_CVars_CVar
15CSVCMsg_SetView
15CTier0AppSystemI14INetworkSystemE
15CTier0AppSystemI19INetworkSystemUtilsE
15CTier1AppSystemI14INetworkSystemLi0EE
15CTier1AppSystemI19INetworkSystemUtilsLi0EE
15CTier2AppSystemI14INetworkSystemLi0EE
15CTier2AppSystemI19INetworkSystemUtilsLi0EE
15INetChannelInfo
15SignedPayload_t
16CDefaultAccessor
16CNetworkMessages
16CSerializerStack
16CSVCMsg_BSPDecal
16CSVCMsg_FixAngle
16CSVCMsg_PeerList
16CSVCMsg_Prefetch
16CSVCMsg_SetPause
16ICommandCallback
16INetworkMessages
17CCLCMsg_VoiceData
17CNETMsg_SetConVar
17CNETMsg_StringCmd
17CSVCMsg_ClassInfo
17CSVCMsg_GameEvent
17CSVCMsg_SendTable
17CSVCMsg_StopSound
17CSVCMsg_VoiceData
17CSVCMsg_VoiceInit
18CCLCMsg_ClientInfo
18CCLCMsg_ServerPing
18CNETMsg_Disconnect
18CSVCMsg_HLTVStatus
18CSVCMsg_ServerInfo
19CBidirMsg_RelayInfo
19CCLCMsg_BaselineAck
19CNETMsg_SignonState
19CNetworkSystemUtils
19CSchemaRegistration
19CSerializedEntities
19CSVCMsg_SplitScreen
19CSVCMsg_UserMessage
+1@9I1@y+
19INetworkSystemUtils
19ISerializedEntities
19NetMessagePacketEnd
1bQJ1~
	1o9I
1@y(1
*1@y)}B9d
%20.20s 
20CCLCMsg_CmdKeyValues
20CCLCMsg_FileCRCCheck
20CCLCMsg_ListenEvents
20CCLCMsg_RequestPause
20CCLCMsg_ServerStatus
20CNetworkSerializerPB
20CPostConnectCallback
20CRefCountServiceBaseILb1E6CRefMTE
20CSendSerializerStack
20CSVCMsg_CmdKeyValues
20CSVCMsg_GetCvarValue
20CSVCMsg_TempEntities
21CBidirMsg_RelayPacket
21.CBidirMsg_RelayPacket.SignedDestinationAddress_t
21CCLCMsg_ClientMessage
21CClientDatatableStack
21CDeltaFieldPathTracer
21CNetworkEncodingStats
21CSVCMsg_GameEventList
21CSVCMsg_ServerSteamID
21IDeltaFieldPathTracer
21IFlattenedSerializers
21INetworkEncodingStats
21IVConCommDataReceived
21NetMessagePacketEnd_t
21NetMessagePacketStart
22CMsgServerNetworkStats
22CSchemaInstallCallback
22CSVCMsg_CrosshairAngle
22CSVCMsg_FullFrameSplit
22CSVCMsgList_GameEvents
22CSVCMsg_PacketEntities
22CSVCMsg_PacketReliable
22SerializedNetAddress_t
23CCLCMsg_LoadingProgress
23CNETMsg_SpawnGroup_Load
23CNETMsg_SplitScreenUser
23CSVCMsg_GameEvent_key_t
23IConCommandBaseAccessor
23INetworkMessageInternal
23NetMessagePacketStart_t
24CCLCMsg_RespondCvarValue
24CFlattenedSerializers_FS
24CSVCMsgList_UserMessages
25CConCommandMemberAccessorI16CNetworkMessagesE
25CNETMsg_SpawnGroup_Unload
25CNETMsg_SplitScreenUser_t
25CSVCMsg_ClassInfo_class_t
25CSVCMsg_CreateStringTable
25CSVCMsg_UpdateStringTable
2?!5k
26CCLCMsg_SplitPlayerConnect
26CSVCMsg_Sounds_sounddata_t
26ICommandCompletionCallback
26NetMessageConnectionClosed
26ProtoFlattenedSerializer_t
27CBidirMsg_RebroadcastSource
27CMsgServerNetworkStats_Port
27CSVCMsg_FlattenedSerializer
27CSVCMsg_GameEventList_key_t
2_!7k
27NetMessageConnectionCrashed
28CSVCMsg_ClearAllStringTables
28CSVCMsg_SendTable_sendprop_t
28IFlattenedSerializerSpewFunc
2_!8k
28NetMessageConnectionClosed_t
29CCLCMsg_SplitPlayerDisconnect
29CMsgServerNetworkStats_Player
2_!9k
29NetMessageConnectionCrashed_t
2	a@9Ia
2	AA9
2B9h2
2ByiB@y	-
2 .CBidirMsg_RelayInfo.Operation_t
2#.CSVCMsg_GameEventList.descriptor_t
2!.CSVCMsg_GameSessionConfiguration
2#.CSVCMsgList_UserMessages.usermsg_t
2#GameUI_Disconnect_RemoteProblem_TimeoutConnecting
2/H@9
2*H@9)}@
2&H@9
2hB	9
2ij(8
2iJ@9
2iJ@9)
2iJ@9	
2+imx
2	i+x
2j"@9)p
2_!(k
2?".k
2?k78
2_k88
2?k88
2(K@9
2oi-x
2 .ProtoFlattenedSerializerField_t"!
2@yzz@
30CBidirMsg_RebroadcastGameEvent
30CSVCMsgList_GameEvents_event_t
31ProtoFlattenedSerializerField_t
32CFlattenedSerializerSpewFunc_Log
32CNETMsg_SpawnGroup_LoadCompleted
32CNetworkFieldSerializerAllocator
32CSVCMsg_GameSessionConfiguration
32INetworkFieldSerializerAllocator
32ISteamNetworkingSocketsCallbacks
32NetMessageSplitscreenUserChanged
33CNETMsg_SpawnGroup_ManifestUpdate
33CSchemaRegistration_networksystem
34CNETMsg_SpawnGroup_SetCreationTick
34CSVCMsg_GameEventList_descriptor_t
34CSVCMsgList_UserMessages_usermsg_t
34NetMessageSplitscreenUserChanged_t
38Source2SteamNetworkingSocketsCallbacks
 [%.3f server clamped to %.3f]
(3@y%'@
	3@y	
?456789:;<=
456789:;<=
48CBidirMsg_RelayPacket_SignedDestinationAddress_t
4(}B9
4H	@7
4h"@9
4)H@9i
4hb@9
4hB@9
4hf@9
4hf@9(
4hn@9
4hn@9H
4-i*8J
4i.@9h"@9I
4in@9?
4i*@y
4m{kx
#4#.n<
%50.50s: %2.2d bits == '%s'
%50.50s %50.50s offset %5u %s
%50.50s %75.75s offset %10.10s %9.9s %s
% 5d %-20s:  %-32s at offset % 5d, 0x%p array %-5s struct %-5s
% 5d %-20s:  %-32s at offset % 5d, 0x%p FAKE field
% 5d % 5d % 5d: %-20s: 0x%p
% 5d % 5d % 5d: %-20s: 0x%p encoding field %s %s%s: %s
% 5d % 5d % 5d: %-20s [%d]: 0x%p array size adjusted from %d to %d elements
% 5d % 5d % 5d: %-20s [%d]: 0x%p decoding FAKE field %s %s: %s
% 5d % 5d % 5d: %-20s [%d]: 0x%p decoding field %s %s: %s
% 5d % 5d % 5d: %-20s [%d]: 0x%p decoding (stream: %s local: %s) %s field %s %s %s
% 5d % 5d:% 5d: %-20s [%d]: delta field %s [%s]
% 5d % 5d:% 5d: %-20s [%d]: delta field %s [%s] "%d" != "%d"
% 5d % 5d:% 5d: %-20s [%d]: delta field %s [%s]%s
% 5d % 5d:% 5d: %-20s [%d]: delta field %s [%s] "%s" != "%s"
5hr@9H
5h"@y
)5IJ(}
5i.@y
5j3@y
5j"@y?=
5w"@y(
5(#@y
5	 @y)
?6`*@
?6	(@
/6`>@
/6`"@
/6	 @
/6	,@
'6`:@
'6	(@
(6(+@
%60.60s %6.6s %15.15s %5.5s %10.10s
%60.60s %6.6s %15.15s %5d %10d 
6)A@y)-
6B9h6
6ConVar
_6	D@
?6`F@
/6h.@
/6h"@
'6h.@
'6h*@
(6h.@
(6h'@
@6h>@
@6h.@
(6H+@
 6h2@
/6h2@
'6h2@
(6h2@
(6h6@
'6h^A9	
@6hB@
6h&B)
6hb@9
6hB@9
6h^B9	Z
6hBA9
6hBA9	Q
6hbB9	7
6HC@9
6hFA9
_6hj@
 6hJ@
6hj@9
6hj@9h
_6hjA9	
6hn@9
6hNA9
_6hNB9	;
6hs|9
(6hZ@
 6i*@
?6i>@
/6i^@
/6i>@
/6i.@
/6i"@
'6i:@
'6i.@
'6i*@
@6i:@
 6i2@
'6i2@
?6i6@
	(6i6@
6i"B)
?6if@
6iFA9
_6ij@
@6ij@
 6iJ@
6iJA9
`6in@
?6iN@
_6inA9
?6iR@
@6iR@
6iRA9
@6iV@
6iVA9
'6iZ@
6iZA9
 6`j@
'6j.@
(6j2@
6	PA9
6	TA9
 6tj@
(6u"@
6uz;x
?6v*@
/6v"@
'6vj@
 74	(74
 74	(7t
75	 7
76`&@
76	$@
76`B@
76h&@
76i:@
76i&@
76i2@
76ib@
76iB@
76iJ@
76v&@
(7H	07h
7h	 7h
7h"@9
7hf@9
7hf@9(
7hF@9
7ib@9
7ib@9i
7IConVar
7IF 7
7j&@y)	
	*_!7k
7t	(7t
 7T	(7T
7t	87t
 7wB@
@8)		
@8	}@
%8.3f: PollSocket(%d)
%8.3f: %s: ParseMessagesDemo UNRELIABLE %d bytes
%8.3f: %s ParseMessages RELIABLE %d bytes
%8.3f: %s: ParseMessagesSNP RELIABLE %d bytes
%8.3f: %s: ParseMessagesSNP UNRELIABLE Seq=%d %d bytes
86`*@
86);C
86h*@
86h2@
86i*@
86i2@
86iF@
8CFmtStrNILi1024ELb0EE
8CFmtStrNILi256ELb0EE
8CFunctor
8CMsgRGBA
8CNetChan
8CUtlSlot
8#GameUI_Disconnect_LocalProblem_HostedServerPrimaryRelay
8h.@9
@8j&A
	*_!8k
+-@8l
8NETWORK_DISCONNECT_LOCALPROBLEM_HOSTEDSERVERPRIMARYRELAY
_8o%@8
8x9,7
)!@9)
)	@9*
@9)!@
@9*	@
@9+	@
	)@9)
	)@9*
9	1@y	0
@9%	@9&
 @9	$@9J
 @9	$@9JQG
)9B9?
9({B9
@9)+C
9(cB9j
@9h*@
9h.@9
9h^A9
9h^B9
9hB@9
9hbB9
@9hF@
9hFA9
9hFB9
@9HI@
!@9hj)8
9hJA9
9hJB9
9hNA9
9hNB9
#@9HP
9hRB9
@9hV@
9hVA9
9hVB9
9hZA9
9hZB9
@9i&@
@9I	@
{@9	i:8
@9i~@9	
9i~B9h~
9j*@9(
)!@9J!@9?
@9J9	
@9jjh8*
@9JQG
@9JU	
	*_!9k
!!@9K
)!@9	k(8I
9kj(8|
 @9)QG
{9t";
@9T|@
@9U|@
@9 	@z
A-!(!
a2@yh2@y
-A8*	
+a@9?
		A9?
		A9	
	A@9)
	A@9)	
	A@9	
A-#9!
a@9+a
"A9)]F
A9)]F
		A9h
	A9h&A
^A9i^
"A9i"
*	A9i
	A@9i
A9i>@
	A@9I
A9	ii
A9|J@
	A9j"A
,	A9K
+	A9K
A9Kik
+	A9lC
?A9tJ@
AA9(	
AA9(	@
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
abort
Accepting Steam Net connection %s
Activates/deactivates net message validation
active_spawngroup_handle
    Actual    : 
  Actual   : 
AddAllocatedMessage
AddBool
AddDouble
AddEnum
AddEnumValue accepts only valid integer values: value 
AddFloat
AddInt32
AddInt64
additionalHops
AddMessage
addon_name
addons
AddString
AddUInt32
AddUInt64
A file with this name is already in the pool.
After sending last chunk of split packet payload, wait at least this many msecs after last activity before giving up
aggregate_value
A)hR@9K
)AIJ)
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
allow_alias
Already saw decimal point or exponent; can't have another one.
	aM9i
Android clang version 5.0.300080  (based on LLVM 5.0.300080)
__android_log_write
angle
AnimationSystem_001
AnimationSystemUtils_001
AnimGraphEditorUtils001
annotation
Annotation
", another member of oneof "
ApplyOverrides_R:  couldn't find field from schema %s::%s
APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!
 a protocol 
A protocol message was rejected because it was too big (more than 
archive
 args were given.  Full format string was: "
array of pointers changed
array size changed
AssertMsg_ConditionFailed
AssetBrowserSystem_001
AssetPreviewSystem_001
AssetSystem001
AssetSystemTest001
AssociateNetMessageGroupIdWithChannelCategory: Couldn't find or create group %s!
AssociateNetMessageGroupIdWithChannelCategory: Trying to use an unregistered netchannel category!
AssociateNetMessageWithAllChannelCategories: Passed in an invalid net message handle!
AssociateNetMessageWithChannelCategoryAbstract: Passed in an invalid net message handle!
AssociateNetMessageWithChannelCategoryAbstract: Trying to use an unregistered netchannel category!
Associating NetChan %s (%s) with Steam Net Connection handle #%u
  at depth %d items %d
Attempt to compress out of band voice payloads (360 only).
audible_mask
audio
[a:%u:%u]
[A:%u:%u:%u]
available
Available settings:
Average Backing Raw Paths         :  %8.3f
Average Data Bytes                :  %8.3f bytes
Average Memory Usage Per Entity   :  %8.3f bytes
Average Number of Field Paths     :  %8.3f
avg_data_in
avg_data_out
avg_latency_in
avg_latency_out
avg_loss_in
avg_loss_out
avg_packets_in
avg_packets_out
	Aw9	
aX9!9@
Ay?!(k
^B9h^
>B9h>
:B9h:
	}B9i
b@9ib
b@9JeF
bA9hb
BA9hB
BA9iB
backing paths
BackUp() can only be called after a successful Next().
 BackUp() can only be called after Next().
badpacket%03i.dat
BakedLODBuilderMgr001
baseline
baseline_nr
baseline_tick
bB9hb
BB9hB
BB9hj:8
" because it is missing required fields: 
begin
BenchmarkService001
BG9iBG9
Bidirectional_Messages
#Bidirectional_Messages_LowFrequency
bi_GameEvent
binary
binary_auto
binary_bc
binary_lz4
BinaryProperties_GetValue
bi_RebroadcastGameEvent
bi_RebroadcastSource
bi_RelayInfo
bi_RelayPacket
	bit_count
bit %u - %u (%u bits/%u bytes):
bool CFlattenedSerializer::Decode(FlattenedSerializerSpewType_t, CSerializedEntity *, void *, int, NetworkSerializationMode_t, CNetworkFieldChangedEventQueue *, bool, int, INetworkProceduralDataHelper *, void *) const
bool CFlattenedSerializer::DecodeProceduralField(CStackPair &, bf_read &, int, const NetworkFieldSerializerInfo_t &, const CFieldPath &, uint8 *, int, INetworkProceduralDataHelper *, void *, bool) const
bool CFlattenedSerializer::EncodeField(bool, CFieldPath &, CEncodeInfo *, PackedFieldPathVec_t *, CUtlVector<uint32> *, unsigned long, int, NetworkSerializationMode_t, CAutoNetworkableData_t<2048> &, INetworkProceduralDataHelper *, void *, int *) const
bool CFlattenedSerializer::MergeDeltas(FlattenedSerializerSpewType_t, CSerializedEntity *, CSerializedEntity *, CSerializedEntity *, int, NetworkSerializationMode_t, INetworkProceduralDataHelper *, void *, PackedFieldPathVec_t *) const
bool CFlattenedSerializer::WriteFieldList(FlattenedSerializerSpewType_t, bf_write &, CSerializedEntity *, int, NetworkSerializationMode_t, const PackedFieldPathVec_t *, INetworkProceduralDataHelper *, void *) const
bool CNetChan::ParseMessages(bf_read &, NetChannelBufType_t)
bool CNetworkFieldChangedEventQueue::QueueChange(int, const CFieldPath &, const char *, void *, void *, void *&, int, NetworkFieldChangedDelegateType_t, CUtlAbstractDelegate, int, int, bool)
bool CNetworkSerializer::InitField(NetworkFieldSerializerInfo_t *, int, NetworkValidationMode_t, const char *, const FieldMetaInfo_t &, int, CDataparserBuilder &, bool, INetworkSerializerBindingBuildFilter *, int) const
bool CQuantizedFloatEncoder::Init(const char *, int, int, float, float) [bValidate = true]
Boolean default must be true or false.
both states
bPayloadEncrypted
broadcast
__bss_end__
__bss_start
__bss_start__
Buffer overflow in net channel %s
buffer. Use the 'bytes' type if you intend to send raw 
buftype
BuildDeltaProperties fieldDataBuf
BuildMergedSerializedEntity:  delta header with corrupt array count [ ent %d ]:  entry %d/%d == %u!
BuildMergedSerializedEntity:  ignoring %s, was in previous state only, now outside of valid range for root field %s [array count %d, base index %d]
BuildMergedSerializedEntity:  problem writing %s:  %d bits [%d to %d] is < 1 bit!
 builtin()
 but not used.
", but only 
:By(M
bytes. 
Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of 
bz@9_
.C))}
cA9s~
Call set methods to initialize MapKey.
Cannot allocate abstract class
Cannot allocate buffer larger than kint32max for 
	CannotBeNetworked        = %s
Cannot call BuildFile on a DescriptorPool that uses a DescriptorDatabase.  You must instead find a way to get your file into the underlying database.
Cannot construct abstract class
Cannot copy abstract class
Cannot copy json_name to a proto of a different size.
Cannot deallocate abstract class
Cannot deduce for class
Cannot destruct abstract class
(cannot determine missing fields for lite message)
Cannot get here
Cannot reconnect loopback after initializing steam networking!
Cannot register change callback priorities at this stage! Must do it earlier!
Cannot show available settings until SteamNetworkingUtils initialized
Cannot show values of SteamNetworkongSockets configuration values until initialized
Cannot use priority equal to NETWORK_FIELD_CHANGE_DEFAULT_PRIORITY!
Can't 
Can't BackUp() after failed Next().
 Can't back up over more bytes than were returned by the last call to Next().
Can't ConnectLoopback between socket %d and %d, not enough slots
Can't DisconnectLoopbackUnsafe between socket %d and %d, sockets out of range
Can't get here.
Can't get here: failed to get default value as string
Can't match up steam connection user data %lld to netchan.  This can happen due to a race condition, just as we close the connection.  But otherwise it's probably a bug
Can't open network socket '%s'.  No SteamNetworkingSockets
can't reach here.
	Category Mask            = %08X
(cB9	
CBidirMsg_RebroadcastGameEvent
CBidirMsg_RebroadcastSource
CBidirMsg_RelayInfo
CBidirMsg_RelayPacket
 cb(%s[%d])
cc_enable_arenas
cc_generic_services
CCLCMsg_BaselineAck
CCLCMsg_ClientInfo
CCLCMsg_ClientMessage
CCLCMsg_CmdKeyValues
CCLCMsg_FileCRCCheck
CCLCMsg_ListenEvents
CCLCMsg_LoadingProgress
CCLCMsg_Move
CCLCMsg_RequestPause
CCLCMsg_RespondCvarValue
CCLCMsg_ServerPing"P
CCLCMsg_ServerStatus
CCLCMsg_SplitPlayerConnect
CCLCMsg_SplitPlayerDisconnect
CCLCMsg_VoiceData
CCommand::Tokenize: Encountered command which overflows the argument buffer.. Clamped!
CCommand::Tokenize: Encountered command which overflows the tokenizer buffer.. Skipping!
CDeltaCalculator::FieldCalcDelta fromBits
CDeltaCalculator::FieldCalcDelta toBits
CEntityIndex
CEntityMsg
CEntitySystem::BuildEntityNetworking (%s build of %s) took %.3f msecs for %d out of %d classes
CF9Hc
CFieldMetadataPacker::AddOrUpdateFieldMetadata:  adding/updating %s with invalid array count %d!
CFieldMetadataPacker:  list not sorted
CFieldPath::Path_t *CFieldPath::GetPathData(int)
CFieldPath::Path_t *CFieldPath::Path_AddToTail(const CFieldPath::Path_t &)
CFieldPath::Path_t CFieldPath::Path_PopLast()
CFieldPath tracing ended
CFieldPath tracing started
CFlattenedSerializer::ApplyOverrides_R
CFlattenedSerializer::BuildDeltaProperties using %d bytes for encoding %d/%s
CFlattenedSerializer::BuildOverrideField:  Problem initializing replacement field %s::%s
CFlattenedSerializer::Decode
CFlattenedSerializer::Decode array index %d out of range %d for field %s::%s [%d]
CFlattenedSerializer::DumpSerializedEntityToConsole
CFlattenedSerializer::Encode failure for entity %d because buffer of %d bytes overflowed
CFlattenedSerializer::Encode writeBuf
CFlattenedSerializer::[ent %d] Decode path %s array index %d out of range %d for field %s::%s [%d]
CFlattenedSerializer::MergeDeltas fieldDataBuf
CFlattenedSerializer::MergeDeltas: invalid parameters passed.
CFlattenedSerializer::MergeDeltas: newBits
CFlattenedSerializer::MergeDeltas: oldBits
CFlattenedSerializer::MergeDeltas: overflowed on flattened serializer '%s'.
CFlattenedSerializer::RemoveArrayElementsOutsideOfArrayMetadataBounds
CFlattenedSerializers_FS::BuildMergedSerializedEntity fieldDataBuf
CFlattenedSerializers_FS::SpewSerializer: called with NULL serializer!!!
CFlattenedSerializer::ValidateSerializedEntity
CFlattenedSerializer::WriteFieldList
CFlattenedSerializer::WriteFieldList fieldDataBuf
CHandle<
ChangeAccessorFieldPathIndex_t
ChangeCallbackOnChange
ChangeCallbackOnChangeOrCreate
channel
cheat
CHECK failed: allow_unknown_field_ || reserved_field: 
CHECK failed: (backup_bytes_) == (0): 
CHECK failed: backup_bytes_ == 0 && buffer_.get() != NULL: 
CHECK failed: (buffer_size) >= (0): 
CHECK failed: (buffer_used_) == (buffer_size_): 
CHECK failed: builder_: 
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): 
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): 
CHECK failed: !coded_out.HadError(): 
CHECK failed: (count) >= (0): 
CHECK failed: (count) <= (buffer_used_): 
CHECK failed: (count) <= (last_returned_size_): 
CHECK failed: (count) <= (target_->size()): 
CHECK failed: !descriptor_: 
CHECK failed: dest: 
CHECK failed: dynamic.get() != NULL: 
CHECK failed: enum_type_->value_count(): 
CHECK failed: fallback_database_ == NULL: 
CHECK failed: field->cpp_type() == cpp_type || (field->cpp_type() == FieldDescriptor::CPPTYPE_ENUM && cpp_type == FieldDescriptor::CPPTYPE_INT32): 
CHECK failed: field->is_repeated(): 
CHECK failed: (field->message_type()) == (desc): 
CHECK failed: field != NULL: 
CHECK failed: (field->options().ctype()) == (ctype): 
CHECK failed: !file_: 
CHECK failed: file && file->pool_: 
CHECK failed: !file->finished_building_: 
CHECK failed: file_->finished_building_: 
CHECK failed: file()->finished_building_ == true: 
CHECK failed: file != NULL: 
CHECK failed: file->pool_->lazily_build_dependencies_: 
CHECK failed: finished_building_ == true: 
CHECK failed: (from.GetDescriptor()) == (descriptor): 
CHECK failed: (&from) != (to): 
CHECK failed: generated_database_->Add(encoded_file_descriptor, size): 
CHECK failed: has_default_value(): 
CHECK failed: i >= 0: 
CHECK failed: !is_closed_: 
CHECK failed: IsInitialized(): 
CHECK failed: is_prototype(): 
CHECK failed: iter == extensions_.end(): 
CHECK failed: iter != extensions_.end(): 
CHECK failed: (last_returned_size_) > (0): 
CHECK failed: (message1->GetReflection()) == (this): 
CHECK failed: (message2->GetReflection()) == (this): 
CHECK failed: (message_type) == (field->message_type()): 
CHECK failed: (min_bytes) <= (std::numeric_limits<size_t>::max() - kHeaderSize): 
CHECK failed: mutex_ == NULL: 
CHECK failed: !name_: 
CHECK failed: !once_: 
CHECK failed: (option_field->type()) == (FieldDescriptor::TYPE_GROUP): 
CHECK failed: options->AppendPartialToString(&buf): 
CHECK failed: options_descriptor: 
CHECK failed: options->ParsePartialFromString(buf): 
CHECK failed: original_uninterpreted_options_field != NULL: 
CHECK failed: !out.HadError(): 
CHECK failed: (output->ByteCount()) == (expected_endpoint): 
CHECK failed: output->message_prototype != NULL: 
CHECK failed: prototype != NULL: 
CHECK failed: result != NULL: 
CHECK failed: (size) <= (6): 
CHECK failed: s != NULL: 
CHECK failed: target_ != NULL: 
CHECK failed: (temp[0]) == ('1'): 
CHECK failed: (temp[size-1]) == ('5'): 
CHECK failed: this == other_mutator: 
CHECK failed: (to->GetDescriptor()) == (descriptor): 
CHECK failed: (type) == (WireFormatLite::TYPE_ENUM): 
CHECK failed: (type) != (WireFormatLite::TYPE_ENUM): 
CHECK failed: (type) != (WireFormatLite::TYPE_GROUP): 
CHECK failed: (type) != (WireFormatLite::TYPE_MESSAGE): 
CHECK failed: type == WireFormatLite::TYPE_MESSAGE || type == WireFormatLite::TYPE_GROUP: 
CHECK failed: uninterpreted_options_field != NULL: 
CHECK failed: value != NULL: 
CHECK failed: (value.size()) <= (kint32max): 
classes
class_id
class_name
	Class                    = '%s'
class_t
clc_BaselineAck
clc_ClientInfo
clc_ClientMessage
clc_CmdKeyValues
clc_FileCRCCheck
clc_ListenEvents
clc_LoadingProgress
cl_cmdrate
CLC_Messages
clc_Move
clc_RequestPause
clc_RespondCvarValue
clc_ServerPing
clc_ServerStatus
clc_SplitPlayerConnect
clc_SplitPlayerDisconnect
clc_VoiceData
ClearField
client
clientbitcount
clientcmd_can_execute
Client Messages
clients
client_streaming
cl_interp
cl_interp_ratio
close
closed by peer
close() failed: 
CloseSocket
Closing Steam Net Connection on socket '%s' to %s, handle #%u (%d %s)
cl_updaterate
CMemAllocSystemInitialize
CMergedEntityOffsetBuilder::Expecting at least one bit in offset
.CMsg_CVars"
CMsg_CVars
.CMsg_CVars.CVar
CMsgIPCAddress
.CMsgIPCAddress
CMsgPlayerInfo
CMsgQAngle
.CMsgQAngle
.CMsgQAngle"
.CMsgQAngle"4
CMsgRGBA
CMsgServerNetworkStats
.CMsgServerNetworkStats.Player
.CMsgServerNetworkStats.Port
CMsgServerPeer
.CMsgServerPeer"/
CMsgVector
.CMsgVector
CMsgVector2D
CMsgVoiceAudio
.CMsgVoiceAudio
CNetChan::ProcessConnectionIDHeader() Connection ID with system "%s" reset using id %X:%X. Was %X:%X
CNetChan::ProcessConnectionIDHeader() received connection id header %X %X from "%s"
CNetChan::ProcessPacketHeader() Connection ID with system "%s" finalized as %X:%X
CNetChan %p "%s" is naively talking to self
CNetChan::SendNetMessage: SerializeAbstract for message %s failed!
CNetChan::SendNetMessage: Trying to send message %s, which is an invalid category for this channel!
CNetChan::SendNetMessage: Unable to send message %s, buffer is full!
CNetChan::SetMaxBufferSize: cant preserve exiting data %i>%i.
CNetChan::Setup for %s
CNetChan_TransmitBits->send
CNETMsg_Disconnect
CNETMsg_NOP"'
CNETMsg_SetConVar
CNETMsg_SignonState
CNETMsg_SpawnGroup_Load
 CNETMsg_SpawnGroup_LoadCompleted
!CNETMsg_SpawnGroup_ManifestUpdate
"CNETMsg_SpawnGroup_SetCreationTick
CNETMsg_SpawnGroup_Unload
CNETMsg_SplitScreenUser
CNETMsg_StringCmd
CNETMsg_Tick
CNetworkedQuantizedFloat
CNetworkFieldChangedEventQueue::QueueChange:  ran out of scratch data space!!!
CNetworkMessages::AllocateAndCopyConstructNetMessageAbstract unable to allocate unknown message type!
CNetworkMessages::AllocateUnserializedMessage unable to allocate unknown message type!
CNetworkMessages::DeallocateUnserializedMessage unable to deallocate unknown message type!
CNetworkMessages::FindOrCreateGroupId: Too many network groups!
CNetworkMessages::FindOrCreateNetMessage: It is illegal to register new net messages after serialization!
CNetworkMessages::FindOrCreateNetMessage: Message %s is expected to have already been registered!
CNetworkMessages::Serialize attempted to serialize a non-serializeable message [%s]!
CNetworkMessages::Unserialize encountered unknown network message type %u!
CNetworkSerializer::Init:  Couldn't find field %s in iterator for %s
CNetworkSerializer: Unable to find network encoder named %s!
CNetworkSystem::BufferToBufferDecompress with improperly sized dest buffer (%u in, %llu needed)
CNetworkSystem::BufferToBufferDecompress with improperly sized dest buffer (%u in, %u needed)
CNetworkSystem::FlushPeerToPeerChannels
CNetworkSystem::Init() m_SteamAPIContextClient.Init ( ) failed (no Steam?)
CNetworkSystem::SendToNsAddress ISteamNetworkingSockets::SendMessageToConnection %s returned %d when sending %d bytes
codec
code_filename
	code_path
	CODE_SIZE
color
Color
COLORCORRECTION_VERSION_1
command
CommandLine
command_number
.comment
  Comment started here.
compressed 
ComputeDepth
computer_guid
- Config: %s, %i connections
ConfigurationSystem_001
configvalue.cpp
 conflicts with an existing enum type.
 conflicts with an existing field.
 conflicts with an existing nested message type.
 conflicts with an existing oneof type.
" conflicts with field "
" conflicts with the existing symbol "
ConnectByIPv4Address(%s) failed
Connected loopback %s=%x@%s <-> %s=%x@%s
ConnectP2P(%s) failed
ConnectToHostedDedicatedServer(%s) failed
Constructing fake local field from metadata %s::%s in %s
).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
 contains invalid 
[context entity 0x%p]
ConVarRef %s doesn't point to an existing ConVar
convars
ConVar(%s) defined with infinite float value (%s)
cookie
coord
coord_integral
Could not create an instance of 
Could not find type "
Couldn't parse default value "
Couldn't resolve offset %u in %s at path (%d = '%s')
Couldn't resolve offset %u in %s at path %s
Couldn't write error buffer, delete error###.dat files to make space
 count(%d)
CPPTYPE_BOOL
CPPTYPE_DOUBLE
CPPTYPE_ENUM
CPPTYPE_FLOAT
CPPTYPE_INT32
CPPTYPE_INT64
CPPTYPE_STRING
CPPTYPE_UINT32
CPPTYPE_UINT64
	cpu_usage
_C@q"
CreateHostedDedicatedServerListenSocket for socket '%s' failed /+/ port %u vport %d
create_on_client
CreateSerializedEntityBlob:  removing %s from field path list, culled by another change.
creationsequence
CSerializedEntities::CompareSerializedEntities field %d path's differ from '%s' to '%s'
CSerializedEntities::CompareSerializedEntities from field %s not present in to
CSerializedEntities::CompareSerializedEntities to field %s not present in from
CSerializedEntities::CompareSerializedEntities:  to pointer is %s and from pointer is %s
csharp_namespace
CStackPair::CStackPair(const CFieldPath &, const CFlattenedSerializer *, uint8 *, uint8 *, int, NetworkSerializationMode_t, bf_read *, bool, CNetworkFieldChangedEventQueue *, int)
CStrongHandle
CSVCMsg_BSPDecal
CSVCMsg_ClassInfo
.CSVCMsg_ClassInfo.class_t
CSVCMsg_ClearAllStringTables
CSVCMsg_CmdKeyValues
CSVCMsg_CreateStringTable
CSVCMsg_CrosshairAngle
CSVCMsg_FixAngle
CSVCMsg_FlattenedSerializer
CSVCMsg_FullFrameSplit
CSVCMsg_GameEvent
.CSVCMsg_GameEvent"9
.CSVCMsg_GameEvent.key_t
CSVCMsg_GameEventList
.CSVCMsg_GameEventList.key_t"
 CSVCMsg_GameSessionConfiguration
CSVCMsg_GetCvarValue
CSVCMsg_HLTVStatus
CSVCMsgList_GameEvents
.CSVCMsgList_GameEvents.event_t
CSVCMsgList_UserMessages
CSVCMsg_Menu
CSVCMsg_PacketEntities
CSVCMsg_PacketReliable
CSVCMsg_PeerList
CSVCMsg_Prefetch
CSVCMsg_Print
CSVCMsg_SendTable
.CSVCMsg_SendTable.sendprop_t
CSVCMsg_ServerInfo
CSVCMsg_ServerSteamID
CSVCMsg_SetPause
CSVCMsg_SetView
CSVCMsg_Sounds
.CSVCMsg_Sounds.sounddata_t
CSVCMsg_SplitScreen
CSVCMsg_StopSound
CSVCMsg_TempEntities
CSVCMsg_UpdateStringTable
.CSVCMsg_UserMessage"
CSVCMsg_UserMessage
CSVCMsg_VoiceData
CSVCMsg_VoiceInit
CTransform
CTSListBase::CTSListBase()
CTSListBase: Misaligned list
CTSQueue<CNetworkMessageSignalQueue<CEventIDManager_NetChan, BogusType_t>::QueuedMessage_t, false>::CTSQueue() [T = CNetworkMessageSignalQueue<CEventIDManager_NetChan, BogusType_t>::QueuedMessage_t, bTestOptimizer = false]
CTSQueue corruption
CTSQueue: Misaligned queue
CTSQueue::Node_t *CTSQueue<CNetworkFieldChangedEventQueueChangeInfo_t, false>::Push(CTSQueue::Node_t *) [T = CNetworkFieldChangedEventQueueChangeInfo_t, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<CNetworkMessageSignalQueue<CEventIDManager_NetChan, BogusType_t>::QueuedMessage_t, false>::Push(CTSQueue::Node_t *) [T = CNetworkMessageSignalQueue<CEventIDManager_NetChan, BogusType_t>::QueuedMessage_t, bTestOptimizer = false]
ctype
CType
culling for client %d of %d rules
cull rule %d:  %s
cull rule %d:  %s -> %s
CUtlBinaryBlock
CUtlLeanVectorImpl::IndexType_t CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<CFieldPath::Path_t, 6, short>, CFieldPath::Path_t, short>::AddMultipleToTail(int) [B = CUtlLeanVectorFixedGrowableBase<CFieldPath::Path_t, 6, short>, T = CFieldPath::Path_t, I = short]
CUtlLeanVectorImpl::IndexType_t CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<unsigned int, 3, short>, unsigned int, short>::AddMultipleToTail(int) [B = CUtlLeanVectorFixedGrowableBase<unsigned int, 3, short>, T = unsigned int, I = short]
CUtlLinkedList overflow! (exhausted index range)
CUtlLinkedList overflow! (exhausted memory allocator)
CUtlMemoryPoolBase: Cannot specify 0 elements to grow each time!
CUtlMemoryPoolBase::CUtlMemoryPoolBase(int, int, int, MemoryPoolGrowType_t, const char *)
CUtlRBTree overflow with %u elements!
CUtlString
CUtlStringToken
CUtlSymbol
CUtlSymbolLarge
[c:%u:%u]
[C:%u:%u]
	cvar_name
cvars
__cxa_atexit
__cxa_finalize
__cxa_guard_acquire
__cxa_guard_release
__cxa_pure_virtual
[+%d]
 D-	(@
%d % 5d: %-20s: %32.32s %128.128s
%d % 5d % 5d: %-20s (skip): %s %s: %s
d6@yc
d6@yc	
d6@yC
.data
databytes
data_compressed
- Data:    net total out  %.1f, in %.1f kB/s
.data.rel.ro
data_table_name
%d bits
%d.%d.%d
%d.%d.%d.%d:%d
%d (%d peak) fields allocated in mempool
deactivated
DebugCallback
DebugTextureInfo001
Decals
decal_texture_index
decode
	dedicated
default
 [default = $0
	DefaultBufferType        = %d
default_value
Default value for an enum field must be an identifier.
 ( def. "%s" )
DegreeEuler
delay_value
"DeleteMapValue"
delta >= 1u
delta_from
dependency
deprecated
DescriptorProto
DescriptorProtosH
descriptors
descriptor_t
(DG9h
DIALOG_ASKCONNECT
DIALOG_ENTRY
DIALOG_MENU
DIALOG_MSG
DIALOG_TEXT
dialog_type
DIALOG_TYPE
%d Ignoring %s [%s], was in previous state only, now outside of valid range for field
Direct UDP connect
disabled
Disassociating NetChan %s (%s) from Steam Net Connection handle #%u
(%d) is > avg (%.2f) with stddev*scale (%.2f * %.2f) and threshold (%.2f)
Display info about a message (by classname or id)
%d Metadata %s [utlvector count]:  %d
Don't bother compressing packets below this size.
Don't lookup extension types if they aren't present (1). 
Don't lookup extension types if they aren't present (2). 
DotaCardGameClient_001
double
double_value
- %d Scratch Buffers in use (%llu bytes)
%d %s: %s at offset %d, 0x%p array %s struct %s: index %d array size %d in %s
%d,'%s','%s',%d
%d %s %u, 
dti_client_%02d%02d%02d-%02d%02d%02d.csv
dti_report_stddev_threshold
DTI reset
DTI %s
DTI: wrote client stats into %s.
dt_name
%d total.
.dummy
Dump non-loopback udp only
Dump UDP packets summary to console
duplicate
Duplicate entry %s already exists in field dict!
%d == %u: %s
%d Writing %s [%s], was in previous state only
%d Writing %s [%s], was in %s
.dynamic
__dynamic_cast
.dynstr
.dynsym
EconItemToolModel_001
E)d~A
_edata
.eh_frame
.eh_frame_hdr
"e" must be followed by exponent.
enabled
Enable P2P via ISteamNetworkingMessages.
encode_flags
 encoder(%s)
Encountered 2 fields "%s" and "%s" in struct "%s" using the same change callback with different change callback types!
Encountered message on net channel %s with an invalid network category! [net message %s]
encryptedPayloadKey
__end__
End-of-file inside block comment.
ENetworkDisconnectionReason
.ENetworkDisconnectionReason"
EngineServiceMgr001
Entities
entity_data
entityfiltername
entity_index
entitylumpname
Entry
EnumDescriptorProto
EnumOptions
EnumReservedRange
Enums must contain at least one value.
	enum_type
Enum type "
Enum value "$0" is reserved.
Enum value "$0" is reserved multiple times.
Enum value "$0" uses reserved number $1.
EnumValueDescriptorProto
Enum value in map must define 0 as the first value.
EnumValueOptions
EnvironmentMapBuilder_001
EQueryCvarValueStatus
"eQueryCvarValueStatus_CvarNotFound
#eQueryCvarValueStatus_CvarProtected
eQueryCvarValueStatus_NotACvar
!eQueryCvarValueStatus_ValueIntact
__errno
->error
Error
ERROR
Error buffer for %s written to %s
Error: Components count + networkable data type must be the same for all instances of network field serializer (%s)!
Error: Duplicate network array field serializer registered (%s)!
Error: Duplicate network field change callback registered (%s)!
Error: Duplicate network field serializer registered (%s)!
ERROR: Field %s::%s unable to deduce unserializer for type (%s)!
Error installing message handlers into a net channel: missing handlers in channel %s!
Error parsing net channel %s, net message %s
Error parsing text-format 
Error processing network message %s! Channel is closing!
ERROR: Schema registration error - class '%s' is not marked as MModuleLocalTypeScope but contains member '%s' with locally-scoped type '%s'
ERROR: Schema registration error - class '%s' is not marked as MModuleLocalTypeScope but derives from locally-scoped class '%s'
ERROR! SendData reliable data too big (%i)
Error while parsing option value for "
ESplitScreenMessageType
.ESplitScreenMessageType
event
eventid
event_mask
event_name
events
Events
eventsource
EventSystem001
event_t
Exceeded max number proxies in CFlattenedSerializer::BuildHierarchy()
exclude
excluding
Executing queued command: '%s'
Expanded map entry type 
Expect a decimal number, got: 
    Expected  : 
  Expected : 
Expected "
Expected double, got: 
Expected eight hex digits up to 10ffff for \U escape sequence
Expected four hex digits for \u escape sequence.
Expected hex digits for escape sequence.
Expected identifier, got: 
Expected integer, got: 
Expected integer or identifier, got: 
Expected string, got: 
Explicit default values are not allowed in proto3.
EXPORTSYSTEM_INTERFACE_VERSION_001
extend .$0 {
extendee
	extension
Extension "
Extension conflicts with extension already in database: extend 
Extension factory's GetPrototype() returned NULL for extension: 
Extension not found.
Extension number $0 has already been used in "$1" by extension "$2".
Extension number $0 has already been used in "$1" by extension "$2" defined in $3.
Extension numbers cannot be greater than $0.
Extension numbers must be positive integers.
extension_range
ExtensionRange
Extension range $0 to $1 includes field "$2" ($3).
Extension range $0 to $1 overlaps with already-defined range $2 to $3.
Extension range $0 to $1 overlaps with reserved range $2 to $3.
Extension range end number must be greater than start number.
ExtensionRangeOptions
Extension ranges are not allowed in proto3.
Extensions in proto3 are only allowed for defining options.
Extensions of MessageSets must be optional messages.
Extensions to non-lite types can only be declared in non-lite files.  Note that you cannot extend a non-lite type to contain a lite type, but the reverse is allowed.
Extra connection [%s]:
E@y*i
f3@ygk@9
F@9H,
fA9hf
FA9iF
failed to construct fake field from metadata %s::%s in %s
Failed to install message handler for message %s in channel %s!
Failed to open P2P network socket '%s'
Failed to open UDP network socket '%s'
: failed to parse contents
Failed to set SteamNetSockets option '%s'
Failed to start listening for SDR on port %d.  Waiting and will retry
Failed to unserialize message %s: expected message ID %u, encountered %u!
fakeplayer
false
false"
False
FALSE
FastHexToBuffer() wants non-negative integers, not 
FATAL
FATAL ERROR: unable to register all schema data: %s
FB9hF
fc=%d, m=%d, sum=%d, bits=%u
FCVAR_NEVER_AS_STRING
fflush
field
  Field       : 
Field "
Field: 
Field "$0" uses reserved number $1.
FieldDescriptorProto
FieldDescriptorProto.extendee not set for extension field.
FieldDescriptorProto.extendee set for non-extension field.
FieldDescriptorProto.oneof_index $0 is out of range for type "$1".
FieldDescriptorProto.oneof_index should not be set for extensions.
Field does not match message type.
  field is fixed sized array size %d
Field is not a map field.
Field is repeated; the method requires a singular field.
Field is singular; the method requires a repeated field.
  field is using array manipulator, current size returned %d
Field name "$0" is reserved.
Field name "$0" is reserved multiple times.
Field names match, but types do not to match %s::%s is type %s vs. type %s
", field number 
Field number $0 has already been used in "$1" by field "$2".
Field numbers $0 through $1 are reserved for the protocol buffer library implementation.
Field numbers cannot be greater than $0.
Field numbers must be positive integers.
FieldOptions
fieldpath_%02d%02d%02d-%02d%02d%02d.csv
FieldPathEncodeFinish
fields
field_serializer_name_sym
field_serializer_version
field %s had different encoding for %d bits
field %s had different spans [%d -> %d (%d)] vs. [%d -> %d (%d)]
Field %s has inverted min/max values![%f->%f]
fields_index
Fields in the same oneof must be defined consecutively. "$0" cannot be defined before the completion of the "$1" oneof definition.
FieldSize
field %s not present in %s
Fields of oneofs must themselves have label LABEL_OPTIONAL.
Field %s::%s cannot be networked unless the file containing type %s has its $SchemaFile added to the VPC! (For a resource, this is the DECLARE_RESOURCE_TYPE macro.)
Field "%s::%s" requested to be serialized as unknown type "%s"!
Field %s::%s requested unknown user array network serializer %s!
Field "%s::%s" requested unknown user network serializer %s!
Field %s::%s requested unknown user network serializer %s!
Field %s::%s specified an unknown field change callback %s!
Field %s tried to quantize an out-of-range value (%f, range is %f->%f) clamping.
Field %s tried to quantize an out-of-range value (%f, range is %f->%f), clamping.
Field %s was flagged QFE_ENCODE_INTEGERS_EXACTLY, but didn't specify enough bits, upping bitcount from %d to %d for range [%f->%f]
Field %s was flagged to both round up and down, these flags are mutually exclusive [%f->%f]
Field %s was flagged to encode zero exactly, but min/max range doesn't span zero [%f->%f]
    Field type: 
Field with message or enum type missing type_name.
Field with primitive type has type_name.
File already exists in database: 
File appears to be in generated pool but wasn't registered: 
FileDescriptorProto
FileDescriptorSet
File is already registered: 
filename
FileOptions
File recursively imports itself: 
Files that do not use optimize_for = LITE_RUNTIME cannot import files which do use this option.  This file is not lite, but it imports "
Files with optimize_for = LITE_RUNTIME cannot define services unless you set both options cc_generic_services and java_generic_sevices to false.
filesystem_stdio
.fini_array
First argument to SwapFields() (of type "
First argument to Swap() (of type "
flags
flattenedserializer.cpp
flattenedserializers.cpp
FlattenedSerializersVersion001
float
float32
- flow: in %.1f, out %.1f kB/s
fltx4
FontManager_001
.foo = value".
Forces larger payloads.
" for field "
format
For network encoding stats, provide a notes field if field change count is above this many standard deviations for the average field change counts for the serializer.
" for option "
For servers behind NAT/DHCP meant to be exposed to the public internet, this is the public facing ip address string: ("x.x.x.x" )
", found "
Found invalid proto option data for: 
fprintf
fp_trace
fputs
friends_id
friends_name
, from: 
from array size %d != to size %d
from missing
G6h6@
G6hBB9
g6hn@
g6hRB9
g6hz@
g6i^@
G6v.@
game_dir
gamemode
GameResourceServiceClientV001
GameResourceServiceServerV001
game_session_config
game_session_manifest
#GameUI_ClientConsistencyFail
#GameUI_ClientDifferentMap
#GameUI_ClientNoMap
#GameUI_ClientUnableToCRCMap
%#GameUI_Disconnect_BadClientDeltaTick
##GameUI_Disconnect_BadRelayPassword
$#GameUI_Disconnect_BadServerPassword
'#GameUI_Disconnect_BadSpectatorPassword
#GameUI_Disconnect_BanAdded
$#GameUI_Disconnect_ConnectionFailure
!#GameUI_Disconnect_ConnectionLost
%#GameUI_Disconnect_ConnectionOverflow
%#GameUI_Disconnect_ConnectionTimedout
%#GameUI_Disconnect_CreateServerFailed
"#GameUI_Disconnect_DeltaEntMessage
'#GameUI_Disconnect_DifferentClassTables
#GameUI_Disconnect_Disconnected
 #GameUI_Disconnect_ExitingEngine
#GameUI_Disconnect_HLTVDirect
!#GameUI_Disconnect_HLTVRestricted
#GameUI_Disconnect_HLTVStop
"#GameUI_Disconnect_HLTVUnavailable
#GameUI_Disconnect_Host_EndGame
 #GameUI_Disconnect_InternalError
&#GameUI_Disconnect_InvalidMessageError
#GameUI_Disconnect_KickBanAdded
#GameUI_Disconnect_Kicked
#GameUI_Disconnect_LeavingSplit
*#GameUI_Disconnect_LocalProblem_ManyRelays
-#GameUI_Disconnect_LocalProblem_NetworkConfig
%#GameUI_Disconnect_LocalProblem_Other
!#GameUI_Disconnect_LoopDeactivate
(#GameUI_Disconnect_LoopLevelLoadActivate
#GameUI_Disconnect_LoopShutdown
$#GameUI_Disconnect_MessageParseError
#GameUI_Disconnect_NoMoreSplits
&#GameUI_Disconnect_NoPeerGroupHandlers
#GameUI_Disconnect_NoSpectators
)#GameUI_Disconnect_PureServer_ClientExtra
&#GameUI_Disconnect_PureServer_Mismatch
!#GameUI_Disconnect_RejectedByGame
##GameUI_Disconnect_ReliableOverflow
(#GameUI_Disconnect_RemoteProblem_BadCert
)#GameUI_Disconnect_RemoteProblem_BadCrypt
&#GameUI_Disconnect_RemoteProblem_Other
(#GameUI_Disconnect_RemoteProblem_Timeout
%#GameUI_Disconnect_ReplayIncompatible
$#GameUI_Disconnect_Request_HLTVRelay
!#GameUI_Disconnect_Request_HSIdle
#GameUI_Disconnect_Server
%#GameUI_Disconnect_ServerIncompatible
%#GameUI_Disconnect_ServerInfoOverflow
!#GameUI_Disconnect_ServerShutdown
 #GameUI_Disconnect_SnapshotError
##GameUI_Disconnect_SnapshotOverflow
 #GameUI_Disconnect_SoundsMessage
,#GameUI_Disconnect_Splitpacket_Send_Overflow
)#GameUI_Disconnect_SteamDeny_BadAntiCheat
!#GameUI_Disconnect_SteamDeny_Misc
#GameUI_Disconnect_SteamDropped
 #GameUI_Disconnect_SteamIDBanned
#GameUI_Disconnect_SteamIDInUse
#GameUI_Disconnect_SteamInUse
#GameUI_Disconnect_SteamLogon
!#GameUI_Disconnect_SteamOwnership
#GameUI_Disconnect_SteamTicket
#GameUI_Disconnect_SteamTimeOut
#GameUI_Disconnect_SteamVAC
%#GameUI_Disconnect_StringTableMessage
!#GameUI_Disconnect_TempEntMessage
#GameUI_Disconnect_TickMessage
#GameUI_Disconnect_TimedOut
#GameUI_Disconnect_Unusual
#GameUI_Disconnect_User
#GameUI_Disconnect_UserCmd
#GameUI_ServerAuthDisabled
#GameUI_ServerCDKeyAuthInvalid
#GameUI_ServerNoLobby
 #GameUI_ServerRejectBadChallenge
#GameUI_ServerRejectBadPassword
#GameUI_ServerRejectBanned:E
!#GameUI_ServerRejectFailedChannel
"#GameUI_ServerRejectInvalidCertLen
%#GameUI_ServerRejectInvalidConnection
%#GameUI_ServerReject_InvalidKeyLength
&#GameUI_ServerRejectInvalidReservation
'#GameUI_ServerRejectInvalidSteamCertLen
#GameUI_ServerRejectLANRestrict
#GameUI_ServerRejectNewProtocol
#GameUI_ServerRejectOldProtocol
#GameUI_ServerRejectServerFull
#GameUI_ServerRejectSteam
#GameUI_ServerRequireSteams
GameUIService_001
GatherAllFieldOffsets_R:  local offset of %s::%s %u is too large (%u max)
GCC: (GNU) 4.9.x 20150123 (prerelease)
GeneratedCodeInfo
Generated new connection id %X for use with remote system "%s"
generated_proto/androidarm64/netmessages.pb.cc
generated_proto/androidarm64/networkbasetypes.pb.cc
generated_proto/androidarm64/networksystem_protomessages.pb.cc
generic
Generic
GetBitRange( %u -> %u ) end is before or same as start
GetBool
GetDefaultMiniDumpTypeFlags
GetDouble
GetFloat
gethostbyname
gethostname
GetInt32
GetInt64
"GetMapData"
GetMessage
GetPathData failed for read only CFieldPath
GetRawRepeatedField
"GetRawRepeatedField"
GetRepeatedBool
GetRepeatedDouble
GetRepeatedEnumValue
GetRepeatedFloat
GetRepeatedInt32
GetRepeatedInt64
GetRepeatedMessage
GetRepeatedString
GetRepeatedStringReference
GetRepeatedUInt32
GetRepeatedUInt64
GetResourceManifestCount
GetResourceManifests
GetString
GetStringReference
GetUInt32
GetUInt64
.gnu_debuglink
.gnu.version
.gnu.version_r
go_package
Got ISteamNetworkingSockets user interfaces from standalone lib
Got ISteamNetworkingSockets user interfaces from steam client
.got.plt
g_pFlattenedSerialized->Decode() called for entity with procedural fields, but no INetworkProceduralDataHelper *pDataHelper passed into to API!!!
g_pFlattenedSerialized->Encode() called for entity with procedural fields, but no INetworkProceduralDataHelper *pDataHelper passed into to API!!!
g_pFlattenedSerialized->GetFieldNameProcedural() called for entity with procedural fields, but no INetworkProceduralDataHelper *pDataHelper passed into to API!!!
g_pFlattenedSerialized->ReadFieldList() called for entity with procedural fields, but no INetworkProceduralDataHelper *pDataHelper passed into to API!!!
g_pMemAlloc
g_pSteamGameServerNetworkingSockets
g_pSteamNetworkingMessages
g_pSteamNetworkingSockets
g_pSteamNetworkingUtils
g_pThreadPool
group
[Group]
[GroupID]
	Group ID                 = %u
	Group                    = '%s'
Groups are not supported in proto3 syntax.
g_Tier1_BitWriteMasks
g_Tier1_CRC64Table
[g:%u:%u]
[G:%u:%u]
h2@9)
H6h>@
H6hV@
H6in@
	H@9)
	H@9	
H@9?	
H@90H@9
	h@9h
h*@9h/
(H@9h
H@9/H@9
h"@9i
	H@9i"
H`@9iFG9
*H@9j
*H@9J
H@9J(
H@9k	
-H@9m
h"@9)QG
h"A9)]F
HammerMapLoader001
HasField
.hash
" has no field named "
" has not been loaded.
" has no value named "
h*A)t
h&B)(
hB@9`
hB@9(
hB@9)EF
h"B9h
hB@9h
h"B9H
hB@9H
*h~B9i
hB@9t
hbB9	
hbB9h
hC@9h
HelpSystem_001
Hex and octal numbers must be integers.
hF@9)
hf@9h
hF@9h
=hFG9
high_value
*hJ@9
hJ@9(
hJ@9h
hJ@9H
hj)xh"
h*@)K
host_computationtime
"host_computationtime_std_deviation
!host_framestarttime_std_deviation
host_frametime
host_frametime_std_deviation
Host game server ip
hostip
host_limitlocal
	host_loss
hostname
	host_name
HostStateMgr001
How long p2p connection requests should linger before we completely ignore them
HS@9(
HS@9h
hv@9)
hv@9)}D
hV@9h
hV@9H
hwB9w
h*x* 
h)x	H@9
h*x*H@9
h;@y)
h*@y_
h"@yi
	*	i*
i)8i&
	i@9?
i@9+a@9_
	i@9	h
)I@9I
i"@9JQG
i9xh>@yv:
*i~B9)
i"B9i
ib@9j
ibB9h
ibB9k
i*B)h
I CUtlLinkedList<CNetChan *, int, false, int, CUtlMemory<UtlLinkedListElem_t<CNetChan *, int>, int> >::AllocInternal(bool) [T = CNetChan *, S = int, ML = false, I = int, M = CUtlMemory<UtlLinkedListElem_t<CNetChan *, int>, int>]
I CUtlLinkedList<CUtlKeyValuePair<CFieldPath, empty_t>, unsigned int, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CFieldPath, empty_t>, unsigned int>, unsigned int> >::AllocInternal(bool) [T = CUtlKeyValuePair<CFieldPath, empty_t>, S = unsigned int, ML = false, I = unsigned int, M = CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CFieldPath, empty_t>, unsigned int>, unsigned int>]
I CUtlLinkedList<SteamNetConnection_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<SteamNetConnection_t, int>, int> >::AllocInternal(bool) [T = SteamNetConnection_t, S = int, ML = false, I = int, M = CUtlMemory<UtlLinkedListElem_t<SteamNetConnection_t, int>, int>]
I CUtlRBTree<CNetChan::SplitPlayer_t, unsigned short, bool (*)(const CNetChan::SplitPlayer_t &, const CNetChan::SplitPlayer_t &), CUtlMemory<UtlRBTreeNode_t<CNetChan::SplitPlayer_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CNetChan::SplitPlayer_t, I = unsigned short, L = bool (*)(const CNetChan::SplitPlayer_t &, const CNetChan::SplitPlayer_t &), M = CUtlMemory<UtlRBTreeNode_t<CNetChan::SplitPlayer_t, unsigned short>, unsigned short>]
I CUtlRBTree<const CFlattenedSerializer *, int, bool (*)(const CFlattenedSerializer *const &, const CFlattenedSerializer *const &), CUtlMemory<UtlRBTreeNode_t<const CFlattenedSerializer *, int>, int> >::NewNode(const T *) [T = const CFlattenedSerializer *, I = int, L = bool (*)(const CFlattenedSerializer *const &, const CFlattenedSerializer *const &), M = CUtlMemory<UtlRBTreeNode_t<const CFlattenedSerializer *, int>, int>]
I CUtlRBTree<const NetworkFieldSerializerInfo_t *, unsigned short, bool (*)(const NetworkFieldSerializerInfo_t *const &, const NetworkFieldSerializerInfo_t *const &), CUtlMemory<UtlRBTreeNode_t<const NetworkFieldSerializerInfo_t *, unsigned short>, unsigned short> >::NewNode(const T *) [T = const NetworkFieldSerializerInfo_t *, I = unsigned short, L = bool (*)(const NetworkFieldSerializerInfo_t *const &, const NetworkFieldSerializerInfo_t *const &), M = CUtlMemory<UtlRBTreeNode_t<const NetworkFieldSerializerInfo_t *, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<CFieldPath, CDTIField, unsigned short, bool (*)(const CFieldPath &, const CFieldPath &)>::Node_t, unsigned short, CUtlMap<CFieldPath, CDTIField, unsigned short, bool (*)(const CFieldPath &, const CFieldPath &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFieldPath, CDTIField, unsigned short, bool (*)(const CFieldPath &, const CFieldPath &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<CFieldPath, CDTIField, unsigned short, bool (*)(const CFieldPath &, const CFieldPath &)>::Node_t, I = unsigned short, L = CUtlMap<CFieldPath, CDTIField, unsigned short, bool (*)(const CFieldPath &, const CFieldPath &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFieldPath, CDTIField, unsigned short, bool (*)(const CFieldPath &, const CFieldPath &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<CFieldPath, FieldResult_t, int, bool (*)(const CFieldPath &, const CFieldPath &)>::Node_t, int, CUtlMap<CFieldPath, FieldResult_t, int, bool (*)(const CFieldPath &, const CFieldPath &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFieldPath, FieldResult_t, int, bool (*)(const CFieldPath &, const CFieldPath &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<CFieldPath, FieldResult_t, int, bool (*)(const CFieldPath &, const CFieldPath &)>::Node_t, I = int, L = CUtlMap<CFieldPath, FieldResult_t, int, bool (*)(const CFieldPath &, const CFieldPath &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFieldPath, FieldResult_t, int, bool (*)(const CFieldPath &, const CFieldPath &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<CFlattenedSerializer *, CFlattenedSerializer *, unsigned short, bool (*)(CFlattenedSerializer *const &, CFlattenedSerializer *const &)>::Node_t, unsigned short, CUtlMap<CFlattenedSerializer *, CFlattenedSerializer *, unsigned short, bool (*)(CFlattenedSerializer *const &, CFlattenedSerializer *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFlattenedSerializer *, CFlattenedSerializer *, unsigned short, bool (*)(CFlattenedSerializer *const &, CFlattenedSerializer *const &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<CFlattenedSerializer *, CFlattenedSerializer *, unsigned short, bool (*)(CFlattenedSerializer *const &, CFlattenedSerializer *const &)>::Node_t, I = unsigned short, L = CUtlMap<CFlattenedSerializer *, CFlattenedSerializer *, unsigned short, bool (*)(CFlattenedSerializer *const &, CFlattenedSerializer *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFlattenedSerializer *, CFlattenedSerializer *, unsigned short, bool (*)(CFlattenedSerializer *const &, CFlattenedSerializer *const &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<const char *, CFlattenedSerializer *, int, bool (*)(const char *const &, const char *const &)>::Node_t, int, CUtlMap<const char *, CFlattenedSerializer *, int, bool (*)(const char *const &, const char *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<const char *, CFlattenedSerializer *, int, bool (*)(const char *const &, const char *const &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<const char *, CFlattenedSerializer *, int, bool (*)(const char *const &, const char *const &)>::Node_t, I = int, L = CUtlMap<const char *, CFlattenedSerializer *, int, bool (*)(const char *const &, const char *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<const char *, CFlattenedSerializer *, int, bool (*)(const char *const &, const char *const &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<const char *, CNetworkSerializer *, int, bool (*)(const char *const &, const char *const &)>::Node_t, int, CUtlMap<const char *, CNetworkSerializer *, int, bool (*)(const char *const &, const char *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<const char *, CNetworkSerializer *, int, bool (*)(const char *const &, const char *const &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<const char *, CNetworkSerializer *, int, bool (*)(const char *const &, const char *const &)>::Node_t, I = int, L = CUtlMap<const char *, CNetworkSerializer *, int, bool (*)(const char *const &, const char *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<const char *, CNetworkSerializer *, int, bool (*)(const char *const &, const char *const &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<const char *, CSchemaClassField_Dynamic *, int, bool (*)(const char *const &, const char *const &)>::Node_t, int, CUtlMap<const char *, CSchemaClassField_Dynamic *, int, bool (*)(const char *const &, const char *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<const char *, CSchemaClassField_Dynamic *, int, bool (*)(const char *const &, const char *const &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<const char *, CSchemaClassField_Dynamic *, int, bool (*)(const char *const &, const char *const &)>::Node_t, I = int, L = CUtlMap<const char *, CSchemaClassField_Dynamic *, int, bool (*)(const char *const &, const char *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<const char *, CSchemaClassField_Dynamic *, int, bool (*)(const char *const &, const char *const &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<const char *, CWriteSerializersStableVersionDatabase::OrderedVariants_t *, int, bool (*)(const char *const &, const char *const &)>::Node_t, int, CUtlMap<const char *, CWriteSerializersStableVersionDatabase::OrderedVariants_t *, int, bool (*)(const char *const &, const char *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<const char *, CWriteSerializersStableVersionDatabase::OrderedVariants_t *, int, bool (*)(const char *const &, const char *const &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<const char *, CWriteSerializersStableVersionDatabase::OrderedVariants_t *, int, bool (*)(const char *const &, const char *const &)>::Node_t, I = int, L = CUtlMap<const char *, CWriteSerializersStableVersionDatabase::OrderedVariants_t *, int, bool (*)(const char *const &, const char *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<const char *, CWriteSerializersStableVersionDatabase::OrderedVariants_t *, int, bool (*)(const char *const &, const char *const &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<const char *, empty_t, int, bool (*)(const char *const &, const char *const &)>::Node_t, int, CUtlMap<const char *, empty_t, int, bool (*)(const char *const &, const char *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<const char *, empty_t, int, bool (*)(const char *const &, const char *const &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<const char *, empty_t, int, bool (*)(const char *const &, const char *const &)>::Node_t, I = int, L = CUtlMap<const char *, empty_t, int, bool (*)(const char *const &, const char *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<const char *, empty_t, int, bool (*)(const char *const &, const char *const &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<const char *, FieldMatch_t, int, bool (*)(const char *const &, const char *const &)>::Node_t, int, CUtlMap<const char *, FieldMatch_t, int, bool (*)(const char *const &, const char *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<const char *, FieldMatch_t, int, bool (*)(const char *const &, const char *const &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<const char *, FieldMatch_t, int, bool (*)(const char *const &, const char *const &)>::Node_t, I = int, L = CUtlMap<const char *, FieldMatch_t, int, bool (*)(const char *const &, const char *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<const char *, FieldMatch_t, int, bool (*)(const char *const &, const char *const &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<const CSchemaClassInfo *, CBuildNetworkSerializerHierarchyOrder::DepthEntry_t, unsigned short, bool (*)(const CSchemaClassInfo *const &, const CSchemaClassInfo *const &)>::Node_t, unsigned short, CUtlMap<const CSchemaClassInfo *, CBuildNetworkSerializerHierarchyOrder::DepthEntry_t, unsigned short, bool (*)(const CSchemaClassInfo *const &, const CSchemaClassInfo *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<const CSchemaClassInfo *, CBuildNetworkSerializerHierarchyOrder::DepthEntry_t, unsigned short, bool (*)(const CSchemaClassInfo *const &, const CSchemaClassInfo *const &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<const CSchemaClassInfo *, CBuildNetworkSerializerHierarchyOrder::DepthEntry_t, unsigned short, bool (*)(const CSchemaClassInfo *const &, const CSchemaClassInfo *const &)>::Node_t, I = unsigned short, L = CUtlMap<const CSchemaClassInfo *, CBuildNetworkSerializerHierarchyOrder::DepthEntry_t, unsigned short, bool (*)(const CSchemaClassInfo *const &, const CSchemaClassInfo *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<const CSchemaClassInfo *, CBuildNetworkSerializerHierarchyOrder::DepthEntry_t, unsigned short, bool (*)(const CSchemaClassInfo *const &, const CSchemaClassInfo *const &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<const CSchemaType *, NetworkFieldSerializerGroup_t *, unsigned short, bool (*)(const CSchemaType *const &, const CSchemaType *const &)>::Node_t, unsigned short, CUtlMap<const CSchemaType *, NetworkFieldSerializerGroup_t *, unsigned short, bool (*)(const CSchemaType *const &, const CSchemaType *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<const CSchemaType *, NetworkFieldSerializerGroup_t *, unsigned short, bool (*)(const CSchemaType *const &, const CSchemaType *const &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<const CSchemaType *, NetworkFieldSerializerGroup_t *, unsigned short, bool (*)(const CSchemaType *const &, const CSchemaType *const &)>::Node_t, I = unsigned short, L = CUtlMap<const CSchemaType *, NetworkFieldSerializerGroup_t *, unsigned short, bool (*)(const CSchemaType *const &, const CSchemaType *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<const CSchemaType *, NetworkFieldSerializerGroup_t *, unsigned short, bool (*)(const CSchemaType *const &, const CSchemaType *const &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<CSerializerHandle_t<CFlattenedSerializer>, CDTISerializerInfo *, unsigned short, bool (*)(const CSerializerHandle_t<CFlattenedSerializer> &, const CSerializerHandle_t<CFlattenedSerializer> &)>::Node_t, unsigned short, CUtlMap<CSerializerHandle_t<CFlattenedSerializer>, CDTISerializerInfo *, unsigned short, bool (*)(const CSerializerHandle_t<CFlattenedSerializer> &, const CSerializerHandle_t<CFlattenedSerializer> &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSerializerHandle_t<CFlattenedSerializer>, CDTISerializerInfo *, unsigned short, bool (*)(const CSerializerHandle_t<CFlattenedSerializer> &, const CSerializerHandle_t<CFlattenedSerializer> &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<CSerializerHandle_t<CFlattenedSerializer>, CDTISerializerInfo *, unsigned short, bool (*)(const CSerializerHandle_t<CFlattenedSerializer> &, const CSerializerHandle_t<CFlattenedSerializer> &)>::Node_t, I = unsigned short, L = CUtlMap<CSerializerHandle_t<CFlattenedSerializer>, CDTISerializerInfo *, unsigned short, bool (*)(const CSerializerHandle_t<CFlattenedSerializer> &, const CSerializerHandle_t<CFlattenedSerializer> &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSerializerHandle_t<CFlattenedSerializer>, CDTISerializerInfo *, unsigned short, bool (*)(const CSerializerHandle_t<CFlattenedSerializer> &, const CSerializerHandle_t<CFlattenedSerializer> &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<int, INetworkMessageInternal *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short, CUtlMap<int, INetworkMessageInternal *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, INetworkMessageInternal *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<int, INetworkMessageInternal *, unsigned short, bool (*)(const int &, const int &)>::Node_t, I = unsigned short, L = CUtlMap<int, INetworkMessageInternal *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, INetworkMessageInternal *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<int, int, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short, CUtlMap<int, int, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<int, int, unsigned short, bool (*)(const int &, const int &)>::Node_t, I = unsigned short, L = CUtlMap<int, int, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<ns_address, int, int, SteamNetConnection_t::ns_address_less>::Node_t, int, CUtlMap<ns_address, int, int, SteamNetConnection_t::ns_address_less>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<ns_address, int, int, SteamNetConnection_t::ns_address_less>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<ns_address, int, int, SteamNetConnection_t::ns_address_less>::Node_t, I = int, L = CUtlMap<ns_address, int, int, SteamNetConnection_t::ns_address_less>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<ns_address, int, int, SteamNetConnection_t::ns_address_less>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<NSPacketReason_t, int, unsigned short, bool (*)(const NSPacketReason_t &, const NSPacketReason_t &)>::Node_t, unsigned short, CUtlMap<NSPacketReason_t, int, unsigned short, bool (*)(const NSPacketReason_t &, const NSPacketReason_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<NSPacketReason_t, int, unsigned short, bool (*)(const NSPacketReason_t &, const NSPacketReason_t &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<NSPacketReason_t, int, unsigned short, bool (*)(const NSPacketReason_t &, const NSPacketReason_t &)>::Node_t, I = unsigned short, L = CUtlMap<NSPacketReason_t, int, unsigned short, bool (*)(const NSPacketReason_t &, const NSPacketReason_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<NSPacketReason_t, int, unsigned short, bool (*)(const NSPacketReason_t &, const NSPacketReason_t &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned int, ConnectionStats_t, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, ConnectionStats_t, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ConnectionStats_t, int, CDefLess<unsigned int> >::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<unsigned int, ConnectionStats_t, int, CDefLess<unsigned int> >::Node_t, I = int, L = CUtlMap<unsigned int, ConnectionStats_t, int, CDefLess<unsigned int> >::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ConnectionStats_t, int, CDefLess<unsigned int> >::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<unsigned int, CSchemaType *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CSchemaType *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<unsigned int, CSchemaType *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CSchemaType *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned int, CUtlString, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CUtlString, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CUtlString, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<unsigned int, CUtlString, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CUtlString, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CUtlString, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int, CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, I = int, L = CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int, CDefLess<unsigned int> >::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<unsigned int, int, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, int, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<unsigned int, int, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, int, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned int, MetaResult_t, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int, CUtlMap<unsigned int, MetaResult_t, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, MetaResult_t, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<unsigned int, MetaResult_t, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = int, L = CUtlMap<unsigned int, MetaResult_t, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, MetaResult_t, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int>]
I CUtlRBTree<int, unsigned short, bool (*)(const int &, const int &), CUtlMemory<UtlRBTreeNode_t<int, unsigned short>, unsigned short> >::NewNode(const T *) [T = int, I = unsigned short, L = bool (*)(const int &, const int &), M = CUtlMemory<UtlRBTreeNode_t<int, unsigned short>, unsigned short>]
I CUtlRBTree<OverrideWork_t, unsigned short, bool (*)(const OverrideWork_t &, const OverrideWork_t &), CUtlMemory<UtlRBTreeNode_t<OverrideWork_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = OverrideWork_t, I = unsigned short, L = bool (*)(const OverrideWork_t &, const OverrideWork_t &), M = CUtlMemory<UtlRBTreeNode_t<OverrideWork_t, unsigned short>, unsigned short>]
I CUtlRBTree<s_t, int, bool (*)(const s_t &, const s_t &), CUtlMemory<UtlRBTreeNode_t<s_t, int>, int> >::NewNode(const T *) [T = s_t, I = int, L = bool (*)(const s_t &, const s_t &), M = CUtlMemory<UtlRBTreeNode_t<s_t, int>, int>]
I CUtlRBTree<void *, int, bool (*)(void *const &, void *const &), CUtlMemory<UtlRBTreeNode_t<void *, int>, int> >::NewNode(const T *) [T = void *, I = int, L = bool (*)(void *const &, void *const &), M = CUtlMemory<UtlRBTreeNode_t<void *, int>, int>]
idempotency_level
IdempotencyLevel
IDEMPOTENCY_UNKNOWN
IDEMPOTENT
identifier_value
	ID                       = %u
If a splitpacket has more than this many fragments, use the reliable/ack based protocol
iFG9I& 7h
If set, only net_showmsg spew for data inbound on this socket name e.g. client, server, etc.
". If this is intended, set 'option allow_alias = true;' to the enum definition.
If unable to bind to initial port, how many more to try binding.
If we get a completed splitpacket requesting acks, send the final 'success' ack this many times
)ih8Ii(8
(ih8*ij8+ik8,il8-im8.in8/io80ip81iq82ir8"ib8#ic8$id8%ie8&if8)i`8
+ih8Ki(8kbB9
	*Ii(
	*Ii+
%i %i %i %i
%i.%i.%i.%i
%i.%i.%i.%i:%i
	iix?
ii*x	
Ii+x!
	iix?!5k
	iix?!6k`
	iix?!7k
	iix?!7k 
	iix?!8k
	iix?!8k@
	iix?!9k
	iix?!9k@
	iix?!<k
	iix?!;k
	iix?!;k`
	iix?!:k
	iix?!:k`
	iix?!:k@
*ij8+ik8,il8-im8.in8/io80ip8(ih8
*iJ@9
*iJ@9)
*iJ@9	
iJ@9)
iJ@9	
*iJ@9i
iJ@9I
ijj8?
ijw8*
)ijx?
*ijx_
*ijx_!5k
)ijx?!5kA
ijx_!8k`
ijx_!9k
*ijx_!(k
ijx_!:k`
i*@)k2A)`
ikxkz@
ikyx?!6k`
)il8)
Illegal jstype for int64, uint64, sint64, fixed64 or sfixed64 field: 
-ilxLilx
" implements neither SetCachedSize() nor ByteSize().  Must implement one or the other.
Import 
import "$0";
import public "$0";
import weak "$0";
include
including
incoming
Index must be -1 for singular fields.
Index must be in range of repeated field values. 
Index out-of-bounds (field is empty).
INetChannel::SetCategories: Network category wasn't registered!
INetworkSystem::RegisterNetworkCategory: all categories must have ids between 0-31!
INetworkSystem::RegisterNetworkCategory: Attempted to register category %u twice (debug name: %s and %s)
infinity
.init_array
InitFakeField:  Couldn't find schema lookup for '%s' of type '%s'
InitFakeField:  Parser function returned false for '%s' of type '%s'
inpacket.message
InputService_001
InputStackSystemVersion001
InputSystemVersion001
input_type
"InsertOrLookupMapValue"
"/*" inside block comment.  Block comments cannot be nested.
InstallChangeCallback called with NULL callback, ignoring!!!
InstallChangeCallback ignoring duplicate change callback!!!
InstallSchemaBindings
int CUtlSortVector<int, CNetworkMessages::CPriorityLess, CUtlVector<int, CUtlMemory<int, int> > >::Find(const TKey &) const [T = int, LessFunc = CNetworkMessages::CPriorityLess, BaseVector = CUtlVector<int, CUtlMemory<int, int> >, TKey = int]
int CUtlSortVector<int, CNetworkMessages::CPriorityLess, CUtlVector<int, CUtlMemory<int, int> > >::FindLessOrEqual(const TKey &, bool *) const [T = int, LessFunc = CNetworkMessages::CPriorityLess, BaseVector = CUtlVector<int, CUtlMemory<int, int> >, TKey = int]
int CUtlSortVector<int, CNetworkMessages::CPriorityLess, CUtlVector<int, CUtlMemory<int, int> > >::Insert(const T &) [T = int, LessFunc = CNetworkMessages::CPriorityLess, BaseVector = CUtlVector<int, CUtlMemory<int, int> >]
int CUtlSortVector<int, CNetworkMessages::CPriorityLess, CUtlVector<int, CUtlMemory<int, int> > >::InsertIfNotFound(const T &) [T = int, LessFunc = CNetworkMessages::CPriorityLess, BaseVector = CUtlVector<int, CUtlMemory<int, int> >]
int CUtlString::FormatV(const char *, va_list)
Integer out of range (
Intentionally vague touch behavior for %p
interfaces.cpp
Interpreting non ascii codepoint %d.
invalid
invalid_address
Invalid control characters encountered in text.
INVALID_CPPTYPE
Invalid escape sequence in string literal.
Invalid file descriptor data passed to EncodedDescriptorDatabase::Add().
Invalid float number: 
Invalid key for map field.
Invalid message set extension.
Invalid proto descriptor for file "
Invalid public dependency index.
Invalid strings::Substitute() format string: "
Invalid symbol name: 
Invalid value for boolean field "
Invalid weak dependency index.
Invalid wire type for CPPTYPE_INT32: 
Invalid wire type for CPPTYPE_INT64: 
Invalid wire type for CPPTYPE_MESSAGE: 
Invalid wire type for CPPTYPE_UINT32: 
Invalid wire type for CPPTYPE_UINT64: 
InvokeMiniDumpHandler
inxnz@
IQuickTime001
" is already defined.
" is already defined (as something other than a package) in file "
" is already defined in "
" is already defined in file "
is_ambient
" is a message. To set the entire message, use syntax like "
" is an atomic type, not a message.
" is a repeated message. Repeated message options must be initialized using an aggregate value.
is_background_map
is_bot
is_dedicated
is_delta
is_end
is_extension
is_headless
ishltv
is_hltv
is_listenserver_host
is_loadsavegame
is_localonly
" is missing required fields: 
is_multiplayer
isnan
" is not a field or extension of message "
" is not a message type.
" is not an enum type.
" is not a proto3 enum, but is used in "
" is not a type.
" is not a valid identifier.
") is not compatible with this reflection object (which is for type "
" is not defined.
" is not defined or is not an extension of "
	is_replay
" is resolved to "
" is resolved to "(
is_sentence
" is specified along with field "
" is specified multiple times.
is_transition
)it8?}
[i:%u:%u]
[I:%u:%u]
!iv8?|
iw8i4
	i*xb
	i*xh
i)xh&{
i*xh>@yt:
i*xh>@yu:
*i,xi>@yj:
*i.xi>@yj:
i+xjj
i>@yh
Iyix8}
IyixJylx+
izhx)
J1@9k
j48	C
j48t^@
j4xH;@
j58"l
J!@9#
J@9.A
J@9B1
J@9I	
J@9iR
J]A9_
jA9hj
JA9iJ
JAJJ)
java_generate_equals_and_hash
java_generic_services
java_multiple_files
java_outer_classname
java_package
java_string_check_utf8
JB9hJ
jbHytb
j.E)l2@
ji)8k
Jih8ji(8
Jikx_
JNI_OnLoad
JNI_OnUnload
	JS_NORMAL
	JS_NUMBER
	json_name
json_name = "
	JS_STRING
jstype
JSType
jstype is only allowed on int64, uint64, sint64, fixed64 or sfixed64 fields.
jv8?)
JYix*$
JY@y)1
	*jz-
*?".k
	*_!(k
*k2@y
k2@yh
?k58D
*?k78\
?k78h
_k88i
_!)kA
K	A9lC
Key in map fields cannot be enum types.
Key in map fields cannot be float/double, bytes or message types.
key_t
KeyValueCache001
KeyValuesSystem
)kix?!4k@
	kix?!4k
K)@)j
kji8v
Km@x+
k	@y)
Kykx)
L?333? * 
L5@9m5@9
L)@9m)@9
la@9L	
L	A9mC
label
Label
LABEL_OPTIONAL
LABEL_REPEATED
LABEL_REQUIRED
landmarkname
last_cmd_number
- latency: %.1f, loss %.2f
- Latency: avg out %.2fs, in %.2fs
[lazy = true] can only be specified for submessage fields.
leading_comments
leading_detached_comments
Leaked channel %s remote %s
libandroid.so
libc++_shared.so
libc.so
libdl.so
liblog.so
libm.so
libnetworksystem.so
libnetworksystem.so.dbg
libsteam_api.so
libsteamnetworkingsockets.so
libtier0.so
libvstdlib.so
Like net_showmsg, but only spew reliable messages
lil8)
Line %d col %d: 
List all registered net messages
listen
LITE_RUNTIME
Lm@x,
localhost
Localize_001
localnamefixup
Local Player
location
Location
LOG_GENERAL
LoggingSystem_GetChannelVerbosity
LoggingSystem_IsChannelEnabled
LoggingSystem_Log
LoggingSystem_RegisterLoggingChannel
Logic problem? szsrc = 
Log network processing
Log packets to files
"LookupMapValue"
loopback:%d
loopback_t CUtlMemoryPool
- Loss:    avg out %.1f, in %.1f
low_priority
	low_value
lseek
[L:%u:%u]
m%@9i)
m	A9j"
MakeSerializersMatchByMeta failed for %s
malloc
manifestincomplete
manifestloadpriority
map<$0, $1>
"MapBegin"
"MapEnd"
	map_entry
map_entry should not be set explicitly. Use map<KeyType, ValueType> instead.
MapKey::GetBoolValue
MapKey::GetInt32Value
MapKey::GetInt64Value
MapKey::GetStringValue
MapKey::GetUInt32Value
MapKey::GetUInt64Value
MapKey::type MapKey is not initialized. 
MapListService_001
mapname
map_name
"MapSize"
MapValueRef::GetBoolValue
MapValueRef::GetDoubleValue
MapValueRef::GetEnumValue
MapValueRef::GetFloatValue
MapValueRef::GetInt32Value
MapValueRef::GetInt64Value
MapValueRef::GetMessageValue
MapValueRef::GetStringValue
MapValueRef::GetUInt32Value
MapValueRef::GetUInt64Value
MapValueRef::type MapValueRef is not initialized.
master
MATCHFRAMEWORK_001
MaterialUtils_001
matrix3x4a_t
matrix3x4_t
max_classes
max_client_limit
max_clients
max_entries
 max. %f
Maximum amount of foreign packets (no established connection) allowed per frame before we discard
Max # of seconds we can wait for next packets to be sent based on rate setting (0 == no limit).
max_spawngroup_creationsequence
m_bCanStillRegisterCallbackPriorities
!m_bNeedsSort
MbP?outgoing
MClassHasCustomAlignedNewDelete
memchr
memcmp
memcpy
memmove
memory_free_mb
memory_used_mb
mempool.cpp
memset
menu_key_values
(merge 
  merged new baseline:
MeshSystem001
MeshUtils001
Message class "
Message extensions cannot have required fields.
(Message Info)
Message missing required fields: 
 message of type "
Message of type "
MessageOptions
Messages can't have default values!
Messages can't have default values.
MessageSet is not supported in proto3.
MessageSets cannot have fields, only extensions.
message_set_wire_format
messagessize
message_type
  Message type: 
Message type "
method
MethodDescriptorProto
MethodOptions
Milxlilx
min_client_limit
 min. %f
Mismatch between client %s and server %s
Missing field: FileDescriptorProto.name.
Missing name.
MNetworkAlias
MNetworkArraySerializer
MNetworkBitCount
MNetworkChangeCallback
MNetworkDisable
MNetworkEnable
MNetworkEncodeFlags
MNetworkEncoder
MNetworkExcludeByName
MNetworkExcludeByUserGroup
MNetworkIncludeByName
MNetworkIncludeByUserGroup
MNetworkMaxValue
MNetworkMinValue
MNetworkOverride
MNetworkOverride_Invalid
MNetworkPriority
MNetworkProceduralDataHelper
MNetworkRemoveAll
MNetworkSendProxyRecipientsFilter
MNetworkSerializeAs
MNetworkSerializer
MNetworkTypeAlias
MNetworkUserGroup
MNetworkUserGroupSendProxyRecipientsFilter
MNetworkVarEmbeddedFieldOffsetDelta
MNetworkVarNames
MNetworkVarsAtomic
MNetworkVarsDisable
m_nSharedChangeCallbackCount must be <= 32
ModelDocUtils001
model_index
MODEL_PROCESSING_SCRIPT_INTERFACE_001
MODEL_PROCESSING_SERVICES_INTERFACE_001
MResourceTypeForInfoType
msg_data
MSG_SPLITSCREEN_ADDUSER
MSG_SPLITSCREEN_REMOVEUSER
msg_type
m_StreamReliable
m_StreamUnreliable
m_StreamVoice
Multiple extension registrations for type "
Multiple steam net connections from %s
" must be unique within 
MutableMessage
MutableRawRepeatedField
"MutableRawRepeatedField"
MutableRepeatedMessage
[M:%u:%u:%u]
N14CNetworkSystem57CCallbackInternal_OnSteamNetConnectionStatusChangedClientE
N14CNetworkSystem57CCallbackInternal_OnSteamNetConnectionStatusChangedServerE
N24CFieldPathHuffmanEncoder12InternalNodeE
N24CFieldPathHuffmanEncoder5INodeE
N24CFieldPathHuffmanEncoder8LeafNodeE
"N$4$n
N6snappy15ByteArraySourceE
N6snappy22UncheckedByteArraySinkE
N6snappy4SinkE
N6snappy6SourceE
(_N8H
n9@yN
n	A9-
nA9hn
NA9iN
[Name]
	name_part
NamePart
N(B(6(
NB9hN
needs_decoder
Need space between identifier and decimal point.
Need space between number and identifier.
negative_int_value
nested_type
netchan.cpp
net_channels
NetChannel '%s':
netchan_t::reliabledata
netchan_t::unreliabledata
net_compresspackets
net_compresspackets_minsize
net_compressvoice
net_connections_stats
net_detailed_canpacket_log
net_Disconnect
net_filelogging
Net graph %s
net_listallmessages
net_log_processing
net_maxcleartime
net_max_foreign_packets
net_maxroutable
NetMessageConnectionClosed
NetMessageConnectionCrashed
net_messageinfo
net_messageinfo %s
[ Net Message Info: %s ]
NetMessagePacketEndB
NetMessagePacketStart"
NET_Messages
 NetMessageSplitscreenUserChanged
netmessages.proto
NetMessage '%s' still using auto-assigned, has to generate id from name CUtlStringToken hashcode = %d
net_minroutable
net_NOP
-net_no_parallel_build
net_p2p_client_to_client_messages
net_p2pconnection_linger_time
net_p2p_listen_dedicated
Net packet timing values don't make sense.  Send time=%llu, Recv time=%llu, Now=%llu, Peer delay=%d
net_port_try
net_public_adr
net_qosinterval_spew
net_qospacketloss_percentage_threshold
net_restrict_showmsg_socket
net_serializedentitymemory
net_SetConVar
net_showdrop
net_showfragments
net_showmsg
net_showoob
net_showpeaks
net_showreliable
net_showudp
net_showudp_remoteonly
net_SignonState
net_SpawnGroup_Load
net_SpawnGroup_LoadCompleted
net_SpawnGroup_ManifestUpdate
net_SpawnGroup_SetCreationTick
net_SpawnGroup_Unload
net_spewcounts
net_spewserializer
net_splitpacket_minimum_ack_rtt_msecs
net_splitpacket_require_acks_threshold
net_splitpacket_resend_time_msecs
net_splitpacket_success_ack_count
net_SplitScreenUser
net_status
Net status for host %s:
NetSteamConn
net_StringCmd
net_table_name
net_Tick
net_usesocketsforloopback
net_validatemessages
net_validatemessages = %d
networkbasetypes.proto
networkbasetypes.proto"
NetworkClientService_001
network_connection.proto
network_connection.proto"-
network_connection_token
NETWORK_DISCONNECT_BADDELTATICK
#NETWORK_DISCONNECT_BADRELAYPASSWORD
&NETWORK_DISCONNECT_BAD_SERVER_PASSWORD
'NETWORK_DISCONNECT_BADSPECTATORPASSWORD
NETWORK_DISCONNECT_BANADDED
*NETWORK_DISCONNECT_CLIENT_CONSISTENCY_FAIL
'NETWORK_DISCONNECT_CLIENT_DIFFERENT_MAP
 NETWORK_DISCONNECT_CLIENT_NO_MAP
+NETWORK_DISCONNECT_CLIENT_UNABLE_TO_CRC_MAP
%NETWORK_DISCONNECT_CONNECTION_FAILURE
+NETWORK_DISCONNECT_CONNECT_REQUEST_TIMEDOUT
'NETWORK_DISCONNECT_CREATE_SERVER_FAILED
'NETWORK_DISCONNECT_DELTAENTMSG_OVERFLOW
'NETWORK_DISCONNECT_DIFFERENTCLASSTABLES
-NETWORK_DISCONNECT_DIRECT_CONNECT_RESERVATION
'NETWORK_DISCONNECT_DISCONNECT_BY_SERVER
%NETWORK_DISCONNECT_DISCONNECT_BY_USER
NETWORK_DISCONNECT_DISCONNECTED
NETWORK_DISCONNECT_EXITING
NETWORK_DISCONNECT_HLTVDIRECT
!NETWORK_DISCONNECT_HLTVRESTRICTED
NETWORK_DISCONNECT_HLTVSTOP
"NETWORK_DISCONNECT_HLTVUNAVAILABLE
NETWORK_DISCONNECT_HOST_ENDGAME
!NETWORK_DISCONNECT_INTERNAL_ERROR
NETWORK_DISCONNECT_INVALID
(NETWORK_DISCONNECT_INVALID_MESSAGE_ERROR
NETWORK_DISCONNECT_KICKBANADDED
NETWORK_DISCONNECT_KICKED
NETWORK_DISCONNECT_LEAVINGSPLIT
*NETWORK_DISCONNECT_LOCALPROBLEM_MANYRELAYS
-NETWORK_DISCONNECT_LOCALPROBLEM_NETWORKCONFIG
%NETWORK_DISCONNECT_LOCALPROBLEM_OTHER
!NETWORK_DISCONNECT_LOOPDEACTIVATE
*NETWORK_DISCONNECT_LOOP_LEVELLOAD_ACTIVATE
NETWORK_DISCONNECT_LOOPSHUTDOWN
NETWORK_DISCONNECT_LOST
&NETWORK_DISCONNECT_MESSAGE_PARSE_ERROR
NETWORK_DISCONNECT_NOMORESPLITS
)NETWORK_DISCONNECT_NO_PEER_GROUP_HANDLERS
NETWORK_DISCONNECT_NOSPECTATORS
NETWORK_DISCONNECT_OVERFLOW
)NETWORK_DISCONNECT_PURESERVER_CLIENTEXTRA
&NETWORK_DISCONNECT_PURESERVER_MISMATCH
NETWORK_DISCONNECT_RECONNECTION
(NETWORK_DISCONNECT_REJECT_BACKGROUND_MAP
&NETWORK_DISCONNECT_REJECT_BADCHALLENGE
%NETWORK_DISCONNECT_REJECT_BADPASSWORD
 NETWORK_DISCONNECT_REJECT_BANNED
,NETWORK_DISCONNECT_REJECT_CONNECT_FROM_LOBBY
#NETWORK_DISCONNECT_REJECTED_BY_GAME
'NETWORK_DISCONNECT_REJECT_FAILEDCHANNEL
%NETWORK_DISCONNECT_REJECT_HIDDEN_GAME
(NETWORK_DISCONNECT_REJECT_INVALIDCERTLEN
+NETWORK_DISCONNECT_REJECT_INVALIDCONNECTION
*NETWORK_DISCONNECT_REJECT_INVALIDKEYLENGTH
,NETWORK_DISCONNECT_REJECT_INVALIDRESERVATION
-NETWORK_DISCONNECT_REJECT_INVALIDSTEAMCERTLEN
%NETWORK_DISCONNECT_REJECT_LANRESTRICT
%NETWORK_DISCONNECT_REJECT_NEWPROTOCOL
!NETWORK_DISCONNECT_REJECT_NOLOBBY
%NETWORK_DISCONNECT_REJECT_OLDPROTOCOL
,NETWORK_DISCONNECT_REJECT_RESERVED_FOR_LOBBY
,NETWORK_DISCONNECT_REJECT_SERVERAUTHDISABLED
$NETWORK_DISCONNECT_REJECT_SERVERFULL
'NETWORK_DISCONNECT_REJECT_SINGLE_PLAYER
NETWORK_DISCONNECT_REJECT_STEAM
#NETWORK_DISCONNECT_RELIABLEOVERFLOW
"NETWORK_DISCONNECT_REMOTE_BADCRYPT
(NETWORK_DISCONNECT_REMOTE_CERTNOTTRUSTED
NETWORK_DISCONNECT_REMOTE_OTHER
!NETWORK_DISCONNECT_REMOTE_TIMEOUT
,NETWORK_DISCONNECT_REMOTE_TIMEOUT_CONNECTING
&NETWORK_DISCONNECT_REPLAY_INCOMPATIBLE
.NETWORK_DISCONNECT_REQUEST_HOSTSTATE_HLTVRELAY
)NETWORK_DISCONNECT_REQUEST_HOSTSTATE_IDLE
&NETWORK_DISCONNECT_SERVER_INCOMPATIBLE
&NETWORK_DISCONNECT_SERVERINFO_OVERFLOW
(NETWORK_DISCONNECT_SERVER_REQUIRES_STEAM
"NETWORK_DISCONNECT_SERVER_SHUTDOWN
NETWORK_DISCONNECT_SHUTDOWN
 NETWORK_DISCONNECT_SNAPSHOTERROR
#NETWORK_DISCONNECT_SNAPSHOTOVERFLOW
%NETWORK_DISCONNECT_SOUNDSMSG_OVERFLOW
,NETWORK_DISCONNECT_SPLITPACKET_SEND_OVERFLOW
(NETWORK_DISCONNECT_STEAM_AUTHALREADYUSED
&NETWORK_DISCONNECT_STEAM_AUTHCANCELLED
$NETWORK_DISCONNECT_STEAM_AUTHINVALID
NETWORK_DISCONNECT_STEAM_BANNED
,NETWORK_DISCONNECT_STEAM_DENY_BAD_ANTI_CHEAT
"NETWORK_DISCONNECT_STEAM_DENY_MISC
 NETWORK_DISCONNECT_STEAM_DROPPED
NETWORK_DISCONNECT_STEAM_INUSE
,NETWORK_DISCONNECT_STEAM_LOGGED_IN_ELSEWHERE
NETWORK_DISCONNECT_STEAM_LOGON
"NETWORK_DISCONNECT_STEAM_OWNERSHIP
NETWORK_DISCONNECT_STEAM_TICKET
$NETWORK_DISCONNECT_STEAM_VACBANSTATE
+NETWORK_DISCONNECT_STEAM_VAC_CHECK_TIMEDOUT
*NETWORK_DISCONNECT_STRINGTABLEMSG_OVERFLOW
&NETWORK_DISCONNECT_TEMPENTMSG_OVERFLOW
#NETWORK_DISCONNECT_TICKMSG_OVERFLOW
NETWORK_DISCONNECT_TIMEDOUT
NETWORK_DISCONNECT_UNUSUAL
NETWORK_DISCONNECT_USERCMD
NETWORK_FIELD_CHANGED_ARRAY_WITH_VALUE
NETWORK_FIELD_CHANGED_NO_VALUE
NETWORK_FIELD_CHANGED_NO_VALUE_NO_CONTEXT
NETWORK_FIELD_CHANGED_TYPE_NONE
NETWORK_FIELD_CHANGED_WITH_VALUE
NETWORK_FIELD_CHANGES_OFTEN_PRIORITY
NETWORK_FIELD_CHANGES_OFTEN_PRIORITY_TOPOOGICAL
NETWORK_FIELD_CHANGES_OFTEN_PRIORITY_TOPOOGICAL_SORTLOWER
NETWORK_FIELD_DEFAULT_PRIORITY
NETWORK_FIELD_HIGHEST_PRIORITY
NETWORK_FIELD_LOWEST_PRIORITY
NetworkFieldSerializerGroup_t *CNetworkSerializer::DetermineFieldSerializerGroup(const CSchemaType *, const FieldMetaInfo_t &, const char *, NetworkFieldSerializerInfo_t *) const
Network field tried to use a priority that has not been registered!
Networking
networking/%04d_%02d_%02d_%02d_%02d_%02d
Networking Reliable
networkmessages.cpp
NetworkMessagesVersion001
NetworkP2PService_001
networkserializer.cpp
NetworkServerService_001
NetworkService_001
Network socket '%s' opened on port %d
-networkspew
-networkspewcreate
-networkspewentity
-networkspewexcludes
networksystem
networksystem.cpp
NetworkSystem/CreateListenSocketP2P
Network System Initialized
networksystem_protomessages.proto
!networksystem_protomessages.proto"0
NetworkSystemUtilsVersion001
NetworkSystemVersion001
-networkvar_validate
next state only
NHC@y
nIndex != m_priorityToOrderMap.InvalidIndex()
No active net channels.
no CSerializedEntity memory being used
no cull rules
No default value
-nodns
<no failure reason set>
no fastpath for %d because field %s base depth is too large (pointer metadata change?)
no fastpath for %d because field %s not in previous encoding
no fastpath for %d because field %s not resolvable
no fastpath for %d because field %s %s changed the array size from %d to %d
No field named "uninterpreted_option" in the Options proto.
-noip
Non-networkables
(no node).%s
non-parallel
Non-primitive types can't be packed.
Non-repeated Any specified multiple times.
Non-repeated field "
NonTopoComplex
NonTopoComplexPack4Bits
NonTopoPenultimatePluseOne
normal
noscale
?<No schemasystem>
NO_SIDE_EFFECTS
no_standard_descriptor_accessor
notconnected
.note.gnu.build-id
Note that enum values use C++ scoping rules, meaning that enum values are siblings of their type, not children of it.  Therefore, "
").  Note that the exact same class is required; not just the same descriptor.
 not found
nothing
notify
Not implemented.
Not implemented field number 
, not just within "
" not previously defined in symbols_by_name_, but was defined in symbols_by_parent_; this shouldn't be possible.
Not safe to 'new' this class due to alignment requirements
nPriority != NETWORK_FIELD_CHANGE_DEFAULT_PRIORITY
NSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEEE
NSt6__ndk115basic_streambufIcNS_11char_traitsIcEEEE
NSt6__ndk115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt6__ndk119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt6__ndk121__basic_string_commonILb1EEE
NSt6__ndk19basic_iosIcNS_11char_traitsIcEEEE
nTries < 10000000
<null>
(NULL)
NULL output boolean given.
number
Number of CFieldPath::Path_t      :  %d
Number of CFieldPaths(Reconstruct):  %d
Number of CSerializedEntities     :  %d
Numbers starting with leading zero must be in octal.
num_bits
num_bots
num_changed_entries
num_clients
num_commands
num_elements
num_entries
num_server_players
num_spectators
num_tv_relays
o6h~@
O6h:@
O6hb@
O6hbA9
O6hFB9	
o6hVB9	1
O6i>@
O6i:@
o6ib@
O6ib@
O6ifA9
o6jb@
o6jN@
objc_class_prefix
 of the Protocol Buffer runtime library, but the installed version is 
 of the Protocol Buffer runtime library, which is not compatible with the installed version (
oneof_decl
OneofDescriptorProto
oneof_index
Oneof must have at least one field.
OneofOptions
- online: %.3f seconds
[opaque]
Opened Steam Net Connection on socket '%s' to %s, connection %s
	operation
Operation_t
optimize_for
OptimizeMode
optional
Option field "
Option must have a name.
Option must not use reserved name "uninterpreted_option".
options
Options could not be fully parsed using the proto descriptors compiled into this binary. Missing required fields: 
Ordered constructor wrapped type has no default constructor.
Order,'From','To',Bits
org(%g,%g,%g) ang(%g,%g,%g)
originalSender
origin_x
origin_y
origin_z
Other Players
 Outdent() without matching Indent().
'out_location' must not be NULL
out of order
output_type
Overrides IP for multihomed hosts
P6h>@
P6iB@
p6iv@
p6jf@
p6jR@
p7v	P7
P7x"@
	P@9K
package
package $0;
packed
[packed = true] can only be specified for repeated primitive fields.
packet_loss_pct
- packets: in %.1f/s, out %.1f/s
- Packets: net total out  %.1f/s, in %.1f/s
PanoramaTextServices001
PanoramaUIClient001
PanoramaUIEngine001
 Parameter to BackUp() can't be negative.
parentnamefixup
parse
ParseFromString failed
parsing
ParticleSystemMgr003
Path_AddToTail failed, depth already == DEFAULT_MAX_PATH_DEPTH(%d)
Path_AddToTail failed for read only CFieldPath
Path_PopLast failed for read only CFieldPath
Path_RemoveAll failed for read only CFieldPath
Path_Remove failed for read only CFieldPath
Path_SetCount failed, depth already == DEFAULT_MAX_PATH_DEPTH(%d)
paused
pause_group
pause_type
payloadData
	pB9_
Peer To Peer
pending data
pending_full_frame
*pEnd > *pStart
           per client out %.1f, in %.1f kB/s
           per client out %.1f/s, in %.1f/s
-perfectworld
p}?fff?
	PFT_SOUND
php_class_prefix
php_generic_services
php_namespace
Physics2 Interface Old v0.5
PhysicsBuilderMgr001
ping_avg_ms
ping_stddev_ms
pitch
.placeholder.proto
.PLACEHOLDER_VALUE
Plat_DebugPrint
Plat_ExitProcess
Plat_FloatTime
Plat_GetEnv
Plat_GetLocalTime
Plat_IsInDebugSessionRaw
Plat_IsInTestMode
Plat_RelativeTicks
Plat_ShouldCollectMiniDumpsForFatalErrors
Plat_TickDiffMilliSecF
Player
player_index
playername
players
player_slot
players_networkids
.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
PlusFour
PlusThree
PlusTwo
pointer
Pointer to CUtlVector not supported by networking:  %s::%s
pointer to struct changed
PopAllButOnePlusN
PopAllButOnePlusNPack3Bits
PopAllButOnePlusNPack6Bits
PopAllButOnePlusOne
PopNAndNonTopographical
PopNPlusN
PopNPlusOne
PopOnePlusN
PopOnePlusOne
ports
- Ports: 
positive_int_value
  possible match %d of %d:  %s %s.%s
PostProcessingSystem_001
posttoserver
PrefetchType
.PrefetchType"5
prevhopcount
previouslevel
Print detailed network statistics for each network connection
priority
pri(%u)
  Problem     : 
problem detected locally
  Problem     : Enum value did not match field type:
  Problem     : Field is not the right type for this message:
procedural
 (procedural)
Procedural
ProceduralData_%s_%d
process_id
ProcessOverride encountered unknown directive NetworkOverrideType_t(%d)
ProcessPacketSNP %s:%s packet %i at %i
progress
PropertyEditorSystem_001
props
Proto 
proto2
proto3
protocol
Protocol Buffer map usage error:
Protocol Buffer reflection usage error:
Protocol message could not be serialized.
Protocol message serialized itself in invalid fashion.
: Protocol message serialized to a size different from what was originally expected.  Perhaps it was modified by another thread during serialization?
Proto file starts with 0xEF but not UTF-8 BOM. Only UTF-8 is accepted for proto file.
ProtoFlattenedSerializerField_t
.ProtoFlattenedSerializer_t
ProtoFlattenedSerializer_t
 = { <proto text format> }". To set fields within it, use syntax like "
Proto type 
proxies
	proximity
pthread_getspecific
pthread_key_create
pthread_mutexattr_init
pthread_mutexattr_settype
pthread_mutex_destroy
pthread_mutex_init
pthread_mutex_lock
pthread_mutex_lock: 
pthread_mutex_unlock
pthread_mutex_unlock: 
pthread_setspecific
public_dependency
../public/networksystem/inetworkmessages.h
../public/networksystem/serializedentity.h
../public/ordered_constructor.h
../public/tier0/tslist.h
../public/tier1/quantizedfloatencoder.h
../public/tier1/utlleanvector.h
../public/tier1/utllinkedlist.h
../public/tier1/utlrbtree.h
../public/tier1/utlsortvector.h
../public/tier2/fieldpath.h
PushN
PushNAndNonTopographical
PushOneLeftDeltaNRightNonZero
PushOneLeftDeltaNRightNonZeroPack6Bits
PushOneLeftDeltaNRightNonZeroPack8Bits
PushOneLeftDeltaNRightZero
PushOneLeftDeltaOneRightNonZero
PushOneLeftDeltaOneRightZero
PushOneLeftDeltaZeroRightNonZero
PushOneLeftDeltaZeroRightZero
PushThreeLeftDeltaN
PushThreeLeftDeltaOne
PushThreeLeftDeltaZero
PushThreePack5LeftDeltaN
PushThreePack5LeftDeltaOne
PushThreePack5LeftDeltaZero
PushTwoLeftDeltaN
PushTwoLeftDeltaOne
PushTwoLeftDeltaZero
PushTwoPack5LeftDeltaN
PushTwoPack5LeftDeltaOne
PushTwoPack5LeftDeltaZero
[P:%u:%u]
py_generic_services
qangle
QAngle
qangle_pitch_yaw
	QB9i
q?h(8
qhz;x
Qi"A)`
Qij(x
quality
Quaternion
QueueChange
queued
QueuedLoaderVersion001
QueueDuplicate
	Q@y?
	q@yZ
*R)8yv
RA9iR
RadianEuler
r)AIJ)
r)AIJ+
raise
random_seed
RAx[#
RB9hR
rB9ur
Reached an unintended state: CPPTYPE_MESSAGE
Reached impossible case in HasBit().
reason
Received message using legacy split packet system!  Ignoring
receivingclients
recipientList
RegisterConfigValue: Unknown error constructing config value "%s"!
RegisterNetMessageHandlerAbstract: Attempted to register a message handler for a message which is not valid for this category of channel [message %s]!
RegisterNetMessageHandlerAbstract: Must call StartRegisteringMessageHandlers before, and FinishRegisteringMessageHandlers after [message %s]!
RegisterStringToken
.rela.dyn
.rela.plt
relative
Release
ReleaseLast
ReleaseMessage
reliable
- reliable: %s
reliable_sound
remote_addr
- remote IP: %s
RemoveArrayElementsOutsideOfArrayMetadataBounds:  %s [ent %d] removing change '%s' for field %s (value '%s') on array that has metadata with only %d array elements!
Removed fake field %s at %d
RemoveLast
Removing Steam Net Connection for %s, handle #%u
RenderDevice003
RenderDeviceMgr001
RenderHardwareConfig002
RenderService_001
RenderSystemSurface001
RenderUtils_001
repeated
Repeated fields can't have default values.
replicated
Requested max packet size before packets are 'split'.
.RequestPause_t
RequestPause_t
required
Required fields are not allowed in proto3.
reserved_name
Reserved numbers must be positive integers.
reserved_range
ReservedRange
Reserved range $0 to $1 overlaps with already-defined range $2 to $3.
Reserved range end number must be greater than start number.
ResourceCompilerSystem001
ResourceHandleUtils001
ResourceManifestRegistry001
ResourceSystem013
resource_type
rh2@9
rhj)8H
rhjh8
Rhjh8(
Rhjh8	
Rhjhx
RiJ@9	
rijh8)
rijh8*
Rijhx
Rijhx)
RIO_ESTABLISH_CONNECTION
RIO_NO_ROUTE
RIO_REJECT_RELAY
RIO_REQUEST_RELAY
RIO_WILL_RELAY
r(i*xK
rJAJJL
rJMJJ
R?k78v
rkMKJ
Rmij8
rnd_down
rnd_up
.rodata
(root)
RP_PAUSE
RP_TOGGLEPAUSE
RP_UNPAUSE
Rtjhx
r@yhr
 == %s
    [%s]:
--- %s: 
"%s" 
"%s":
"%s":[
%s+--
+++ %s: 
%s0x%p Gathering field offsets in %s, storing in 0x%p
%s0x%p rebuild %s::%s at %u
%s0x%p %s Ignoring %s offset %u, storing in 0x%p
%s0x%p %s Initializing
%s0x%p %s removing field %i %s at offset %u, removing from 0x%p
s1_mapname
%s|  % 2d: [% 3d] %-12s %s
%s|  % 2d: %s [Offset: %d]
"%s":%.3f
%s| AlignOf: %d
%s allocation count overflow
%s allocation count overflow( add %llu + current %llu > max %llu )
%s allocation count overflow( %llu >= %llu )
%s allocation count overflow( %llu > %llu )
sample_rate
%sApplying %s
%s - Argument expected (message ID or name).
savegamefilename
savegamename
%s| Base Class%s: %d
sC9( 
%s: !CanPacket() - m_bSuppressingTransmit.
%s: !CanPacket() - SNPQueueTime=%.1fms.
SceneSystem_002
SceneUtils_001
sched_yield
Schema
schemabindings.cpp
schemaclassinfo.cpp
schemasystem
SchemaSystem_001
SchemaTestExternal_One_001
SchemaTestExternal_Two_001
%s:  CNetChan::TransmitSNP(%s) SinceLastSend=%.1fs, Sent=%d, pending R/U=%d/%d, queueTime=%.1fms
%s:  CNetChan::Transmit( %s ) while suppressing transmit
%s:  compressing reliable (%u -> %u bytes)
%sconsider %s at depth %d
%s:  corrupted packet %i at %i
%s:  couldn't find serializer %s
%sCulled %s::%s
%sCull fields for %s
--- %s[%d]: 
"%s":%d
%s [%d]
%s:%d
+++ %s[%d]: 
%s/%d:  AddFieldPathAndOffset (%s) added too large of a bit offset (%u : prev=%u) at element %d
%s/%d:  AddFieldPathAndOffset (%s) added unexpected offset (%u : prev=%u) at element %d
%s depth %d
sdr config option not found
SDR connect
%s:%d reliable sequence
%s:Dropped %i packets at %i
%s:  %d : %s bits %d to %d [%d bits] : %s
Second argument to SwapFields() (of type "
Second argument to Swap() (of type "
section
section_number
" seems to be defined in "
%s:  encodeded data mismatched %d bits
%s encoding array count %d, field %s %s%s
%s encoding array[%d] field %s %s%s: %s
%s encoding array field %s %s[%d] %s
%s encoding as %d bits '
%s encoding embedded field %s %s%s
%s encoding field %s %s%s: %s
%s:  encoding mismatched %d vs. %d bits
%s encoding procedural path %s %s%s: %s
%s encoding %s pointer field %s %s%s%s
Sending %d byte message to %s on socket %s
send_node_sym
sendprop_t
send_table_crc
sentinel
sequence_bytes
sequence_number
serializedAddr
serializedAddress
SerializedEntitiesVersion001
.SerializedNetAddress_t
SerializedNetAddress_t
serializedTargetAddress
Serializer,Field,Field Path,Decode Count,Total Bits,Avg Bits,Total Index Bits,Avg Index Bits,Priority,Best Priority,=SUM(E:E),Full Name,Notes
Serializer for %s has two fields of same name (%s)
serializer_name_sym
serializers
 serializer(%s)
serializer_version
serializing
server
server_can_execute
server_count
server_ip_address
server_streaming
ServerUploadGameStats001
Server upper bound on net_maxroutable that a client can use.
service
service $0 {
ServiceDescriptorProto
ServiceOptions
service thread gave up on lock
SetAllocatedMessage
SetBool
SetDouble
SetEnum
SetEnumValue
SetEnumValue accepts only valid integer values: value 
SetFloat
SetInt32
SetInt64
SetRepeatedBool
SetRepeatedDouble
SetRepeatedEnum
SetRepeatedEnumValue accepts only valid integer values: 
SetRepeatedFloat
SetRepeatedInt32
SetRepeatedInt64
SetRepeatedString
SetRepeatedUInt32
SetRepeatedUInt64
SetString
Setting max routable payload size from %d to %d for %s
SetUInt32
SetUInt64
%sexcluding %s::%s due to MNetworkNoBase
"%s":%f
%s:  fake client reliable ack now %d
%s| Fields:
sfixed32
sfixed64
%sfound leafmost nobase at %s
%sfound offset %u in %s at path '%s'
S,h(8
%s had %d different permutations
%s:  high packet loss detected flow %s: %4dms latency, %5d/%5d dropped (%.1f%%)
Should dedicated server listen for new-style P2P?
Should not reach here.
Show connectionless UDP traffic.
Show dropped packets in console
Show incoming message: <0|1|2|name> where 1 == all and 2 == all except net_NOP
Show messages for large packets only: <size>
Show netchannel fragments
Shows current network status
Shows net channel info
.shstrtab
shutdown
Si~B9
	signature
SignedDestinationAddress_t
 [signed enum]
signedPayload
.SignedPayload_t
SignedPayload_t
Signon
signon_state
SIGNONSTATE_CHALLENGE
SIGNONSTATE_CHANGELEVEL
SIGNONSTATE_CONNECTED
SIGNONSTATE_FULL
SIGNONSTATE_NEW
SIGNONSTATE_NONE
SIGNONSTATE_PRESPAWN
SIGNONSTATE_SPAWN
%signore offset %u in %s at path '%s'
simple
simplified
%sincluding %s::%s to ensure entire chain to field
singleplayer
%s:  in serializer '%s' couldn't find field %s::%s, possibly already marked MNetworkExclude
sint32
sint64
%s - Invalid net message index: %d
sky_name
"%s":%lld
"%s":%llu
slots
%smarking %s::%s because it derives from or is a '%s'
%s:  metadata( %d : field %s arraycount = %d )
%s:  meta info problem %s
%s:  NetChan QoS flow %s: %4dms latency, %5d/%5d dropped (%.1f%%)
%s:  NetChan Setting Timeout to %4.2f seconds
Socket '%s' bound to '%s' [%s]:
Socket '%s' listening for SDR on port %d virtual port %d
Socket '%s' listening for %s on port %d:
sounddata_t
sound_index
sound_level
	sound_num
sound_num_handle
SoundOpSystem001
SoundOpSystemEdit001
sound_resource_id
sounds
Sounds
SoundService_001
SoundSystem001
Source2Client002
Source2ClientPrediction001
Source2ClientUI001
Source2EngineToClient001
Source2EngineToClientStringTable001
Source2EngineToServer001
Source2EngineToServerStringTable001
Source2GameClients001
Source2GameEntities001
Source2Host001
Source2Server001
Source2ServerSerializers002
source_code_info
SourceCodeInfo
source_file
%s:  out of bound compressed reliable data size of %d bytes
%s:  out of bound reliable data size of %d bits
spawn_count
SPAWN_GROUP_BLOCK_UNTIL_LOADED
'SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES
"SPAWN_GROUP_CREATE_NEW_SCENE_WORLD
SPAWN_GROUP_DONT_SPAWN_ENTITIES
SpawnGroupFlags_t
spawngrouphandle
"SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP
#SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE
SPAWN_GROUP_LOAD_STREAMING_DATA
spawngroupmanifest
spawngroupownerhandle
spawngroupparenthandle
Spawn Groups
SPAWN_GROUP_SYNCHRONOUS_SPAWN
speaker_entity
Specified different usergroup proxies for %s
SPEED
Spew a warning if packet loss percentage is above this threshold
Spew CSerializedEntity memory
Spew QoS interval data as we gather it
Spew serializer counts
Spew serializer info
splitpacket
 splits [%d]
%s pointer, skipping rest
sprintf
%sProcess includes/excludes %s
%s| Project: '%s' Binary: '%s'
sqrtf
%s:  queued reliable data for send, block %d bytes %d (bit size %d)
%s:  read %sreliable data block %d through %d, bytes %d (bit size %d)
%s:  received reliable ack, was %d now %d
%s:  reliable send overflow, pending %d bytes (bits size %d) of outgoing reliable until acknowledge
%s:  resending reliable seq %d
"%s" = "%s"
"%s":%s
(%s->%s)
(%s)%s
%s:  %s
%s::%s
%s.%s
ss_added
%s+-- Schema Class: %s
%s %s:  [%d] %s queue %s [type %s] %son 0x%p [alloc %u] [order %d] %s
%s SendMessage reliable failed with EResult: %d, bytes written %d
%s: SendMessage reliable failed with k_EResultLimitExceeded, crashing connection.
%s SendMessage unreliable failed with EResult: %d, bytes written %d
%s: SendMessage unreliable failed with k_EResultLimitExceeded, crashing connection.
%s:  sent reliable data blocks %d through %d, bytes %d (bit size %d)
%s: %s exists only in %s
%s%s: failed to find match for offset %llu [path %s]
%s%s found %s in path %s
%s| SizeOf: %d
%s:%s needs base %s:%s to be registered
%s:  %s packet type '%s' %d/%d (%.1f%%)
%s : %s = '%s'
%s %s = %s
%s %s %s
%s,%s,'%s',%d,%d,%.3f,%d,%.3f,%d,%d,=E%d/K$1,%s,%s
%s -> %s::%s is marked for networking but is not a CNetworkVar!
%s%s::%s marked %s by group %s at %s
%s%s::%s marked %s by name at %s
%s%s %s::%s recursively
%s%s::%s under consideration
%s:  %s timing out, last received %f [%.2f seconds ago]
%s: string format requested %d chars
%s::%s was in the original serializer at offset %u but that offset isn't in the ignore list!!!
__stack_chk_fail
start
state
static void CGlobalConfigValueRegistry::HookUpConfigValue(const char *, ConfigType_t, ConfigValueType_t, CConfigValueOptions &&, const void **)
static void CSchemaRegistration::RegisterAllModuleData(ISchemaSystem *)
StatsService_001
status_code
SteamAPI_GetHSteamPipe
SteamAPI_GetHSteamUser
SteamAPI_RegisterCallback
SteamAPI_RegisterCallResult
SteamAPI_UnregisterCallback
SteamAPI_UnregisterCallResult
STEAMAPPLIST_INTERFACE_VERSION001
STEAMAPPS_INTERFACE_VERSION008
SteamAudio001
SteamClient018
SteamController007
SteamDatagramClient_Init failed.  %s
SteamDatagramClient_Init_InternalV9
SteamDatagramClient_Internal_SteamAPIKludge
SteamDatagramClient_Kill
SteamDatagramClient_SetLauncher
SteamDatagram Network Configuration
SteamDatagramServer_Init failed.  %s
SteamDatagramServer_Init_InternalV2
SteamDatagramServer_Kill
SteamFriends017
SteamGameServer012
SteamGameServer_GetHSteamPipe
SteamGameServer_GetHSteamUser
SteamGameServerNetworkingSockets_Lib
SteamGameServerStats001
STEAMHTTP_INTERFACE_VERSION003
steamid
steam_id
SteamInput001
SteamInternal_ContextInit
SteamInternal_CreateInterface
SteamInternal_FindOrCreateGameServerInterface
SteamInternal_FindOrCreateUserInterface
STEAMINVENTORY_INTERFACE_V003
SteamMatchGameSearch001
SteamMatchMaking009
SteamMatchMakingServers002
STEAMMUSIC_INTERFACE_VERSION001
STEAMMUSICREMOTE_INTERFACE_VERSION001
Steam Net connection %s %s, reason %d: %s
SteamNetSockets
SteamNetworking005
SteamNetworkingMessages_Lib
SteamNetworkingSockets003
SteamNetworkingSockets_Lib
-steamnetworkingsockets_use_steamclient
SteamNetworkingUtils002
SteamNetworkingUtils_Lib
SteamNetworkongSockets not yet initialized.  Queuing command '%s'
STEAMPARENTALSETTINGS_INTERFACE_VERSION001
STEAMREMOTESTORAGE_INTERFACE_VERSION014
STEAMSCREENSHOTS_INTERFACE_VERSION003
Steam supporting smaller max routable packet than engine expecting (%d vs %d)
STEAMUGC_INTERFACE_VERSION012
SteamUser020
STEAMUSERSTATS_INTERFACE_VERSION011
SteamUtils009
STEAMVIDEO_INTERFACE_V002
strchr
strcmp
strcpy
stream 
strerror
STRING
String Command
string_data
String field
String literals cannot cross line boundaries.
StringOutputStream.
STRING_PIECE
strings::Substitute format string invalid: asked for "$
String Table
string_t_table
string_value
strlen
strrchr
strstr
strtod
strtof
strtol
strtoll
strtoul
strtoull
"%s":%u
%s:  (%u bits/%u bytes):
subtype mismatch
succeeded
Summary of connection [%s]:
%s:  unexpected reliable start sequence %d, wanted %d
%s - Unrecognized net message name: '%s'
%s:  value %u: count %d
svc_BSPDecal
svc_ClassInfo
svc_ClearAllStringTables
svc_CmdKeyValues
svc_CreateStringTable
	svc_dummy
svc_FlattenedSerializer
svc_FullFrameSplit
svc_GetCvarValue
svc_HLTVStatus
svc_Menu
SVC_Messages
SVC_Messages_LowFrequency
svc_PacketEntities
svc_PacketReliable
svc_PeerList
svc_Prefetch
	svc_Print
svc_ServerInfo
svc_ServerSteamID
svc_SetPause
svc_SetView
svc_Sounds
svc_SplitScreen
svc_StopSound
svc_UpdateStringTable
svc_VoiceData
svc_VoiceInit
%s| Virtual: %s; Abstract: %s; TrivialConstr: %s; TrivialDestr: %s
sv_maxroutable
swift_prefix
s@y(?
Symbol name "
symbols
syntax
syntax = "$0";
System
*T)8yv
	!t9	
T)	@9
t@9)}D
table_id
target_entity
Tc"A)`
Tc"B)`
TCP/UDP Disabled.
T *CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<CEncodeInfo, 6, short>, CEncodeInfo, short>::AddToTailGetPtr() [B = CUtlLeanVectorFixedGrowableBase<CEncodeInfo, 6, short>, T = CEncodeInfo, I = short]
T *CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<CFieldListEncoderIterator::CSerializerLookup, 6, short>, CFieldListEncoderIterator::CSerializerLookup, short>::AddToTailGetPtr() [B = CUtlLeanVectorFixedGrowableBase<CFieldListEncoderIterator::CSerializerLookup, 6, short>, T = CFieldListEncoderIterator::CSerializerLookup, I = short]
T *CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<CFieldPathReconstruct_t, 3, short>, CFieldPathReconstruct_t, short>::AddToTailGetPtr() [B = CUtlLeanVectorFixedGrowableBase<CFieldPathReconstruct_t, 3, short>, T = CFieldPathReconstruct_t, I = short]
T *CUtlLeanVectorImpl<CUtlLeanVectorFixedGrowableBase<unsigned int, 3, short>, unsigned int, short>::AddToTailGetPtr() [B = CUtlLeanVectorFixedGrowableBase<unsigned int, 3, short>, T = unsigned int, I = short]
terminating.
TestFormatA
TestFormatB
TestFormatC
TestFormatD
TestFormatE
TestScriptMgr001
.text
text format contains deprecated field "
TextFormat::Parser for Any supports only type.googleapis.com and type.googleprod.com, but found "
TextLayout_001
TextMessageMgr_001
T/H@9
T)H@9
T*H@9)}@
T	H@9?
T,H@9i
T	H@9i
T)H@9I
Th&A)`
THa@9(
T)HA9* @
Th"B9
Th}B9
ThB@9
ThB@9h
ThC@9
ThC@9h
the actual field type (for enums T should be the generated enum 
The first enum value must be zero in proto3.
the global scope
The JSON camel-case name of field "
The type parameter T in RepeatedFieldRef<T> API doesn't match 
they_hear_you
ThF@9h
". This appears to be a value from a sibling type.
This can't happen; base64 decoder state = 
". This is not 
This program requires version 
This program was compiled against version 
This shouldn't be called if all the sizes are equal.
), this value label conflicts with 
. This will make the proto fail to compile for some languages, such as C#.
This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.
ThJ@9(
ThJ@9h
ThJ@9H
Thj@y
Thn@9
ThnHy
Thn@y
THO@y
THPAx
ThR@9
ThrA9
ThrA9h
ThRAx
ThreadGetCurrentId
ThreadSleep
Thv|9(
Th>@y
Th.@y
Ti5KJ(}
Ti"A)`
Ti"B9i
TibB9
	tickcount
tick_interval
Tif@9
Tif@9)
TIH@9I
TiJ@9
Tij@9i
TiJ@9I
Tij@9j
TIK@9
TIK@9i
TIkh8?}
Ti:@y
Ti*@yJ
TJ1@9k1@9_
Tj2@9j
TJ#]8
TJ-@9k-@9_
TjJ@9
TjJ@9j
TJkA9K'@
Tj*@y
TK-@8
T*K@9
T	K@9)
TK	@9)A
TkJ@9
T(kx8
Tl	@9
TL	@9kA
TMO@y
Toggle field path tracing to file
 Tokenizer::ParseFloat() passed text that could not have been tokenized as a float: 
 Tokenizer::ParseStringAppend() passed text that could not have been tokenized as a string: 
TOkh8
to missing
ToolFramework2_002
ToolGameSimulationDispatcher_001
ToolGameSimulationSystem_001
ToolSceneNodeFactory_001
ToolScriptManager001
ToolService_001
Too many network groups [%d], increase size of netbandwidthgraph_t::MAX_NETWORK_GROUPS [%d]
Too many proxies for serializer %s.
") to start from the outermost scope.
total
total_data_in
total_data_out
- total: in %.1f, out %.1f MB
total_packets_in
total_packets_out
".  To use it here, please add the necessary import.
T(O@y
T(P@y	P@y
T? @q
T? @q*
T? @q*	
trailing_comments
Tried to calc delta to a src message of a different type.
: Tried to copy from a message with a different type. to: 
: Tried to merge from a message with a different type.  to: 
Tried to merge messages of different types 
Tried to send ad-hoc to address %s, but address is not in list of steam net connections!
...<truncated>...
[T:%u:%u]
T/ @y
T+ @yL!@y
[Type]
Type appears to be in generated pool but wasn't 
	TYPE_BOOL
TYPE_BYTES
 type does not match
TYPE_DOUBLE
	TYPE_ENUM
TYPE_FIXED32
TYPE_FIXED64
TYPE_FLOAT
type.googleapis.com/
type.googleprod.com/
TYPE_GROUP
TYPE_INT32
TYPE_INT64
Type is already registered: 
TYPE_MESSAGE
	type_name
type or int32).
TYPE_SFIXED32
TYPE_SFIXED64
TYPE_SINT32
TYPE_SINT64
TYPE_STRING
TYPE_UINT32
TYPE_UINT64
T( @y	 @y
\U%08x
UDP <- %s: sz=%5i seq=%5i ack=%5i rel=%1i tm=%8.3f
UDP -> %s: sz=%5i seq=%5i ack=%5i rel=%1i tm=%8.3f
UDP -> %s: sz=%i OOB (%d)
UDP <- %s: sz=%i OOB (%d) wire=%i
uint32
uint64
uint8 CNetworkMessages::FindOrCreateGroupId(const char *)
unable to match %s::%s (type %s) in %s, no likely matches found
uncompressed_sample_offset
uncompressed_size
Unexpected end of string.
Unexpected failure while serializing option submessage 
 unexpected for field 
Unimplemented Map Reflection API.
Unimplemented type: 
uninterpreted_option
UninterpretedOption
unknown
<unknown>
" unknown.
__UNKNOWN__
Unknown enumeration value of "
UNKNOWN_ENUM_VALUE_%s_%d
Unrecognized syntax: 
Unsupported
Unsupported: type mismatch
update_baseline
updated_entries
UPDATE_STRING_TOKEN_DATABASE
uptime
usage:  net_spewserializer <name>
Usage: sdr <setting> [<value>]
Use lz compression on game packets.
Use network sockets layer even for listen server local player's packets (multiplayer only).
user_data_fixed_size
user_data_size
user_data_size_bits
%u serializers with %u fields (approx memory %llu / %llu in fields ) bytes (field size %d, serializer size %d)
userid
UserInfoChangeService_001
User Messages
usermsgs
	usermsg_t
" uses the same enum value as "
UTF-8 data when 
utlstring.cpp
%u:%u:%u
[U:%u:%u]
(%u %u %u %u)
[U:%u:%u:%u]
VA9iV
val_bool
val_byte
	val_float
ValidateSerializedEntity:  metadata incorrect entry for %s [%d expected %d]
ValidateSerializedEntity:  missing metadata entry for %s
ValidateSerializedEntity:  %s [ent %d] invalid change '%s' for field %s (value '%s') on array that has metadata with only %d array elements!
Validation Failed
val_long
	val_short
val_string
value
". Value: "
Value must be identifier for boolean option "
Value must be identifier for enum-valued option "
Value must be integer for int32 option "
Value must be integer for int64 option "
Value must be non-negative integer for uint32 option "
Value must be non-negative integer for uint64 option "
Value must be number for double option "
Value must be number for float option "
Value must be quoted string for string option "
Value must be "true" or "false" for boolean option "
Value of type "
Value out of range for int32 option "
Value out of range for int64 option "
Value out of range for uint32 option "
val_uint64
valve
#Valve_Reject_Background_Map
 #Valve_Reject_Connect_From_Lobby
#Valve_Reject_Hidden_Game
 #Valve_Reject_Reserved_For_Lobby
#Valve_Reject_Single_Player
VApplication001
var_encoder_sym
var_name
var_name_sym
var_type_sym
V_atan2f
V_atof
V_atofloat64
V_atoi
VAvi001
vB9hv
VB9hV
VBAllocTracker001
VBaseFileSystem011
VBik001
VConComm001
VDebugService_001
Vector
Vector2D
Vector4D
VectorAligned
VEngineCvar007
version
VFileSystem017
V_fmodf
VGUI_Input005
VGUI_ivgui008
VGUI_Panel010
VGUI_Scheme010
VGUI_Surface032
VGUI_System010
virtual int CNetworkMessages::ComputeOrderForPriority(int) const
virtual void CNetworkMessages::RegisterFieldChangeCallbackPriority(int)
virtual void CNetworkMessages::RegisterNetworkArrayFieldSerializer(const char *, NetworkSerializationMode_t, NetworkArrayFieldSerializer_t, NetworkArrayFieldUnserializer_t, NetworkParserDataSize_t, NetworkDataParser_t, NetworkArrayFieldSerializer_t, NetworkArrayFieldUnserializer_t)
virtual void CNetworkMessages::RegisterNetworkFieldChangeCallbackInternal(const char *, const char *, NetworkFieldChangedDelegateType_t, CUtlAbstractDelegate, NetworkFieldChangeCallbackPerformType_t, int)
virtual void CNetworkMessages::RegisterNetworkFieldSerializer(const char *, NetworkSerializationMode_t, NetworkableDataType_t, int, NetworkFieldSerializer_t, NetworkFieldUnserializer_t, NetworkParserDataSize_t, NetworkDataParser_t, NetworkGetEntityReportDescString_t, NetworkGetName_t, NetworkFieldSerializer_t, NetworkFieldUnserializer_t)
virtual void CNetworkSystem::InitGameServer()
virtual void CNetworkSystem::InitSteamNetworking()
VisBuilder_001
VMaterialSystem2_001
VMatrix
VMDLLIB001
VMediaFoundation001
VNewAsyncFileSystem001
voice_data
VOICEDATA_FORMAT_ENGINE
VOICEDATA_FORMAT_STEAM
.VoiceDataFormat_t:
VoiceDataFormat_t
voice_xsend_debug
void AddFieldPathAndOffset(const CFlattenedSerializer *, int, PackedFieldPathVec_t *, CUtlVector<uint32> *, PackedFieldPath_t, uint32)
void CFieldPath::Path_RemoveAll()
void CFieldPath::Path_Remove(int)
void CFieldPath::Path_SetCount(int)
void CFlattenedSerializer::BuildHierarchy(const CUtlString &, int, CFieldPath &, CSendNode *, const CNetworkSerializer *, CUtlVector<FlattenedSerializerField_t> &, CUtlVector<CFlattenedSerializer *> &, CBuildHierarchyStruct *, FieldOffsetType_t, unsigned char)
void CFlattenedSerializer::CheckForDuplicatedFields(CBuildHierarchyStruct *)
void CFlattenedSerializer::GatherAllFieldOffsets_R(int, OffsetIgnore_t *, uint32)
void CFlattenedSerializer::SetRecursiveProxyIndices_R(const char *, CSendNode *, int &)
void CMergedEntityOffsetBuilder::AddToTail(uint32)
void CNetworkMessages::ConfirmAllMessageHandlersInstalled(const char *, int, CUtlVector<NetMessageHandle_t> *)
void CNetworkSerializer::AssignSharedChangeCallbackIndex(CUtlVector<CNetworkSerializer::ChangeCallbackInfo_t> &, int, NetworkFieldSerializerInfo_t &)
void CNetworkSystem::UpdateNetGraph(float64)
void ConnectInterfaces(CreateInterfaceFn *, int)
void COrderedConstructor_Create<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, false>::AddRef(bool) [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>, RESOLVECLASS = CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, bCONSTRUCT_ON_FIRST_USE = false]
void CSchemaClassInfo::ReportClassError(const char *) const
void CSchemaClassInfo::ValidateModuleLocalTypeScope()
void CSerializedEntityFieldIterator::GetBitRange(uint32 *, uint32 *) const
void CUtlLeanVectorFixedGrowableBase<CEncodeInfo, 6, short>::EnsureCapacity(int, bool) [T = CEncodeInfo, N = 6, I = short]
void CUtlLeanVectorFixedGrowableBase<CFieldListEncoderIterator::CSerializerLookup, 6, short>::EnsureCapacity(int, bool) [T = CFieldListEncoderIterator::CSerializerLookup, N = 6, I = short]
void CUtlLeanVectorFixedGrowableBase<CFieldPath::Path_t, 6, short>::EnsureCapacity(int, bool) [T = CFieldPath::Path_t, N = 6, I = short]
void CUtlLeanVectorFixedGrowableBase<CFieldPathReconstruct_t, 3, short>::EnsureCapacity(int, bool) [T = CFieldPathReconstruct_t, N = 3, I = short]
void CUtlLeanVectorFixedGrowableBase<unsigned int, 3, short>::EnsureCapacity(int, bool) [T = unsigned int, N = 3, I = short]
void SkipPropData_(CProceduralDataContextMgr &, bool *, bf_read *, const CFlattenedSerializer *, const CFieldPath &, int, NetworkSerializationMode_t, CAutoNetworkableData_t<2048> &, CSerializedEntity *, int, INetworkProceduralDataHelper *, void *) [bVerbose = false]
void SkipPropData_(CProceduralDataContextMgr &, bool *, bf_read *, const CFlattenedSerializer *, const CFieldPath &, int, NetworkSerializationMode_t, CAutoNetworkableData_t<2048> &, CSerializedEntity *, int, INetworkProceduralDataHelper *, void *) [bVerbose = true]
volume
VP4003
VPhysics2_Handle_Interface_001
VPhysics2_Interface_001
VPhysX Interface ResourceMgr v0.1
VProcessUtils002
VProfService_001
V_qsort_s
VR_001
VRenderDeviceSetupV001
VScript
VScriptDbg
VScriptManager010
V_sincosf
V_snprintf
V_sscanf
V_stricmp_fast
VStringTokenSystem001
_V_strncat
_V_strncmp
_V_strncpy
_V_strnicmp_fast
V_strnlen
V_vsnprintf
V_vsnprintfSize
V_vsnprintfWarnTrunc
V_wcstoi64
W6	@@
W6h>@
W6hf@
W6hfA9
W6hJB9	4
W6hr@
w6hv@
w6hZB9	2
w6if@
W6if@
W6ijA9
Wait this many msecs before checking whether to send resend requests.
warning
Warning
WARNING
Warning parsing text-format 
Warning:  %s = '%s' is infinite, clamping value.
" was already set.
was deleted
" was listed twice.
 was modified concurrently during serialization.
" was not found or had errors.
)wB9*?@
weak_dependency
When enum name is stripped and label is PascalCased (
" which is.
" which is a proto3 message type.
", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., ".
)", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., "(.
", which is not imported by "
 with type 
WorkshopSetup001
worldgroupid
	worldname
world_offset_angle
world_offset_pos
WorldRendererBuilderMgr001
WorldRendererMgr001
WriteToBuffer Message %s is not initialized! Probably missing required fields!
Writing %d bits for path %s of serializer %s entity %d, this will fail to parse
wrong submessage type
w"@yvJ
\x%02x
x6hz@
x6ij@
x6iz@
X75	`7
x7wB@
x@9)y@9
)x	H@9)
)xhJ@9H
x	h(x!
x_I!9
%x (int:%d, float:%f)
xixJ	
"@y		
)	@y?
	%@y?
y4{(x
	y4xl
>@y?!5kC
y)9@9
y@9	x@9?
y@9)y@9_
(+@yh
y*H@9
y*H@9)
y*H@9)=@
y+H@9*
#@yH[J
#@yHsH
)yhx)$
)Yhx)$
yhz)x
yhz)xK
&@y	i
;@yI|@
y)I@9
:@yJ|@
@y_!(k!
&@yLi
&@yoi
you_hear_them
	You must construct it with ORDERED_CONSTRUCT macro in the dependency resolution function.
(+@ys
ytj*xH
Y`x($
y){*xZ
)#@y*'@y;
	 @y* @y0=@
_Z13V_SplitStringPKcS0_R10CUtlVectorIPc10CUtlMemoryIS2_iEE
_Z14V_stristr_fastPKcS0_
_Z17LoggingSystem_Logi17LoggingSeverity_tPK17LoggingMetaData_tPKcz
_Z17LoggingSystem_Logi17LoggingSeverity_tRK14LeafCodeInfo_tPKcz
_Z6DevMsgPKcz
Z*=@8H
ZA9iZ
ZB9hZ
zB9i~B9hz
_ZdaPv
_ZdlPv
Z_!(k
_ZN12CThreadEvent3SetEv
_ZN12CThreadEventC1Eb
_ZN13CBufferString5PurgeEi
_ZN13CBufferString6InsertEiPKcib
_ZN13CThreadRWLock11UnlockWriteEv
_ZN13CThreadRWLock11WaitForReadEv
_ZN13CThreadRWLock12LockForWriteEv
_ZN16CThreadSemaphore7ReleaseEiPi
_ZN16CThreadSemaphoreD1Ev
_ZN17CThreadSpinRWLock10UnlockReadEv
_ZN17CThreadSpinRWLock11LockForReadEv
_ZN17CThreadSpinRWLock11UnlockWriteEv
_ZN17CThreadSpinRWLock16SpinLockForWriteEy
_ZN17CThreadSyncObjectD2Ev
_ZN21CThreadMultiWaitEvent3SetEv
_ZN22CThreadRWLock_FastRead20UnlockReadAccountingEj
_ZN22CThreadRWLock_FastRead23UnlockRead_LockForWriteEv
_ZN22CThreadRWLock_FastRead25WaitForReadLockTransitionEj
_ZN22CThreadRWLock_FastReadC1Ev
_Znam
_ZNKSt11logic_error4whatEv
_ZNKSt6__ndk16locale9use_facetERNS0_2idE
_ZNKSt6__ndk18ios_base6getlocEv
_ZNSt11logic_errorC2EPKc
_ZNSt6__ndk112__next_primeEm
_ZNSt6__ndk15ctypeIcE2idE
_ZNSt6__ndk16localeC1Ev
_ZNSt6__ndk16localeD1Ev
_ZNSt6__ndk17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE2idE
_ZNSt6__ndk18ios_base4initEPv
_ZNSt6__ndk18ios_base5clearEj
_ZNSt6__ndk18ios_baseD2Ev
_ZNV16CThreadFastMutex4LockEyj
_Znwm
_ZnwmRKSt9nothrow_t
_ZSt18uncaught_exceptionv
_ZSt7nothrow
_ZTIc
_ZTIh
_ZTINSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
_ZTINSt6__ndk121__basic_string_commonILb1EEE
_ZTINSt6__ndk18ios_baseE
_ZTSNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
_ZTSNSt6__ndk121__basic_string_commonILb1EEE
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTVSt12length_error
